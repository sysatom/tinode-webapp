{"version":3,"file":"tinode.dev.js","mappings":"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","sources":["webpack://tinode/webpack/universalModuleDefinition","webpack://tinode/./src/access-mode.js","webpack://tinode/./src/cbuffer.js","webpack://tinode/./src/comm-error.js","webpack://tinode/./src/config.js","webpack://tinode/./src/connection.js","webpack://tinode/./src/db.js","webpack://tinode/./src/drafty.js","webpack://tinode/./src/large-file.js","webpack://tinode/./src/meta-builder.js","webpack://tinode/./src/topic.js","webpack://tinode/./src/utils.js","webpack://tinode/./version.js","webpack://tinode/webpack/bootstrap","webpack://tinode/webpack/runtime/compat get default export","webpack://tinode/webpack/runtime/define property getters","webpack://tinode/webpack/runtime/global","webpack://tinode/webpack/runtime/hasOwnProperty shorthand","webpack://tinode/webpack/runtime/make namespace object","webpack://tinode/./src/tinode.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tinode\"] = factory();\n\telse\n\t\troot[\"tinode\"] = factory();\n})(this, () => {\nreturn ","/**\n * @file Access control model.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\n// NOTE TO DEVELOPERS:\n// Localizable strings should be double quoted \"строка на другом языке\",\n// non-localizable strings should be single quoted 'non-localized'.\n\n/**\n * Helper class for handling access mode.\n *\n * @class AccessMode\n * @memberof Tinode\n *\n * @param {AccessMode|Object=} acs - AccessMode to copy or access mode object received from the server.\n */\nexport default class AccessMode {\n  constructor(acs) {\n    if (acs) {\n      this.given = typeof acs.given == 'number' ? acs.given : AccessMode.decode(acs.given);\n      this.want = typeof acs.want == 'number' ? acs.want : AccessMode.decode(acs.want);\n      this.mode = acs.mode ? (typeof acs.mode == 'number' ? acs.mode : AccessMode.decode(acs.mode)) :\n        (this.given & this.want);\n    }\n  }\n\n  static #checkFlag(val, side, flag) {\n    side = side || 'mode';\n    if (['given', 'want', 'mode'].includes(side)) {\n      return ((val[side] & flag) != 0);\n    }\n    throw new Error(`Invalid AccessMode component '${side}'`);\n  }\n  /**\n   * Parse string into an access mode value.\n   * @memberof Tinode.AccessMode\n   * @static\n   *\n   * @param {string | Number} mode - either a String representation of the access mode to parse or a set of bits to assign.\n   * @returns {number} - Access mode as a numeric value.\n   */\n  static decode(str) {\n    if (!str) {\n      return null;\n    } else if (typeof str == 'number') {\n      return str & AccessMode._BITMASK;\n    } else if (str === 'N' || str === 'n') {\n      return AccessMode._NONE;\n    }\n\n    const bitmask = {\n      'J': AccessMode._JOIN,\n      'R': AccessMode._READ,\n      'W': AccessMode._WRITE,\n      'P': AccessMode._PRES,\n      'A': AccessMode._APPROVE,\n      'S': AccessMode._SHARE,\n      'D': AccessMode._DELETE,\n      'O': AccessMode._OWNER\n    };\n\n    let m0 = AccessMode._NONE;\n\n    for (let i = 0; i < str.length; i++) {\n      const bit = bitmask[str.charAt(i).toUpperCase()];\n      if (!bit) {\n        // Unrecognized bit, skip.\n        continue;\n      }\n      m0 |= bit;\n    }\n    return m0;\n  }\n  /**\n   * Convert numeric representation of the access mode into a string.\n   *\n   * @memberof Tinode.AccessMode\n   * @static\n   *\n   * @param {number} val - access mode value to convert to a string.\n   * @returns {string} - Access mode as a string.\n   */\n  static encode(val) {\n    if (val === null || val === AccessMode._INVALID) {\n      return null;\n    } else if (val === AccessMode._NONE) {\n      return 'N';\n    }\n\n    const bitmask = ['J', 'R', 'W', 'P', 'A', 'S', 'D', 'O'];\n    let res = '';\n    for (let i = 0; i < bitmask.length; i++) {\n      if ((val & (1 << i)) != 0) {\n        res = res + bitmask[i];\n      }\n    }\n    return res;\n  }\n  /**\n   * Update numeric representation of access mode with the new value. The value\n   * is one of the following:\n   *  - a string starting with <code>'+'</code> or <code>'-'</code> then the bits to add or remove, e.g. <code>'+R-W'</code> or <code>'-PS'</code>.\n   *  - a new value of access mode\n   *\n   * @memberof Tinode.AccessMode\n   * @static\n   *\n   * @param {number} val - access mode value to update.\n   * @param {string} upd - update to apply to val.\n   * @returns {number} - updated access mode.\n   */\n  static update(val, upd) {\n    if (!upd || typeof upd != 'string') {\n      return val;\n    }\n\n    let action = upd.charAt(0);\n    if (action == '+' || action == '-') {\n      let val0 = val;\n      // Split delta-string like '+ABC-DEF+Z' into an array of parts including + and -.\n      const parts = upd.split(/([-+])/);\n      // Starting iteration from 1 because String.split() creates an array with the first empty element.\n      // Iterating by 2 because we parse pairs +/- then data.\n      for (let i = 1; i < parts.length - 1; i += 2) {\n        action = parts[i];\n        const m0 = AccessMode.decode(parts[i + 1]);\n        if (m0 == AccessMode._INVALID) {\n          return val;\n        }\n        if (m0 == null) {\n          continue;\n        }\n        if (action === '+') {\n          val0 |= m0;\n        } else if (action === '-') {\n          val0 &= ~m0;\n        }\n      }\n      val = val0;\n    } else {\n      // The string is an explicit new value 'ABC' rather than delta.\n      const val0 = AccessMode.decode(upd);\n      if (val0 != AccessMode._INVALID) {\n        val = val0;\n      }\n    }\n\n    return val;\n  }\n  /**\n   * Bits present in a1 but missing in a2.\n   *\n   * @static\n   * @memberof Tinode\n   *\n   * @param {number | string} a1 - access mode to subtract from.\n   * @param {number | string} a2 - access mode to subtract.\n   * @returns {number} access mode with bits present in <code>a1</code> but missing in <code>a2</code>.\n   */\n  static diff(a1, a2) {\n    a1 = AccessMode.decode(a1);\n    a2 = AccessMode.decode(a2);\n\n    if (a1 == AccessMode._INVALID || a2 == AccessMode._INVALID) {\n      return AccessMode._INVALID;\n    }\n    return a1 & ~a2;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Custom formatter\n   */\n  toString() {\n    return '{\"mode\": \"' + AccessMode.encode(this.mode) +\n      '\", \"given\": \"' + AccessMode.encode(this.given) +\n      '\", \"want\": \"' + AccessMode.encode(this.want) + '\"}';\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Converts numeric values to strings.\n   */\n  jsonHelper() {\n    return {\n      mode: AccessMode.encode(this.mode),\n      given: AccessMode.encode(this.given),\n      want: AccessMode.encode(this.want)\n    };\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Assign value to 'mode'.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {string | Number} m - either a string representation of the access mode or a set of bits.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  setMode(m) {\n    this.mode = AccessMode.decode(m);\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Update <code>mode</code> value.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {string} u - string representation of the changes to apply to access mode.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  updateMode(u) {\n    this.mode = AccessMode.update(this.mode, u);\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Get <code>mode</code> value as a string.\n   * @memberof Tinode.AccessMode\n   *\n   * @returns {string} - <code>mode</code> value.\n   */\n  getMode() {\n    return AccessMode.encode(this.mode);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Assign <code>given</code>  value.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {string | Number} g - either a string representation of the access mode or a set of bits.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  setGiven(g) {\n    this.given = AccessMode.decode(g);\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Update 'given' value.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {string} u - string representation of the changes to apply to access mode.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  updateGiven(u) {\n    this.given = AccessMode.update(this.given, u);\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Get 'given' value as a string.\n   * @memberof Tinode.AccessMode\n   *\n   * @returns {string} - <b>given</b> value.\n   */\n  getGiven() {\n    return AccessMode.encode(this.given);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Assign 'want' value.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {string | Number} w - either a string representation of the access mode or a set of bits.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  setWant(w) {\n    this.want = AccessMode.decode(w);\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Update 'want' value.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {string} u - string representation of the changes to apply to access mode.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  updateWant(u) {\n    this.want = AccessMode.update(this.want, u);\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Get 'want' value as a string.\n   * @memberof Tinode.AccessMode\n   *\n   * @returns {string} - <b>want</b> value.\n   */\n  getWant() {\n    return AccessMode.encode(this.want);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Get permissions present in 'want' but missing in 'given'.\n   * Inverse of {@link Tinode.AccessMode#getExcessive}\n   *\n   * @memberof Tinode.AccessMode\n   *\n   * @returns {string} permissions present in <b>want</b> but missing in <b>given</b>.\n   */\n  getMissing() {\n    return AccessMode.encode(this.want & ~this.given);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Get permissions present in 'given' but missing in 'want'.\n   * Inverse of {@link Tinode.AccessMode#getMissing}\n   * @memberof Tinode.AccessMode\n   *\n   * @returns {string} permissions present in <b>given</b> but missing in <b>want</b>.\n   */\n  getExcessive() {\n    return AccessMode.encode(this.given & ~this.want);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Update 'want', 'give', and 'mode' values.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {AccessMode} val - new access mode value.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  updateAll(val) {\n    if (val) {\n      this.updateGiven(val.given);\n      this.updateWant(val.want);\n      this.mode = this.given & this.want;\n    }\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Owner (O) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isOwner(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._OWNER);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Presence (P) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isPresencer(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._PRES);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Presence (P) flag is NOT set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isMuted(side) {\n    return !this.isPresencer(side);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Join (J) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isJoiner(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._JOIN);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Reader (R) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isReader(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._READ);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Writer (W) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isWriter(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._WRITE);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Approver (A) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isApprover(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._APPROVE);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if either one of Owner (O) or Approver (A) flags is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isAdmin(side) {\n    return this.isOwner(side) || this.isApprover(side);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if either one of Owner (O), Approver (A), or Sharer (S) flags is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isSharer(side) {\n    return this.isAdmin(side) || AccessMode.#checkFlag(this, side, AccessMode._SHARE);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Deleter (D) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isDeleter(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._DELETE);\n  }\n}\n\nAccessMode._NONE = 0x00;\nAccessMode._JOIN = 0x01;\nAccessMode._READ = 0x02;\nAccessMode._WRITE = 0x04;\nAccessMode._PRES = 0x08;\nAccessMode._APPROVE = 0x10;\nAccessMode._SHARE = 0x20;\nAccessMode._DELETE = 0x40;\nAccessMode._OWNER = 0x80;\n\nAccessMode._BITMASK = AccessMode._JOIN | AccessMode._READ | AccessMode._WRITE | AccessMode._PRES |\n  AccessMode._APPROVE | AccessMode._SHARE | AccessMode._DELETE | AccessMode._OWNER;\nAccessMode._INVALID = 0x100000;\n","/**\n * @file In-memory sorted cache of objects.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\n/**\n * In-memory sorted cache of objects.\n *\n * @class CBuffer\n * @memberof Tinode\n * @protected\n *\n * @param {function} compare custom comparator of objects. Takes two parameters <code>a</code> and <code>b</code>;\n *    returns <code>-1</code> if <code>a < b</code>, <code>0</code> if <code>a == b</code>, <code>1</code> otherwise.\n * @param {boolean} unique enforce element uniqueness: when <code>true</code> replace existing element with a new\n *    one on conflict; when <code>false</code> keep both elements.\n */\nexport default class CBuffer {\n  #comparator = undefined;\n  #unique = false;\n  buffer = [];\n\n  constructor(compare_, unique_) {\n    this.#comparator = compare_ || ((a, b) => {\n      return a === b ? 0 : a < b ? -1 : 1;\n    });\n    this.#unique = unique_;\n  }\n\n  #findNearest(elem, arr, exact) {\n    let start = 0;\n    let end = arr.length - 1;\n    let pivot = 0;\n    let diff = 0;\n    let found = false;\n\n    while (start <= end) {\n      pivot = (start + end) / 2 | 0;\n      diff = this.#comparator(arr[pivot], elem);\n      if (diff < 0) {\n        start = pivot + 1;\n      } else if (diff > 0) {\n        end = pivot - 1;\n      } else {\n        found = true;\n        break;\n      }\n    }\n    if (found) {\n      return {\n        idx: pivot,\n        exact: true\n      };\n    }\n    if (exact) {\n      return {\n        idx: -1\n      };\n    }\n    // Not exact - insertion point\n    return {\n      idx: diff < 0 ? pivot + 1 : pivot\n    };\n  }\n\n  // Insert element into a sorted array.\n  #insertSorted(elem, arr) {\n    const found = this.#findNearest(elem, arr, false);\n    const count = (found.exact && this.#unique) ? 1 : 0;\n    arr.splice(found.idx, count, elem);\n    return arr;\n  }\n\n  /**\n   * Get an element at the given position.\n   * @memberof Tinode.CBuffer#\n   * @param {number} at - Position to fetch from.\n   * @returns {Object} Element at the given position or <code>undefined</code>.\n   */\n  getAt(at) {\n    return this.buffer[at];\n  }\n\n  /**\n   * Convenience method for getting the element from the end of the buffer.\n   * @memberof Tinode.CBuffer#\n   * @param {number} at - position to fetch from, counting from the end;\n   *    <code>undefined</code> or <code>null</code>  mean \"last\".\n   * @returns {Object} The last element in the buffer or <code>undefined</code> if buffer is empty.\n   */\n  getLast(at) {\n    at |= 0;\n    return this.buffer.length > at ? this.buffer[this.buffer.length - 1 - at] : undefined;\n  }\n\n  /**\n   * Add new element(s) to the buffer. Variadic: takes one or more arguments. If an array is passed as a single\n   * argument, its elements are inserted individually.\n   * @memberof Tinode.CBuffer#\n   *\n   * @param {...Object|Array} - One or more objects to insert.\n   */\n  put() {\n    let insert;\n    // inspect arguments: if array, insert its elements, if one or more non-array arguments, insert them one by one\n    if (arguments.length == 1 && Array.isArray(arguments[0])) {\n      insert = arguments[0];\n    } else {\n      insert = arguments;\n    }\n    for (let idx in insert) {\n      this.#insertSorted(insert[idx], this.buffer);\n    }\n  }\n\n  /**\n   * Remove element at the given position.\n   * @memberof Tinode.CBuffer#\n   * @param {number} at - Position to delete at.\n   * @returns {Object} Element at the given position or <code>undefined</code>.\n   */\n  delAt(at) {\n    at |= 0;\n    let r = this.buffer.splice(at, 1);\n    if (r && r.length > 0) {\n      return r[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove elements between two positions.\n   * @memberof Tinode.CBuffer#\n   * @param {number} since - Position to delete from (inclusive).\n   * @param {number} before - Position to delete to (exclusive).\n   *\n   * @returns {Array} array of removed elements (could be zero length).\n   */\n  delRange(since, before) {\n    return this.buffer.splice(since, before - since);\n  }\n\n  /**\n   * Return the number of elements the buffer holds.\n   * @memberof Tinode.CBuffer#\n   * @return {number} Number of elements in the buffer.\n   */\n  length() {\n    return this.buffer.length;\n  }\n\n  /**\n   * Reset the buffer discarding all elements\n   * @memberof Tinode.CBuffer#\n   */\n  reset() {\n    this.buffer = [];\n  }\n\n  /**\n   * Callback for iterating contents of buffer. See {@link Tinode.CBuffer#forEach}.\n   * @callback ForEachCallbackType\n   * @memberof Tinode.CBuffer#\n   * @param {Object} elem - Current element of the buffer.\n   * @param {Object} prev - Previous element of the buffer.\n   * @param {Object} next - Next element of the buffer.\n   * @param {number} index - Index of the current element.\n   */\n\n  /**\n   * Apply given <code>callback</code> to all elements of the buffer.\n   * @memberof Tinode.CBuffer#\n   *\n   * @param {Tinode.ForEachCallbackType} callback - Function to call for each element.\n   * @param {number} startIdx - Optional index to start iterating from (inclusive).\n   * @param {number} beforeIdx - Optional index to stop iterating before (exclusive).\n   * @param {Object} context - calling context (i.e. value of <code>this</code> in callback)\n   */\n  forEach(callback, startIdx, beforeIdx, context) {\n    startIdx = startIdx | 0;\n    beforeIdx = beforeIdx || this.buffer.length;\n\n    for (let i = startIdx; i < beforeIdx; i++) {\n      callback.call(context, this.buffer[i],\n        (i > startIdx ? this.buffer[i - 1] : undefined),\n        (i < beforeIdx - 1 ? this.buffer[i + 1] : undefined), i);\n    }\n  }\n\n  /**\n   * Find element in buffer using buffer's comparison function.\n   * @memberof Tinode.CBuffer#\n   *\n   * @param {Object} elem - element to find.\n   * @param {boolean=} nearest - when true and exact match is not found, return the nearest element (insertion point).\n   * @returns {number} index of the element in the buffer or -1.\n   */\n  find(elem, nearest) {\n    const {\n      idx\n    } = this.#findNearest(elem, this.buffer, !nearest);\n    return idx;\n  }\n\n  /**\n   * Callback for filtering the buffer. See {@link Tinode.CBuffer#filter}.\n   * @callback FilterCallbackType\n   * @memberof Tinode.CBuffer#\n   * @param {Object} elem - Current element of the buffer.\n   * @param {number} index - Index of the current element.\n   * @returns {boolen} <code>true</code> to keep the element, <code>false</code> to remove.\n   */\n\n  /**\n   * Remove all elements that do not pass the test implemented by the provided callback function.\n   * @memberof Tinode.CBuffer#\n   *\n   * @param {Tinode.FilterCallbackType} callback - Function to call for each element.\n   * @param {Object} context - calling context (i.e. value of <code>this</code> in the callback)\n   */\n  filter(callback, context) {\n    let count = 0;\n    for (let i = 0; i < this.buffer.length; i++) {\n      if (callback.call(context, this.buffer[i], i)) {\n        this.buffer[count] = this.buffer[i];\n        count++;\n      }\n    }\n\n    this.buffer.splice(count);\n  }\n\n  /**\n   * Check if buffer is empty.\n   * @returns {boolean} <code>true</code> if the buffer is empty, <code>false</code> otherwise.\n   */\n  isEmpty() {\n    return this.buffer.length == 0;\n  }\n}\n","/**\n * @file Throwable error with numeric error code.\n *\n * @copyright 2015-2023 Tinode LLC.\n */\n'use strict';\n\nexport default class CommError extends Error {\n  constructor(message, code) {\n    super(`${message} (${code})`);\n    this.name = 'CommError';\n    this.code = code;\n  }\n}\n","/**\n * @file Global constants and configuration parameters.\n *\n * @copyright 2015-2023 Tinode LLC\n */\n'use strict';\n\nimport {\n  PACKAGE_VERSION\n} from '../version.js';\n\n// Global constants\nexport const PROTOCOL_VERSION = '0'; // Major component of the version, e.g. '0' in '0.17.1'.\nexport const VERSION = PACKAGE_VERSION || '0.21';\nexport const LIBRARY = 'tinodejs/' + VERSION;\n\n// Topic name prefixes.\nexport const TOPIC_NEW = 'new';\nexport const TOPIC_NEW_CHAN = 'nch';\nexport const TOPIC_ME = 'me';\nexport const TOPIC_FND = 'fnd';\nexport const TOPIC_SYS = 'sys';\nexport const TOPIC_CHAN = 'chn';\nexport const TOPIC_GRP = 'grp';\nexport const TOPIC_P2P = 'p2p';\nexport const USER_NEW = 'new';\n\n// Starting value of a locally-generated seqId used for pending messages.\nexport const LOCAL_SEQID = 0xFFFFFFF;\n\n// Status codes.\nexport const MESSAGE_STATUS_NONE = 0; // Status not assigned.\nexport const MESSAGE_STATUS_QUEUED = 10; // Local ID assigned, in progress to be sent.\nexport const MESSAGE_STATUS_SENDING = 20; // Transmission started.\nexport const MESSAGE_STATUS_FAILED = 30; // At least one attempt was made to send the message.\nexport const MESSAGE_STATUS_FATAL = 40; // Message sending failed and it should not be retried.\nexport const MESSAGE_STATUS_SENT = 50; // Delivered to the server.\nexport const MESSAGE_STATUS_RECEIVED = 60; // Received by the client.\nexport const MESSAGE_STATUS_READ = 70; // Read by the user.\nexport const MESSAGE_STATUS_TO_ME = 80; // The message is received from another user.\n\n// Reject unresolved futures after this many milliseconds.\nexport const EXPIRE_PROMISES_TIMEOUT = 5_000;\n// Periodicity of garbage collection of unresolved futures.\nexport const EXPIRE_PROMISES_PERIOD = 1_000;\n\n// Delay before acknowledging that a message was recived.\nexport const RECV_TIMEOUT = 100;\n\n// Default number of messages to pull into memory from persistent cache.\nexport const DEFAULT_MESSAGES_PAGE = 24;\n\n// Unicode DEL character indicating data was deleted.\nexport const DEL_CHAR = '\\u2421';\n","/**\n * @file Abstraction layer for websocket and long polling connections.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\nimport CommError from './comm-error.js';\nimport {\n  jsonParseHelper\n} from './utils.js';\n\nlet WebSocketProvider;\nlet XHRProvider;\n\n// Error code to return in case of a network problem.\nconst NETWORK_ERROR = 503;\nconst NETWORK_ERROR_TEXT = \"Connection failed\";\n\n// Error code to return when user disconnected from server.\nconst NETWORK_USER = 418;\nconst NETWORK_USER_TEXT = \"Disconnected by client\";\n\n// Settings for exponential backoff\nconst _BOFF_BASE = 2000; // 2000 milliseconds, minimum delay between reconnects\nconst _BOFF_MAX_ITER = 10; // Maximum delay between reconnects 2^10 * 2000 ~ 34 minutes\nconst _BOFF_JITTER = 0.3; // Add random delay\n\n// Helper function for creating an endpoint URL.\nfunction makeBaseUrl(host, protocol, version, apiKey) {\n  let url = null;\n\n  if (['http', 'https', 'ws', 'wss'].includes(protocol)) {\n    url = `${protocol}://${host}`;\n    if (url.charAt(url.length - 1) !== '/') {\n      url += '/';\n    }\n    url += 'v' + version + '/channels';\n    if (['http', 'https'].includes(protocol)) {\n      // Long polling endpoint ends with \"lp\", i.e.\n      // '/v0/channels/lp' vs just '/v0/channels' for ws\n      url += '/lp';\n    }\n    url += '?apikey=' + apiKey;\n  }\n  return url;\n}\n\n/**\n * An abstraction for a websocket or a long polling connection.\n *\n * @class Connection\n * @memberof Tinode\n\n * @param {Object} config - configuration parameters.\n * @param {string} config.host - Host name and optional port number to connect to.\n * @param {string} config.apiKey - API key generated by <code>keygen</code>.\n * @param {string} config.transport - Network transport to use, either <code>\"ws\"<code>/<code>\"wss\"</code> for websocket or\n *      <code>lp</code> for long polling.\n * @param {boolean} config.secure - Use Secure WebSocket if <code>true</code>.\n * @param {string} version_ - Major value of the protocol version, e.g. '0' in '0.17.1'.\n * @param {boolean} autoreconnect_ - If connection is lost, try to reconnect automatically.\n */\nexport default class Connection {\n  // Logger, does nothing by default.\n  static #log = _ => {};\n\n  #boffTimer = null;\n  #boffIteration = 0;\n  #boffClosed = false; // Indicator if the socket was manually closed - don't autoreconnect if true.\n\n  // Websocket.\n  #socket = null;\n\n  host;\n  secure;\n  apiKey;\n\n  version;\n  autoreconnect;\n\n  initialized;\n\n  // (config.host, config.apiKey, config.transport, config.secure), PROTOCOL_VERSION, true\n  constructor(config, version_, autoreconnect_) {\n    this.host = config.host;\n    this.secure = config.secure;\n    this.apiKey = config.apiKey;\n\n    this.version = version_;\n    this.autoreconnect = autoreconnect_;\n\n    if (config.transport === 'lp') {\n      // explicit request to use long polling\n      this.#init_lp();\n      this.initialized = 'lp';\n    } else if (config.transport === 'ws') {\n      // explicit request to use web socket\n      // if websockets are not available, horrible things will happen\n      this.#init_ws();\n      this.initialized = 'ws';\n    }\n\n    if (!this.initialized) {\n      // Invalid or undefined network transport.\n      Connection.#log(\"Unknown or invalid network transport. Running under Node? Call 'Tinode.setNetworkProviders()'.\");\n      throw new Error(\"Unknown or invalid network transport. Running under Node? Call 'Tinode.setNetworkProviders()'.\");\n    }\n  }\n\n  /**\n   * To use Connection in a non browser context, supply WebSocket and XMLHttpRequest providers.\n   * @static\n   * @memberof Connection\n   * @param wsProvider WebSocket provider, e.g. for nodeJS , <code>require('ws')</code>.\n   * @param xhrProvider XMLHttpRequest provider, e.g. for node <code>require('xhr')</code>.\n   */\n  static setNetworkProviders(wsProvider, xhrProvider) {\n    WebSocketProvider = wsProvider;\n    XHRProvider = xhrProvider;\n  }\n\n  /**\n   * Assign a non-default logger.\n   * @static\n   * @memberof Connection\n   * @param {function} l variadic logging function.\n   */\n  static set logger(l) {\n    Connection.#log = l;\n  }\n\n  /**\n   * Initiate a new connection\n   * @memberof Tinode.Connection#\n   * @param {string} host_ Host name to connect to; if <code>null</code> the old host name will be used.\n   * @param {boolean} force Force new connection even if one already exists.\n   * @return {Promise} Promise resolved/rejected when the connection call completes, resolution is called without\n   *  parameters, rejection passes the {Error} as parameter.\n   */\n  connect(host_, force) {\n    return Promise.reject(null);\n  }\n\n  /**\n   * Try to restore a network connection, also reset backoff.\n   * @memberof Tinode.Connection#\n   *\n   * @param {boolean} force - reconnect even if there is a live connection already.\n   */\n  reconnect(force) {}\n\n  /**\n   * Terminate the network connection\n   * @memberof Tinode.Connection#\n   */\n  disconnect() {}\n\n  /**\n   * Send a string to the server.\n   * @memberof Tinode.Connection#\n   *\n   * @param {string} msg - String to send.\n   * @throws Throws an exception if the underlying connection is not live.\n   */\n  sendText(msg) {}\n\n  /**\n   * Check if connection is alive.\n   * @memberof Tinode.Connection#\n   * @returns {boolean} <code>true</code> if connection is live, <code>false</code> otherwise.\n   */\n  isConnected() {\n    return false;\n  }\n\n  /**\n   * Get the name of the current network transport.\n   * @memberof Tinode.Connection#\n   * @returns {string} name of the transport such as <code>\"ws\"</code> or <code>\"lp\"</code>.\n   */\n  transport() {\n    return this.initialized;\n  }\n\n  /**\n   * Send network probe to check if connection is indeed live.\n   * @memberof Tinode.Connection#\n   */\n  probe() {\n    this.sendText('1');\n  }\n\n  /**\n   * Reset autoreconnect counter to zero.\n   * @memberof Tinode.Connection#\n   */\n  backoffReset() {\n    this.#boffReset();\n  }\n\n  // Backoff implementation - reconnect after a timeout.\n  #boffReconnect() {\n    // Clear timer\n    clearTimeout(this.#boffTimer);\n    // Calculate when to fire the reconnect attempt\n    const timeout = _BOFF_BASE * (Math.pow(2, this.#boffIteration) * (1.0 + _BOFF_JITTER * Math.random()));\n    // Update iteration counter for future use\n    this.#boffIteration = (this.#boffIteration >= _BOFF_MAX_ITER ? this.#boffIteration : this.#boffIteration + 1);\n    if (this.onAutoreconnectIteration) {\n      this.onAutoreconnectIteration(timeout);\n    }\n\n    this.#boffTimer = setTimeout(_ => {\n      Connection.#log(`Reconnecting, iter=${this.#boffIteration}, timeout=${timeout}`);\n      // Maybe the socket was closed while we waited for the timer?\n      if (!this.#boffClosed) {\n        const prom = this.connect();\n        if (this.onAutoreconnectIteration) {\n          this.onAutoreconnectIteration(0, prom);\n        } else {\n          // Suppress error if it's not used.\n          prom.catch(_ => {\n            /* do nothing */\n          });\n        }\n      } else if (this.onAutoreconnectIteration) {\n        this.onAutoreconnectIteration(-1);\n      }\n    }, timeout);\n  }\n\n  // Terminate auto-reconnect process.\n  #boffStop() {\n    clearTimeout(this.#boffTimer);\n    this.#boffTimer = null;\n  }\n\n  // Reset auto-reconnect iteration counter.\n  #boffReset() {\n    this.#boffIteration = 0;\n  }\n\n  // Initialization for long polling.\n  #init_lp() {\n    const XDR_UNSENT = 0; // Client has been created. open() not called yet.\n    const XDR_OPENED = 1; // open() has been called.\n    const XDR_HEADERS_RECEIVED = 2; // send() has been called, and headers and status are available.\n    const XDR_LOADING = 3; // Downloading; responseText holds partial data.\n    const XDR_DONE = 4; // The operation is complete.\n\n    // Fully composed endpoint URL, with API key & SID\n    let _lpURL = null;\n\n    let _poller = null;\n    let _sender = null;\n\n    let lp_sender = (url_) => {\n      const sender = new XHRProvider();\n      sender.onreadystatechange = (evt) => {\n        if (sender.readyState == XDR_DONE && sender.status >= 400) {\n          // Some sort of error response\n          throw new CommError(\"LP sender failed\", sender.status);\n        }\n      };\n\n      sender.open('POST', url_, true);\n      return sender;\n    }\n\n    let lp_poller = (url_, resolve, reject) => {\n      let poller = new XHRProvider();\n      let promiseCompleted = false;\n\n      poller.onreadystatechange = evt => {\n        if (poller.readyState == XDR_DONE) {\n          if (poller.status == 201) { // 201 == HTTP.Created, get SID\n            let pkt = JSON.parse(poller.responseText, jsonParseHelper);\n            _lpURL = url_ + '&sid=' + pkt.ctrl.params.sid;\n            poller = lp_poller(_lpURL);\n            poller.send(null);\n            if (this.onOpen) {\n              this.onOpen();\n            }\n\n            if (resolve) {\n              promiseCompleted = true;\n              resolve();\n            }\n\n            if (this.autoreconnect) {\n              this.#boffStop();\n            }\n          } else if (poller.status > 0 && poller.status < 400) { // 0 = network error; 400 = HTTP.BadRequest\n            if (this.onMessage) {\n              this.onMessage(poller.responseText);\n            }\n            poller = lp_poller(_lpURL);\n            poller.send(null);\n          } else {\n            // Don't throw an error here, gracefully handle server errors\n            if (reject && !promiseCompleted) {\n              promiseCompleted = true;\n              reject(poller.responseText);\n            }\n            if (this.onMessage && poller.responseText) {\n              this.onMessage(poller.responseText);\n            }\n            if (this.onDisconnect) {\n              const code = poller.status || (this.#boffClosed ? NETWORK_USER : NETWORK_ERROR);\n              const text = poller.responseText || (this.#boffClosed ? NETWORK_USER_TEXT : NETWORK_ERROR_TEXT);\n              this.onDisconnect(new CommError(text, code), code);\n            }\n\n            // Polling has stopped. Indicate it by setting poller to null.\n            poller = null;\n            if (!this.#boffClosed && this.autoreconnect) {\n              this.#boffReconnect();\n            }\n          }\n        }\n      };\n      // Using POST to avoid caching response by service worker.\n      poller.open('POST', url_, true);\n      return poller;\n    }\n\n    this.connect = (host_, force) => {\n      this.#boffClosed = false;\n\n      if (_poller) {\n        if (!force) {\n          return Promise.resolve();\n        }\n        _poller.onreadystatechange = undefined;\n        _poller.abort();\n        _poller = null;\n      }\n\n      if (host_) {\n        this.host = host_;\n      }\n\n      return new Promise((resolve, reject) => {\n        const url = makeBaseUrl(this.host, this.secure ? 'https' : 'http', this.version, this.apiKey);\n        Connection.#log(\"LP connecting to:\", url);\n        _poller = lp_poller(url, resolve, reject);\n        _poller.send(null);\n      }).catch(err => {\n        Connection.#log(\"LP connection failed:\", err);\n      });\n    };\n\n    this.reconnect = force => {\n      this.#boffStop();\n      this.connect(null, force);\n    };\n\n    this.disconnect = _ => {\n      this.#boffClosed = true;\n      this.#boffStop();\n\n      if (_sender) {\n        _sender.onreadystatechange = undefined;\n        _sender.abort();\n        _sender = null;\n      }\n      if (_poller) {\n        _poller.onreadystatechange = undefined;\n        _poller.abort();\n        _poller = null;\n      }\n\n      if (this.onDisconnect) {\n        this.onDisconnect(new CommError(NETWORK_USER_TEXT, NETWORK_USER), NETWORK_USER);\n      }\n      // Ensure it's reconstructed\n      _lpURL = null;\n    };\n\n    this.sendText = (msg) => {\n      _sender = lp_sender(_lpURL);\n      if (_sender && (_sender.readyState == XDR_OPENED)) { // 1 == OPENED\n        _sender.send(msg);\n      } else {\n        throw new Error(\"Long poller failed to connect\");\n      }\n    };\n\n    this.isConnected = _ => {\n      return (_poller && true);\n    };\n  }\n\n  // Initialization for Websocket\n  #init_ws() {\n    this.connect = (host_, force) => {\n      this.#boffClosed = false;\n\n      if (this.#socket) {\n        if (!force && this.#socket.readyState == this.#socket.OPEN) {\n          return Promise.resolve();\n        }\n        this.#socket.close();\n        this.#socket = null;\n      }\n\n      if (host_) {\n        this.host = host_;\n      }\n\n      return new Promise((resolve, reject) => {\n        const url = makeBaseUrl(this.host, this.secure ? 'wss' : 'ws', this.version, this.apiKey);\n\n        Connection.#log(\"WS connecting to: \", url);\n\n        // It throws when the server is not accessible but the exception cannot be caught:\n        // https://stackoverflow.com/questions/31002592/javascript-doesnt-catch-error-in-websocket-instantiation/31003057\n        const conn = new WebSocketProvider(url);\n\n        conn.onerror = err => {\n          reject(err);\n        };\n\n        conn.onopen = _ => {\n          if (this.autoreconnect) {\n            this.#boffStop();\n          }\n\n          if (this.onOpen) {\n            this.onOpen();\n          }\n\n          resolve();\n        };\n\n        conn.onclose = _ => {\n          this.#socket = null;\n\n          if (this.onDisconnect) {\n            const code = this.#boffClosed ? NETWORK_USER : NETWORK_ERROR;\n            this.onDisconnect(new CommError(this.#boffClosed ? NETWORK_USER_TEXT : NETWORK_ERROR_TEXT, code), code);\n          }\n\n          if (!this.#boffClosed && this.autoreconnect) {\n            this.#boffReconnect();\n          }\n        };\n\n        conn.onmessage = evt => {\n          if (this.onMessage) {\n            this.onMessage(evt.data);\n          }\n        };\n\n        this.#socket = conn;\n      });\n    }\n\n    this.reconnect = force => {\n      this.#boffStop();\n      this.connect(null, force);\n    };\n\n    this.disconnect = _ => {\n      this.#boffClosed = true;\n      this.#boffStop();\n\n      if (!this.#socket) {\n        return;\n      }\n      this.#socket.close();\n      this.#socket = null;\n    };\n\n    this.sendText = msg => {\n      if (this.#socket && (this.#socket.readyState == this.#socket.OPEN)) {\n        this.#socket.send(msg);\n      } else {\n        throw new Error(\"Websocket is not connected\");\n      }\n    };\n\n    this.isConnected = _ => {\n      return (this.#socket && (this.#socket.readyState == this.#socket.OPEN));\n    };\n  }\n\n  // Callbacks:\n\n  /**\n   * A callback to pass incoming messages to. See {@link Tinode.Connection#onMessage}.\n   * @callback Tinode.Connection.OnMessage\n   * @memberof Tinode.Connection\n   * @param {string} message - Message to process.\n   */\n  onMessage = undefined;\n\n  /**\n   * A callback for reporting a dropped connection.\n   * @type {function}\n   * @memberof Tinode.Connection#\n   */\n  onDisconnect = undefined;\n\n  /**\n   * A callback called when the connection is ready to be used for sending. For websockets it's socket open,\n   * for long polling it's <code>readyState=1</code> (OPENED)\n   * @type {function}\n   * @memberof Tinode.Connection#\n   */\n  onOpen = undefined;\n\n  /**\n   * A callback to notify of reconnection attempts. See {@link Tinode.Connection#onAutoreconnectIteration}.\n   * @memberof Tinode.Connection\n   * @callback AutoreconnectIterationType\n   * @param {string} timeout - time till the next reconnect attempt in milliseconds. <code>-1</code> means reconnect was skipped.\n   * @param {Promise} promise resolved or rejected when the reconnect attemp completes.\n   *\n   */\n  /**\n   * A callback to inform when the next attampt to reconnect will happen and to receive connection promise.\n   * @memberof Tinode.Connection#\n   * @type {Tinode.Connection.AutoreconnectIterationType}\n   */\n  onAutoreconnectIteration = undefined;\n}\n\nConnection.NETWORK_ERROR = NETWORK_ERROR;\nConnection.NETWORK_ERROR_TEXT = NETWORK_ERROR_TEXT;\nConnection.NETWORK_USER = NETWORK_USER;\nConnection.NETWORK_USER_TEXT = NETWORK_USER_TEXT;\n","/**\n * @file Helper methods for dealing with IndexedDB cache of messages, users, and topics.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\n// NOTE TO DEVELOPERS:\n// Localizable strings should be double quoted \"строка на другом языке\",\n// non-localizable strings should be single quoted 'non-localized'.\n\nconst DB_VERSION = 1;\nconst DB_NAME = 'tinode-web';\n\nlet IDBProvider;\n\nexport default class DB {\n  #onError = _ => {};\n  #logger = _ => {};\n\n  // Instance of IndexDB.\n  db = null;\n  // Indicator that the cache is disabled.\n  disabled = false;\n\n  constructor(onError, logger) {\n    this.#onError = onError || this.#onError;\n    this.#logger = logger || this.#logger;\n  }\n\n  #mapObjects(source, callback, context) {\n    if (!this.db) {\n      return disabled ?\n        Promise.resolve([]) :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction([source]);\n      trx.onerror = event => {\n        this.#logger('PCache', 'mapObjects', source, event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore(source).getAll().onsuccess = event => {\n        if (callback) {\n          event.target.result.forEach(topic => {\n            callback.call(context, topic);\n          });\n        }\n        resolve(event.target.result);\n      };\n    });\n  }\n\n  /**\n   * Initialize persistent cache: open or create/upgrade if needed.\n   * @returns {Promise} promise to be resolved/rejected when the DB is initialized.\n   */\n  initDatabase() {\n    return new Promise((resolve, reject) => {\n      // Open the database and initialize callbacks.\n      const req = IDBProvider.open(DB_NAME, DB_VERSION);\n      req.onsuccess = event => {\n        this.db = event.target.result;\n        this.disabled = false;\n        resolve(this.db);\n      };\n      req.onerror = event => {\n        this.#logger('PCache', \"failed to initialize\", event);\n        reject(event.target.error);\n        this.#onError(event.target.error);\n      };\n      req.onupgradeneeded = event => {\n        this.db = event.target.result;\n\n        this.db.onerror = event => {\n          this.#logger('PCache', \"failed to create storage\", event);\n          this.#onError(event.target.error);\n        };\n\n        // Individual object stores.\n        // Object store (table) for topics. The primary key is topic name.\n        this.db.createObjectStore('topic', {\n          keyPath: 'name'\n        });\n\n        // Users object store. UID is the primary key.\n        this.db.createObjectStore('user', {\n          keyPath: 'uid'\n        });\n\n        // Subscriptions object store topic <-> user. Topic name + UID is the primary key.\n        this.db.createObjectStore('subscription', {\n          keyPath: ['topic', 'uid']\n        });\n\n        // Messages object store. The primary key is topic name + seq.\n        this.db.createObjectStore('message', {\n          keyPath: ['topic', 'seq']\n        });\n      };\n    });\n  }\n\n  /**\n   * Delete persistent cache.\n   */\n  deleteDatabase() {\n    // Close connection, otherwise operations will fail with 'onblocked'.\n    if (this.db) {\n      this.db.close();\n      this.db = null;\n    }\n    return new Promise((resolve, reject) => {\n      const req = IDBProvider.deleteDatabase(DB_NAME);\n      req.onblocked = _ => {\n        if (this.db) {\n          this.db.close();\n        }\n        const err = new Error(\"blocked\");\n        this.#logger('PCache', 'deleteDatabase', err);\n        reject(err);\n      };\n      req.onsuccess = _ => {\n        this.db = null;\n        this.disabled = true;\n        resolve(true);\n      };\n      req.onerror = event => {\n        this.#logger('PCache', 'deleteDatabase', event.target.error);\n        reject(event.target.error);\n      };\n    });\n  }\n\n  /**\n   * Check if persistent cache is ready for use.\n   * @memberOf DB\n   * @returns {boolean} <code>true</code> if cache is ready, <code>false</code> otherwise.\n   */\n  isReady() {\n    return !!this.db;\n  }\n\n  // Topics.\n\n  /**\n   * Save to cache or update topic in persistent cache.\n   * @memberOf DB\n   * @param {Topic} topic - topic to be added or updated.\n   * @returns {Promise} promise resolved/rejected on operation completion.\n   */\n  updTopic(topic) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['topic'], 'readwrite');\n      trx.oncomplete = event => {\n        resolve(event.target.result);\n      };\n      trx.onerror = event => {\n        this.#logger('PCache', 'updTopic', event.target.error);\n        reject(event.target.error);\n      };\n      const req = trx.objectStore('topic').get(topic.name);\n      req.onsuccess = _ => {\n        trx.objectStore('topic').put(DB.#serializeTopic(req.result, topic));\n        trx.commit();\n      };\n    });\n  }\n\n  /**\n   * Mark or unmark topic as deleted.\n   * @memberOf DB\n   * @param {string} name - name of the topic to mark or unmark.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  markTopicAsDeleted(name) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['topic'], 'readwrite');\n      trx.oncomplete = event => {\n        resolve(event.target.result);\n      };\n      trx.onerror = event => {\n        this.#logger('PCache', 'markTopicAsDeleted', event.target.error);\n        reject(event.target.error);\n      };\n      const req = trx.objectStore('topic').get(name);\n      req.onsuccess = event => {\n        const topic = event.target.result;\n        topic._deleted = true;\n        trx.objectStore('topic').put(topic);\n        trx.commit();\n      };\n    });\n  }\n\n  /**\n   * Remove topic from persistent cache.\n   * @memberOf DB\n   * @param {string} name - name of the topic to remove from database.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  remTopic(name) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['topic', 'subscription', 'message'], 'readwrite');\n      trx.oncomplete = event => {\n        resolve(event.target.result);\n      };\n      trx.onerror = event => {\n        this.#logger('PCache', 'remTopic', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('topic').delete(IDBKeyRange.only(name));\n      trx.objectStore('subscription').delete(IDBKeyRange.bound([name, '-'], [name, '~']));\n      trx.objectStore('message').delete(IDBKeyRange.bound([name, 0], [name, Number.MAX_SAFE_INTEGER]));\n      trx.commit();\n    });\n  }\n\n  /**\n   * Execute a callback for each stored topic.\n   * @memberOf DB\n   * @param {function} callback - function to call for each topic.\n   * @param {Object} context - the value or <code>this</code> inside the callback.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  mapTopics(callback, context) {\n    return this.#mapObjects('topic', callback, context);\n  }\n\n  /**\n   * Copy data from serialized object to topic.\n   * @memberOf DB\n   * @param {Topic} topic - target to deserialize to.\n   * @param {Object} src - serialized data to copy from.\n   */\n  deserializeTopic(topic, src) {\n    DB.#deserializeTopic(topic, src);\n  }\n\n  // Users.\n  /**\n   * Add or update user object in the persistent cache.\n   * @memberOf DB\n   * @param {string} uid - ID of the user to save or update.\n   * @param {Object} pub - user's <code>public</code> information.\n   * @returns {Promise} promise resolved/rejected on operation completion.\n   */\n  updUser(uid, pub) {\n    if (arguments.length < 2 || pub === undefined) {\n      // No point inupdating user with invalid data.\n      return;\n    }\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['user'], 'readwrite');\n      trx.oncomplete = event => {\n        resolve(event.target.result);\n      };\n      trx.onerror = event => {\n        this.#logger('PCache', 'updUser', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('user').put({\n        uid: uid,\n        public: pub\n      });\n      trx.commit();\n    });\n  }\n\n  /**\n   * Remove user from persistent cache.\n   * @memberOf DB\n   * @param {string} uid - ID of the user to remove from the cache.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  remUser(uid) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['user'], 'readwrite');\n      trx.oncomplete = event => {\n        resolve(event.target.result);\n      };\n      trx.onerror = event => {\n        this.#logger('PCache', 'remUser', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('user').delete(IDBKeyRange.only(uid));\n      trx.commit();\n    });\n  }\n\n  /**\n   * Execute a callback for each stored user.\n   * @memberOf DB\n   * @param {function} callback - function to call for each topic.\n   * @param {Object} context - the value or <code>this</code> inside the callback.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  mapUsers(callback, context) {\n    return this.#mapObjects('user', callback, context);\n  }\n\n  /**\n   * Read a single user from persistent cache.\n   * @memberOf DB\n   * @param {string} uid - ID of the user to fetch from cache.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  getUser(uid) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['user']);\n      trx.oncomplete = event => {\n        const user = event.target.result;\n        resolve({\n          user: user.uid,\n          public: user.public\n        });\n      };\n      trx.onerror = event => {\n        this.#logger('PCache', 'getUser', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('user').get(uid);\n    });\n  }\n\n  // Subscriptions.\n  /**\n   * Add or update subscription in persistent cache.\n   * @memberOf DB\n   * @param {string} topicName - name of the topic which owns the message.\n   * @param {string} uid - ID of the subscribed user.\n   * @param {Object} sub - subscription to save.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  updSubscription(topicName, uid, sub) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['subscription'], 'readwrite');\n      trx.oncomplete = event => {\n        resolve(event.target.result);\n      };\n      trx.onerror = event => {\n        this.#logger('PCache', 'updSubscription', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('subscription').get([topicName, uid]).onsuccess = (event) => {\n        trx.objectStore('subscription').put(DB.#serializeSubscription(event.target.result, topicName, uid, sub));\n        trx.commit();\n      };\n    });\n  }\n\n  /**\n   * Execute a callback for each cached subscription in a given topic.\n   * @memberOf DB\n   * @param {string} topicName - name of the topic which owns the subscriptions.\n   * @param {function} callback - function to call for each subscription.\n   * @param {Object} context - the value or <code>this</code> inside the callback.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  mapSubscriptions(topicName, callback, context) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve([]) :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['subscription']);\n      trx.onerror = (event) => {\n        this.#logger('PCache', 'mapSubscriptions', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('subscription').getAll(IDBKeyRange.bound([topicName, '-'], [topicName, '~'])).onsuccess = (event) => {\n        if (callback) {\n          event.target.result.forEach((topic) => {\n            callback.call(context, topic);\n          });\n        }\n        resolve(event.target.result);\n      };\n    });\n  }\n\n  // Messages.\n\n  /**\n   * Save message to persistent cache.\n   * @memberOf DB\n   * @param {string} topicName - name of the topic which owns the message.\n   * @param {Object} msg - message to save.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  addMessage(msg) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['message'], 'readwrite');\n      trx.onsuccess = event => {\n        resolve(event.target.result);\n      };\n      trx.onerror = event => {\n        this.#logger('PCache', 'addMessage', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('message').add(DB.#serializeMessage(null, msg));\n      trx.commit();\n    });\n  }\n\n  /**\n   * Update delivery status of a message stored in persistent cache.\n   * @memberOf DB\n   * @param {string} topicName - name of the topic which owns the message.\n   * @param {number} seq - ID of the message to update\n   * @param {number} status - new delivery status of the message.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  updMessageStatus(topicName, seq, status) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['message'], 'readwrite');\n      trx.onsuccess = event => {\n        resolve(event.target.result);\n      };\n      trx.onerror = event => {\n        this.#logger('PCache', 'updMessageStatus', event.target.error);\n        reject(event.target.error);\n      };\n      const req = trx.objectStore('message').get(IDBKeyRange.only([topicName, seq]));\n      req.onsuccess = event => {\n        const src = req.result || event.target.result;\n        if (!src || src._status == status) {\n          trx.commit();\n          return;\n        }\n        trx.objectStore('message').put(DB.#serializeMessage(src, {\n          topic: topicName,\n          seq: seq,\n          _status: status\n        }));\n        trx.commit();\n      };\n    });\n  }\n\n  /**\n   * Remove one or more messages from persistent cache.\n   * @memberOf DB\n   * @param {string} topicName - name of the topic which owns the message.\n   * @param {number} from - id of the message to remove or lower boundary when removing range (inclusive).\n   * @param {number=} to - upper boundary (exclusive) when removing a range of messages.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  remMessages(topicName, from, to) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      if (!from && !to) {\n        from = 0;\n        to = Number.MAX_SAFE_INTEGER;\n      }\n      const range = to > 0 ? IDBKeyRange.bound([topicName, from], [topicName, to], false, true) :\n        IDBKeyRange.only([topicName, from]);\n      const trx = this.db.transaction(['message'], 'readwrite');\n      trx.onsuccess = (event) => {\n        resolve(event.target.result);\n      };\n      trx.onerror = (event) => {\n        this.#logger('PCache', 'remMessages', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('message').delete(range);\n      trx.commit();\n    });\n  }\n\n  /**\n   * Retrieve messages from persistent store.\n   * @memberOf DB\n   * @param {string} topicName - name of the topic to retrieve messages from.\n   * @param {function} callback to call for each retrieved message.\n   * @param {Object} query - parameters of the message range to retrieve.\n   * @param {number=} query.since - the least message ID to retrieve (inclusive).\n   * @param {number=} query.before - the greatest message ID to retrieve (exclusive).\n   * @param {number=} query.limit - the maximum number of messages to retrieve.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  readMessages(topicName, query, callback, context) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve([]) :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      query = query || {};\n      const since = query.since > 0 ? query.since : 0;\n      const before = query.before > 0 ? query.before : Number.MAX_SAFE_INTEGER;\n      const limit = query.limit | 0;\n\n      const result = [];\n      const range = IDBKeyRange.bound([topicName, since], [topicName, before], false, true);\n      const trx = this.db.transaction(['message']);\n      trx.onerror = (event) => {\n        this.#logger('PCache', 'readMessages', event.target.error);\n        reject(event.target.error);\n      };\n      // Iterate in descending order.\n      trx.objectStore('message').openCursor(range, 'prev').onsuccess = (event) => {\n        const cursor = event.target.result;\n        if (cursor) {\n          if (callback) {\n            callback.call(context, cursor.value);\n          }\n          result.push(cursor.value);\n          if (limit <= 0 || result.length < limit) {\n            cursor.continue();\n          } else {\n            resolve(result);\n          }\n        } else {\n          resolve(result);\n        }\n      };\n    });\n  }\n\n  // Private methods.\n\n  // Serializable topic fields.\n  static #topic_fields = ['created', 'updated', 'deleted', 'read', 'recv', 'seq', 'clear', 'defacs',\n    'creds', 'public', 'trusted', 'private', 'touched', '_deleted'\n  ];\n\n  // Copy data from src to Topic object.\n  static #deserializeTopic(topic, src) {\n    DB.#topic_fields.forEach((f) => {\n      if (src.hasOwnProperty(f)) {\n        topic[f] = src[f];\n      }\n    });\n    if (Array.isArray(src.tags)) {\n      topic._tags = src.tags;\n    }\n    if (src.acs) {\n      topic.setAccessMode(src.acs);\n    }\n    topic.seq |= 0;\n    topic.read |= 0;\n    topic.unread = Math.max(0, topic.seq - topic.read);\n  }\n\n  // Copy values from 'src' to 'dst'. Allocate dst if it's null or undefined.\n  static #serializeTopic(dst, src) {\n    const res = dst || {\n      name: src.name\n    };\n    DB.#topic_fields.forEach((f) => {\n      if (src.hasOwnProperty(f)) {\n        res[f] = src[f];\n      }\n    });\n    if (Array.isArray(src._tags)) {\n      res.tags = src._tags;\n    }\n    if (src.acs) {\n      res.acs = src.getAccessMode().jsonHelper();\n    }\n    return res;\n  }\n\n  static #serializeSubscription(dst, topicName, uid, sub) {\n    const fields = ['updated', 'mode', 'read', 'recv', 'clear', 'lastSeen', 'userAgent'];\n    const res = dst || {\n      topic: topicName,\n      uid: uid\n    };\n\n    fields.forEach((f) => {\n      if (sub.hasOwnProperty(f)) {\n        res[f] = sub[f];\n      }\n    });\n\n    return res;\n  }\n\n  static #serializeMessage(dst, msg) {\n    // Serializable fields.\n    const fields = ['topic', 'seq', 'ts', '_status', 'from', 'head', 'content'];\n    const res = dst || {};\n    fields.forEach((f) => {\n      if (msg.hasOwnProperty(f)) {\n        res[f] = msg[f];\n      }\n    });\n    return res;\n  }\n\n  /**\n   * To use DB in a non browser context, supply indexedDB provider.\n   * @static\n   * @memberof DB\n   * @param idbProvider indexedDB provider, e.g. for node <code>require('fake-indexeddb')</code>.\n   */\n  static setDatabaseProvider(idbProvider) {\n    IDBProvider = idbProvider;\n  }\n}\n","/**\n * @copyright 2015-2022 Tinode LLC.\n * @summary Minimally rich text representation and formatting for Tinode.\n * @license Apache 2.0\n *\n * @file Basic parser and formatter for very simple text markup. Mostly targeted at\n * mobile use cases similar to Telegram, WhatsApp, and FB Messenger.\n *\n * <p>Supports conversion of user keyboard input to formatted text:</p>\n * <ul>\n *   <li>*abc* &rarr; <b>abc</b></li>\n *   <li>_abc_ &rarr; <i>abc</i></li>\n *   <li>~abc~ &rarr; <del>abc</del></li>\n *   <li>`abc` &rarr; <tt>abc</tt></li>\n * </ul>\n * Also supports forms and buttons.\n *\n * Nested formatting is supported, e.g. *abc _def_* -> <b>abc <i>def</i></b>\n * URLs, @mentions, and #hashtags are extracted and converted into links.\n * Forms and buttons can be added procedurally.\n * JSON data representation is inspired by Draft.js raw formatting.\n *\n *\n * @example\n * Text:\n * <pre>\n *     this is *bold*, `code` and _italic_, ~strike~\n *     combined *bold and _italic_*\n *     an url: https://www.example.com/abc#fragment and another _www.tinode.co_\n *     this is a @mention and a #hashtag in a string\n *     second #hashtag\n * </pre>\n *\n *  Sample JSON representation of the text above:\n *  {\n *     \"txt\": \"this is bold, code and italic, strike combined bold and italic an url: https://www.example.com/abc#fragment \" +\n *             \"and another www.tinode.co this is a @mention and a #hashtag in a string second #hashtag\",\n *     \"fmt\": [\n *         { \"at\":8, \"len\":4,\"tp\":\"ST\" },{ \"at\":14, \"len\":4, \"tp\":\"CO\" },{ \"at\":23, \"len\":6, \"tp\":\"EM\"},\n *         { \"at\":31, \"len\":6, \"tp\":\"DL\" },{ \"tp\":\"BR\", \"len\":1, \"at\":37 },{ \"at\":56, \"len\":6, \"tp\":\"EM\" },\n *         { \"at\":47, \"len\":15, \"tp\":\"ST\" },{ \"tp\":\"BR\", \"len\":1, \"at\":62 },{ \"at\":120, \"len\":13, \"tp\":\"EM\" },\n *         { \"at\":71, \"len\":36, \"key\":0 },{ \"at\":120, \"len\":13, \"key\":1 },{ \"tp\":\"BR\", \"len\":1, \"at\":133 },\n *         { \"at\":144, \"len\":8, \"key\":2 },{ \"at\":159, \"len\":8, \"key\":3 },{ \"tp\":\"BR\", \"len\":1, \"at\":179 },\n *         { \"at\":187, \"len\":8, \"key\":3 },{ \"tp\":\"BR\", \"len\":1, \"at\":195 }\n *     ],\n *     \"ent\": [\n *         { \"tp\":\"LN\", \"data\":{ \"url\":\"https://www.example.com/abc#fragment\" } },\n *         { \"tp\":\"LN\", \"data\":{ \"url\":\"http://www.tinode.co\" } },\n *         { \"tp\":\"MN\", \"data\":{ \"val\":\"mention\" } },\n *         { \"tp\":\"HT\", \"data\":{ \"val\":\"hashtag\" } }\n *     ]\n *  }\n */\n\n'use strict';\n\n// NOTE TO DEVELOPERS:\n// Localizable strings should be double quoted \"строка на другом языке\",\n// non-localizable strings should be single quoted 'non-localized'.\n\nconst MAX_FORM_ELEMENTS = 8;\nconst MAX_PREVIEW_ATTACHMENTS = 3;\nconst MAX_PREVIEW_DATA_SIZE = 64;\nconst JSON_MIME_TYPE = 'application/json';\nconst DRAFTY_MIME_TYPE = 'text/x-drafty';\nconst ALLOWED_ENT_FIELDS = ['act', 'height', 'duration', 'incoming', 'mime', 'name', 'premime', 'preref', 'preview',\n  'ref', 'size', 'state', 'url', 'val', 'width'\n];\n\n// Regular expressions for parsing inline formats. Javascript does not support lookbehind,\n// so it's a bit messy.\nconst INLINE_STYLES = [\n  // Strong = bold, *bold text*\n  {\n    name: 'ST',\n    start: /(?:^|[\\W_])(\\*)[^\\s*]/,\n    end: /[^\\s*](\\*)(?=$|[\\W_])/\n  },\n  // Emphesized = italic, _italic text_\n  {\n    name: 'EM',\n    start: /(?:^|\\W)(_)[^\\s_]/,\n    end: /[^\\s_](_)(?=$|\\W)/\n  },\n  // Deleted, ~strike this though~\n  {\n    name: 'DL',\n    start: /(?:^|[\\W_])(~)[^\\s~]/,\n    end: /[^\\s~](~)(?=$|[\\W_])/\n  },\n  // Code block `this is monospace`\n  {\n    name: 'CO',\n    start: /(?:^|\\W)(`)[^`]/,\n    end: /[^`](`)(?=$|\\W)/\n  }\n];\n\n// Relative weights of formatting spans. Greater index in array means greater weight.\nconst FMT_WEIGHT = ['QQ'];\n\n// RegExps for entity extraction (RF = reference)\nconst ENTITY_TYPES = [\n  // URLs\n  {\n    name: 'LN',\n    dataName: 'url',\n    pack: function(val) {\n      // Check if the protocol is specified, if not use http\n      if (!/^[a-z]+:\\/\\//i.test(val)) {\n        val = 'http://' + val;\n      }\n      return {\n        url: val\n      };\n    },\n    re: /(?:(?:https?|ftp):\\/\\/|www\\.|ftp\\.)[-A-Z0-9+&@#\\/%=~_|$?!:,.]*[A-Z0-9+&@#\\/%=~_|$]/ig\n  },\n  // Mentions @user (must be 2 or more characters)\n  {\n    name: 'MN',\n    dataName: 'val',\n    pack: function(val) {\n      return {\n        val: val.slice(1)\n      };\n    },\n    re: /\\B@([\\p{L}\\p{N}][._\\p{L}\\p{N}]*[\\p{L}\\p{N}])/ug\n  },\n  // Hashtags #hashtag, like metion 2 or more characters.\n  {\n    name: 'HT',\n    dataName: 'val',\n    pack: function(val) {\n      return {\n        val: val.slice(1)\n      };\n    },\n    re: /\\B#([\\p{L}\\p{N}][._\\p{L}\\p{N}]*[\\p{L}\\p{N}])/ug\n  }\n];\n\n// HTML tag name suggestions\nconst FORMAT_TAGS = {\n  AU: {\n    html_tag: 'audio',\n    md_tag: undefined,\n    isVoid: false\n  },\n  BN: {\n    html_tag: 'button',\n    md_tag: undefined,\n    isVoid: false\n  },\n  BR: {\n    html_tag: 'br',\n    md_tag: '\\n',\n    isVoid: true\n  },\n  CO: {\n    html_tag: 'tt',\n    md_tag: '`',\n    isVoid: false\n  },\n  DL: {\n    html_tag: 'del',\n    md_tag: '~',\n    isVoid: false\n  },\n  EM: {\n    html_tag: 'i',\n    md_tag: '_',\n    isVoid: false\n  },\n  EX: {\n    html_tag: '',\n    md_tag: undefined,\n    isVoid: true\n  },\n  FM: {\n    html_tag: 'div',\n    md_tag: undefined,\n    isVoid: false\n  },\n  HD: {\n    html_tag: '',\n    md_tag: undefined,\n    isVoid: false\n  },\n  HL: {\n    html_tag: 'span',\n    md_tag: undefined,\n    isVoid: false\n  },\n  HT: {\n    html_tag: 'a',\n    md_tag: undefined,\n    isVoid: false\n  },\n  IM: {\n    html_tag: 'img',\n    md_tag: undefined,\n    isVoid: false\n  },\n  LN: {\n    html_tag: 'a',\n    md_tag: undefined,\n    isVoid: false\n  },\n  MN: {\n    html_tag: 'a',\n    md_tag: undefined,\n    isVoid: false\n  },\n  RW: {\n    html_tag: 'div',\n    md_tag: undefined,\n    isVoid: false,\n  },\n  QQ: {\n    html_tag: 'div',\n    md_tag: undefined,\n    isVoid: false\n  },\n  ST: {\n    html_tag: 'b',\n    md_tag: '*',\n    isVoid: false\n  },\n  VC: {\n    html_tag: 'div',\n    md_tag: undefined,\n    isVoid: false\n  },\n  VD: {\n    html_tag: 'video',\n    md_tag: undefined,\n    isVoid: false\n  }\n};\n\n// Convert base64-encoded string into Blob.\nfunction base64toObjectUrl(b64, contentType, logger) {\n  if (!b64) {\n    return null;\n  }\n\n  try {\n    const bin = atob(b64);\n    const length = bin.length;\n    const buf = new ArrayBuffer(length);\n    const arr = new Uint8Array(buf);\n    for (let i = 0; i < length; i++) {\n      arr[i] = bin.charCodeAt(i);\n    }\n\n    return URL.createObjectURL(new Blob([buf], {\n      type: contentType\n    }));\n  } catch (err) {\n    if (logger) {\n      logger(\"Drafty: failed to convert object.\", err.message);\n    }\n  }\n\n  return null;\n}\n\nfunction base64toDataUrl(b64, contentType) {\n  if (!b64) {\n    return null;\n  }\n  contentType = contentType || 'image/jpeg';\n  return 'data:' + contentType + ';base64,' + b64;\n}\n\n// Helpers for converting Drafty to HTML.\nconst DECORATORS = {\n  // Visial styles\n  ST: {\n    open: _ => '<b>',\n    close: _ => '</b>'\n  },\n  EM: {\n    open: _ => '<i>',\n    close: _ => '</i>'\n  },\n  DL: {\n    open: _ => '<del>',\n    close: _ => '</del>'\n  },\n  CO: {\n    open: _ => '<tt>',\n    close: _ => '</tt>'\n  },\n  // Line break\n  BR: {\n    open: _ => '<br/>',\n    close: _ => ''\n  },\n  // Hidden element\n  HD: {\n    open: _ => '',\n    close: _ => ''\n  },\n  // Highlighted element.\n  HL: {\n    open: _ => '<span style=\"color:teal\">',\n    close: _ => '</span>'\n  },\n  // Link (URL)\n  LN: {\n    open: (data) => {\n      return '<a href=\"' + data.url + '\">';\n    },\n    close: _ => '</a>',\n    props: (data) => {\n      return data ? {\n        href: data.url,\n        target: '_blank'\n      } : null;\n    },\n  },\n  // Mention\n  MN: {\n    open: (data) => {\n      return '<a href=\"#' + data.val + '\">';\n    },\n    close: _ => '</a>',\n    props: (data) => {\n      return data ? {\n        id: data.val\n      } : null;\n    },\n  },\n  // Hashtag\n  HT: {\n    open: (data) => {\n      return '<a href=\"#' + data.val + '\">';\n    },\n    close: _ => '</a>',\n    props: (data) => {\n      return data ? {\n        id: data.val\n      } : null;\n    },\n  },\n  // Button\n  BN: {\n    open: _ => '<button>',\n    close: _ => '</button>',\n    props: (data) => {\n      return data ? {\n        'data-act': data.act,\n        'data-val': data.val,\n        'data-name': data.name,\n        'data-ref': data.ref\n      } : null;\n    },\n  },\n  // Audio recording\n  AU: {\n    open: (data) => {\n      const url = data.ref || base64toObjectUrl(data.val, data.mime, Drafty.logger);\n      return '<audio controls src=\"' + url + '\">';\n    },\n    close: _ => '</audio>',\n    props: (data) => {\n      if (!data) return null;\n      return {\n        // Embedded data or external link.\n        src: data.ref || base64toObjectUrl(data.val, data.mime, Drafty.logger),\n        'data-preload': data.ref ? 'metadata' : 'auto',\n        'data-duration': data.duration,\n        'data-name': data.name,\n        'data-size': data.val ? ((data.val.length * 0.75) | 0) : (data.size | 0),\n        'data-mime': data.mime,\n      };\n    }\n  },\n  // Image\n  IM: {\n    open: data => {\n      // Don't use data.ref for preview: it's a security risk.\n      const tmpPreviewUrl = base64toDataUrl(data._tempPreview, data.mime);\n      const previewUrl = base64toObjectUrl(data.val, data.mime, Drafty.logger);\n      const downloadUrl = data.ref || previewUrl;\n      return (data.name ? '<a href=\"' + downloadUrl + '\" download=\"' + data.name + '\">' : '') +\n        '<img src=\"' + (tmpPreviewUrl || previewUrl) + '\"' +\n        (data.width ? ' width=\"' + data.width + '\"' : '') +\n        (data.height ? ' height=\"' + data.height + '\"' : '') + ' border=\"0\" />';\n    },\n    close: data => {\n      return (data.name ? '</a>' : '');\n    },\n    props: data => {\n      if (!data) return null;\n      return {\n        // Temporary preview, or permanent preview, or external link.\n        src: base64toDataUrl(data._tempPreview, data.mime) ||\n          data.ref || base64toObjectUrl(data.val, data.mime, Drafty.logger),\n        title: data.name,\n        alt: data.name,\n        'data-width': data.width,\n        'data-height': data.height,\n        'data-name': data.name,\n        'data-size': data.val ? ((data.val.length * 0.75) | 0) : (data.size | 0),\n        'data-mime': data.mime,\n      };\n    },\n  },\n  // Form - structured layout of elements.\n  FM: {\n    open: _ => '<div>',\n    close: _ => '</div>'\n  },\n  // Row: logic grouping of elements\n  RW: {\n    open: _ => '<div>',\n    close: _ => '</div>'\n  },\n  // Quoted block.\n  QQ: {\n    open: _ => '<div>',\n    close: _ => '</div>',\n    props: (data) => {\n      return data ? {} : null;\n    },\n  },\n  // Video call\n  VC: {\n    open: _ => '<div>',\n    close: _ => '</div>',\n    props: data => {\n      if (!data) return {};\n      return {\n        'data-duration': data.duration,\n        'data-state': data.state,\n      };\n    }\n  },\n  // Video.\n  VD: {\n    open: data => {\n      const tmpPreviewUrl = base64toDataUrl(data._tempPreview, data.mime);\n      const previewUrl = data.ref || base64toObjectUrl(data.preview, data.premime || 'image/jpeg', Drafty.logger);\n      return '<img src=\"' + (tmpPreviewUrl || previewUrl) + '\"' +\n        (data.width ? ' width=\"' + data.width + '\"' : '') +\n        (data.height ? ' height=\"' + data.height + '\"' : '') + ' border=\"0\" />';\n    },\n    close: _ => '',\n    props: data => {\n      if (!data) return null;\n      const poster = data.preref || base64toObjectUrl(data.preview, data.premime || 'image/jpeg', Drafty.logger);\n      return {\n        // Embedded data or external link.\n        src: poster,\n        'data-src': data.ref || base64toObjectUrl(data.val, data.mime, Drafty.logger),\n        'data-width': data.width,\n        'data-height': data.height,\n        'data-preload': data.ref ? 'metadata' : 'auto',\n        'data-preview': poster,\n        'data-duration': data.duration | 0,\n        'data-name': data.name,\n        'data-size': data.val ? ((data.val.length * 0.75) | 0) : (data.size | 0),\n        'data-mime': data.mime,\n      };\n    }\n  },\n};\n\n/**\n * The main object which performs all the formatting actions.\n * @class Drafty\n * @constructor\n */\nconst Drafty = function() {\n  this.txt = '';\n  this.fmt = [];\n  this.ent = [];\n}\n\n/**\n * Initialize Drafty document to a plain text string.\n *\n * @param {string} plainText - string to use as Drafty content.\n *\n * @returns new Drafty document or null is plainText is not a string or undefined.\n */\nDrafty.init = function(plainText) {\n  if (typeof plainText == 'undefined') {\n    plainText = '';\n  } else if (typeof plainText != 'string') {\n    return null;\n  }\n\n  return {\n    txt: plainText\n  };\n}\n\n/**\n * Parse plain text into Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {string} content - plain-text content to parse.\n * @return {Drafty} parsed document or null if the source is not plain text.\n */\nDrafty.parse = function(content) {\n  // Make sure we are parsing strings only.\n  if (typeof content != 'string') {\n    return null;\n  }\n\n  // Split text into lines. It makes further processing easier.\n  const lines = content.split(/\\r?\\n/);\n\n  // Holds entities referenced from text\n  const entityMap = [];\n  const entityIndex = {};\n\n  // Processing lines one by one, hold intermediate result in blx.\n  const blx = [];\n  lines.forEach((line) => {\n    let spans = [];\n    let entities;\n\n    // Find formatted spans in the string.\n    // Try to match each style.\n    INLINE_STYLES.forEach((tag) => {\n      // Each style could be matched multiple times.\n      spans = spans.concat(spannify(line, tag.start, tag.end, tag.name));\n    });\n\n    let block;\n    if (spans.length == 0) {\n      block = {\n        txt: line\n      };\n    } else {\n      // Sort spans by style occurence early -> late, then by length: first long then short.\n      spans.sort((a, b) => {\n        const diff = a.at - b.at;\n        return diff != 0 ? diff : b.end - a.end;\n      });\n\n      // Convert an array of possibly overlapping spans into a tree.\n      spans = toSpanTree(spans);\n\n      // Build a tree representation of the entire string, not\n      // just the formatted parts.\n      const chunks = chunkify(line, 0, line.length, spans);\n\n      const drafty = draftify(chunks, 0);\n\n      block = {\n        txt: drafty.txt,\n        fmt: drafty.fmt\n      };\n    }\n\n    // Extract entities from the cleaned up string.\n    entities = extractEntities(block.txt);\n    if (entities.length > 0) {\n      const ranges = [];\n      for (let i in entities) {\n        // {offset: match['index'], unique: match[0], len: match[0].length, data: ent.packer(), type: ent.name}\n        const entity = entities[i];\n        let index = entityIndex[entity.unique];\n        if (!index) {\n          index = entityMap.length;\n          entityIndex[entity.unique] = index;\n          entityMap.push({\n            tp: entity.type,\n            data: entity.data\n          });\n        }\n        ranges.push({\n          at: entity.offset,\n          len: entity.len,\n          key: index\n        });\n      }\n      block.ent = ranges;\n    }\n\n    blx.push(block);\n  });\n\n  const result = {\n    txt: ''\n  };\n\n  // Merge lines and save line breaks as BR inline formatting.\n  if (blx.length > 0) {\n    result.txt = blx[0].txt;\n    result.fmt = (blx[0].fmt || []).concat(blx[0].ent || []);\n\n    for (let i = 1; i < blx.length; i++) {\n      const block = blx[i];\n      const offset = result.txt.length + 1;\n\n      result.fmt.push({\n        tp: 'BR',\n        len: 1,\n        at: offset - 1\n      });\n\n      result.txt += ' ' + block.txt;\n      if (block.fmt) {\n        result.fmt = result.fmt.concat(block.fmt.map((s) => {\n          s.at += offset;\n          return s;\n        }));\n      }\n      if (block.ent) {\n        result.fmt = result.fmt.concat(block.ent.map((s) => {\n          s.at += offset;\n          return s;\n        }));\n      }\n    }\n\n    if (result.fmt.length == 0) {\n      delete result.fmt;\n    }\n\n    if (entityMap.length > 0) {\n      result.ent = entityMap;\n    }\n  }\n  return result;\n}\n\n/**\n * Append one Drafty document to another.\n *\n * @param {Drafty} first - Drafty document to append to.\n * @param {Drafty|string} second - Drafty document or string being appended.\n *\n * @return {Drafty} first document with the second appended to it.\n */\nDrafty.append = function(first, second) {\n  if (!first) {\n    return second;\n  }\n  if (!second) {\n    return first;\n  }\n\n  first.txt = first.txt || '';\n  const len = first.txt.length;\n\n  if (typeof second == 'string') {\n    first.txt += second;\n  } else if (second.txt) {\n    first.txt += second.txt;\n  }\n\n  if (Array.isArray(second.fmt)) {\n    first.fmt = first.fmt || [];\n    if (Array.isArray(second.ent)) {\n      first.ent = first.ent || [];\n    }\n    second.fmt.forEach(src => {\n      const fmt = {\n        at: (src.at | 0) + len,\n        len: src.len | 0\n      };\n      // Special case for the outside of the normal rendering flow styles.\n      if (src.at == -1) {\n        fmt.at = -1;\n        fmt.len = 0;\n      }\n      if (src.tp) {\n        fmt.tp = src.tp;\n      } else {\n        fmt.key = first.ent.length;\n        first.ent.push(second.ent[src.key || 0]);\n      }\n      first.fmt.push(fmt);\n    });\n  }\n\n  return first;\n}\n\n/**\n * Description of an image to attach.\n * @typedef {Object} ImageDesc\n * @memberof Drafty\n *\n * @property {string} mime - mime-type of the image, e.g. \"image/png\".\n * @property {string} refurl - reference to the content. Could be null/undefined.\n * @property {string} bits - base64-encoded image content. Could be null/undefined.\n * @property {string} preview - base64-encoded thumbnail of the image.\n * @property {integer} width - width of the image.\n * @property {integer} height - height of the image.\n * @property {string} filename - file name suggestion for downloading the image.\n * @property {integer} size - size of the image in bytes. Treat is as an untrusted hint.\n * @property {string} _tempPreview - base64-encoded image preview used during upload process; not serializable.\n * @property {Promise} urlPromise - Promise which returns content URL when resolved.\n */\n\n/**\n * Insert inline image into Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to add image to.\n * @param {integer} at - index where the object is inserted. The length of the image is always 1.\n * @param {ImageDesc} imageDesc - object with image paramenets and data.\n *\n * @return {Drafty} updated document.\n */\nDrafty.insertImage = function(content, at, imageDesc) {\n  content = content || {\n    txt: ' '\n  };\n  content.ent = content.ent || [];\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: at | 0,\n    len: 1,\n    key: content.ent.length\n  });\n\n  const ex = {\n    tp: 'IM',\n    data: {\n      mime: imageDesc.mime,\n      ref: imageDesc.refurl,\n      val: imageDesc.bits || imageDesc.preview,\n      width: imageDesc.width,\n      height: imageDesc.height,\n      name: imageDesc.filename,\n      size: imageDesc.size | 0,\n    }\n  };\n\n  if (imageDesc.urlPromise) {\n    ex.data._tempPreview = imageDesc._tempPreview;\n    ex.data._processing = true;\n    imageDesc.urlPromise.then(\n      url => {\n        ex.data.ref = url;\n        ex.data._tempPreview = undefined;\n        ex.data._processing = undefined;\n      },\n      _ => {\n        // Catch the error, otherwise it will appear in the console.\n        ex.data._processing = undefined;\n      }\n    );\n  }\n\n  content.ent.push(ex);\n\n  return content;\n}\n\n/**\n * Description of a video to attach.\n * @typedef {Object} VideoDesc\n * @memberof Drafty\n *\n * @property {string} mime - mime-type of the video, e.g. \"video/mpeg\".\n * @property {string} refurl - reference to the content. Could be null/undefined.\n * @property {string} bits - in-band base64-encoded image data. Could be null/undefined.\n * @property {string} preview - base64-encoded screencapture from the video. Could be null/undefined.\n * @property {string} preref - reference to screencapture from the video. Could be null/undefined.\n * @property {integer} width - width of the video.\n * @property {integer} height - height of the video.\n * @property {integer} duration - duration of the video.\n * @property {string} filename - file name suggestion for downloading the video.\n * @property {integer} size - size of the video in bytes. Treat is as an untrusted hint.\n * @property {string} _tempPreview - base64-encoded screencapture used during upload process; not serializable.\n * @property {Promise} urlPromise - array of two promises, which return URLs of video and preview uploads correspondingly\n *        (either could be null).\n */\n\n/**\n * Insert inline image into Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to add video to.\n * @param {integer} at - index where the object is inserted. The length of the video is always 1.\n * @param {VideoDesc} videoDesc - object with video paramenets and data.\n *\n * @return {Drafty} updated document.\n */\nDrafty.insertVideo = function(content, at, videoDesc) {\n  content = content || {\n    txt: ' '\n  };\n  content.ent = content.ent || [];\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: at | 0,\n    len: 1,\n    key: content.ent.length\n  });\n\n  const ex = {\n    tp: 'VD',\n    data: {\n      mime: videoDesc.mime,\n      ref: videoDesc.refurl,\n      val: videoDesc.bits,\n      preref: videoDesc.preref,\n      preview: videoDesc.preview,\n      width: videoDesc.width,\n      height: videoDesc.height,\n      duration: videoDesc.duration | 0,\n      name: videoDesc.filename,\n      size: videoDesc.size | 0,\n    }\n  };\n\n  if (videoDesc.urlPromise) {\n    ex.data._tempPreview = videoDesc._tempPreview;\n    ex.data._processing = true;\n    videoDesc.urlPromise.then(\n      urls => {\n        ex.data.ref = urls[0];\n        ex.data.preref = urls[1];\n        ex.data._tempPreview = undefined;\n        ex.data._processing = undefined;\n      },\n      _ => {\n        // Catch the error, otherwise it will appear in the console.\n        ex.data._processing = undefined;\n      }\n    );\n  }\n\n  content.ent.push(ex);\n\n  return content;\n}\n\n/**\n * Description of an audio recording to attach.\n * @typedef {Object} AudioDesc\n * @memberof Drafty\n *\n * @property {string} mime - mime-type of the audio, e.g. \"audio/ogg\".\n * @property {string} refurl - reference to the content. Could be null/undefined.\n * @property {string} bits - base64-encoded audio content. Could be null/undefined.\n * @property {integer} duration - duration of the record in milliseconds.\n * @property {string} preview - base64 encoded short array of amplitude values 0..100.\n * @property {string} filename - file name suggestion for downloading the audio.\n * @property {integer} size - size of the recording in bytes. Treat is as an untrusted hint.\n * @property {Promise} urlPromise - Promise which returns content URL when resolved.\n */\n\n/**\n * Insert audio recording into Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to add audio record to.\n * @param {integer} at - index where the object is inserted. The length of the record is always 1.\n * @param {AudioDesc} audioDesc - object with the audio paramenets and data.\n *\n * @return {Drafty} updated document.\n */\nDrafty.insertAudio = function(content, at, audioDesc) {\n  content = content || {\n    txt: ' '\n  };\n  content.ent = content.ent || [];\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: at | 0,\n    len: 1,\n    key: content.ent.length\n  });\n\n  const ex = {\n    tp: 'AU',\n    data: {\n      mime: audioDesc.mime,\n      val: audioDesc.bits,\n      duration: audioDesc.duration | 0,\n      preview: audioDesc.preview,\n      name: audioDesc.filename,\n      size: audioDesc.size | 0,\n      ref: audioDesc.refurl\n    }\n  };\n\n  if (audioDesc.urlPromise) {\n    ex.data._processing = true;\n    audioDesc.urlPromise.then(\n      url => {\n        ex.data.ref = url;\n        ex.data._processing = undefined;\n      },\n      _ => {\n        // Catch the error, otherwise it will appear in the console.\n        ex.data._processing = undefined;\n      }\n    );\n  }\n\n  content.ent.push(ex);\n\n  return content;\n}\n\n/**\n * Create a (self-contained) video call Drafty document.\n * @memberof Drafty\n * @static\n * @param {boolean} audioOnly <code>true</code> if the call is initially audio-only.\n * @returns Video Call drafty document.\n */\nDrafty.videoCall = function(audioOnly) {\n  const content = {\n    txt: ' ',\n    fmt: [{\n      at: 0,\n      len: 1,\n      key: 0\n    }],\n    ent: [{\n      tp: 'VC',\n      data: {\n        aonly: audioOnly\n      },\n    }]\n  };\n  return content;\n}\n\n/**\n * Update video call (VC) entity with the new status and duration.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - VC document to update.\n * @param {object} params - new video call parameters.\n * @param {string} params.state - state of video call.\n * @param {number} params.duration - duration of the video call in milliseconds.\n *\n * @returns the same document with update applied.\n */\nDrafty.updateVideoCall = function(content, params) {\n  // The video element could be just a format or a format + entity.\n  // Must ensure it's the latter first.\n  const fmt = ((content || {}).fmt || [])[0];\n  if (!fmt) {\n    // Unrecognized content.\n    return content;\n  }\n\n  let ent;\n  if (fmt.tp == 'VC') {\n    // Just a format, convert to format + entity.\n    delete fmt.tp;\n    fmt.key = 0;\n    ent = {\n      tp: 'VC'\n    };\n    content.ent = [ent];\n  } else {\n    ent = (content.ent || [])[fmt.key | 0];\n    if (!ent || ent.tp != 'VC') {\n      // Not a VC entity.\n      return content;\n    }\n  }\n  ent.data = ent.data || {};\n  Object.assign(ent.data, params);\n  return content;\n}\n\n/**\n * Create a quote to Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {string} header - Quote header (title, etc.).\n * @param {string} uid - UID of the author to mention.\n * @param {Drafty} body - Body of the quoted message.\n *\n * @returns Reply quote Drafty doc with the quote formatting.\n */\nDrafty.quote = function(header, uid, body) {\n  const quote = Drafty.append(Drafty.appendLineBreak(Drafty.mention(header, uid)), body);\n\n  // Wrap into a quote.\n  quote.fmt.push({\n    at: 0,\n    len: quote.txt.length,\n    tp: 'QQ'\n  });\n\n  return quote;\n}\n\n/**\n * Create a Drafty document with a mention.\n *\n * @param {string} name - mentioned name.\n * @param {string} uid - mentioned user ID.\n *\n * @returns {Drafty} document with the mention.\n */\nDrafty.mention = function(name, uid) {\n  return {\n    txt: name || '',\n    fmt: [{\n      at: 0,\n      len: (name || '').length,\n      key: 0\n    }],\n    ent: [{\n      tp: 'MN',\n      data: {\n        val: uid\n      }\n    }]\n  };\n}\n\n/**\n * Append a link to a Drafty document.\n *\n * @param {Drafty} content - Drafty document to append link to.\n * @param {Object} linkData - Link info in format <code>{txt: 'ankor text', url: 'http://...'}</code>.\n *\n * @returns {Drafty} the same document as <code>content</code>.\n */\nDrafty.appendLink = function(content, linkData) {\n  content = content || {\n    txt: ''\n  };\n\n  content.ent = content.ent || [];\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: content.txt.length,\n    len: linkData.txt.length,\n    key: content.ent.length\n  });\n  content.txt += linkData.txt;\n\n  const ex = {\n    tp: 'LN',\n    data: {\n      url: linkData.url\n    }\n  }\n  content.ent.push(ex);\n\n  return content;\n}\n\n/**\n * Append image to Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to add image to.\n * @param {ImageDesc} imageDesc - object with image paramenets.\n *\n * @return {Drafty} updated document.\n */\nDrafty.appendImage = function(content, imageDesc) {\n  content = content || {\n    txt: ''\n  };\n  content.txt += ' ';\n  return Drafty.insertImage(content, content.txt.length - 1, imageDesc);\n}\n\n/**\n * Append audio recodring to Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to add recording to.\n * @param {AudioDesc} audioDesc - object with audio data.\n *\n * @return {Drafty} updated document.\n */\nDrafty.appendAudio = function(content, audioDesc) {\n  content = content || {\n    txt: ''\n  };\n  content.txt += ' ';\n  return Drafty.insertAudio(content, content.txt.length - 1, audioDesc);\n}\n\n/**\n * Description of a file to attach.\n * @typedef {Object} AttachmentDesc\n * @memberof Drafty\n *\n * @property {string} mime - mime-type of the attachment, e.g. \"application/octet-stream\"\n * @property {string} data - base64-encoded in-band content of small attachments. Could be null/undefined.\n * @property {string} filename - file name suggestion for downloading the attachment.\n * @property {integer} size - size of the file in bytes. Treat is as an untrusted hint.\n * @property {string} refurl - reference to the out-of-band content. Could be null/undefined.\n * @property {Promise} urlPromise - Promise which returns content URL when resolved.\n */\n\n/**\n * Attach file to Drafty content. Either as a blob or as a reference.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to attach file to.\n * @param {AttachmentDesc} object - containing attachment description and data.\n *\n * @return {Drafty} updated document.\n */\nDrafty.attachFile = function(content, attachmentDesc) {\n  content = content || {\n    txt: ''\n  };\n\n  content.ent = content.ent || [];\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: -1,\n    len: 0,\n    key: content.ent.length\n  });\n\n  const ex = {\n    tp: 'EX',\n    data: {\n      mime: attachmentDesc.mime,\n      val: attachmentDesc.data,\n      name: attachmentDesc.filename,\n      ref: attachmentDesc.refurl,\n      size: attachmentDesc.size | 0\n    }\n  }\n  if (attachmentDesc.urlPromise) {\n    ex.data._processing = true;\n    attachmentDesc.urlPromise.then(\n      url => {\n        ex.data.ref = url;\n        ex.data._processing = undefined;\n      },\n      _ => {\n        /* catch the error, otherwise it will appear in the console. */\n        ex.data._processing = undefined;\n      }\n    );\n  }\n  content.ent.push(ex);\n\n  return content;\n}\n\n/**\n * Wraps drafty document into a simple formatting style.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} content - document or string to wrap into a style.\n * @param {string} style - two-letter style to wrap into.\n * @param {number} at - index where the style starts, default 0.\n * @param {number} len - length of the form content, default all of it.\n *\n * @return {Drafty} updated document.\n */\nDrafty.wrapInto = function(content, style, at, len) {\n  if (typeof content == 'string') {\n    content = {\n      txt: content\n    };\n  }\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: at || 0,\n    len: len || content.txt.length,\n    tp: style,\n  });\n\n  return content;\n}\n\n/**\n * Wraps content into an interactive form.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} content - to wrap into a form.\n * @param {number} at - index where the forms starts.\n * @param {number} len - length of the form content.\n *\n * @return {Drafty} updated document.\n */\nDrafty.wrapAsForm = function(content, at, len) {\n  return Drafty.wrapInto(content, 'FM', at, len);\n}\n\n/**\n * Insert clickable button into Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} content - Drafty document to insert button to or a string to be used as button text.\n * @param {number} at - location where the button is inserted.\n * @param {number} len - the length of the text to be used as button title.\n * @param {string} name - the button. Client should return it to the server when the button is clicked.\n * @param {string} actionType - the type of the button, one of 'url' or 'pub'.\n * @param {string} actionValue - the value to return on click:\n * @param {string} refUrl - the URL to go to when the 'url' button is clicked.\n *\n * @return {Drafty} updated document.\n */\nDrafty.insertButton = function(content, at, len, name, actionType, actionValue, refUrl) {\n  if (typeof content == 'string') {\n    content = {\n      txt: content\n    };\n  }\n\n  if (!content || !content.txt || content.txt.length < at + len) {\n    return null;\n  }\n\n  if (len <= 0 || ['url', 'pub'].indexOf(actionType) == -1) {\n    return null;\n  }\n  // Ensure refUrl is a string.\n  if (actionType == 'url' && !refUrl) {\n    return null;\n  }\n  refUrl = '' + refUrl;\n\n  content.ent = content.ent || [];\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: at | 0,\n    len: len,\n    key: content.ent.length\n  });\n  content.ent.push({\n    tp: 'BN',\n    data: {\n      act: actionType,\n      val: actionValue,\n      ref: refUrl,\n      name: name\n    }\n  });\n\n  return content;\n}\n\n/**\n * Append clickable button to Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} content - Drafty document to insert button to or a string to be used as button text.\n * @param {string} title - the text to be used as button title.\n * @param {string} name - the button. Client should return it to the server when the button is clicked.\n * @param {string} actionType - the type of the button, one of 'url' or 'pub'.\n * @param {string} actionValue - the value to return on click:\n * @param {string} refUrl - the URL to go to when the 'url' button is clicked.\n *\n * @return {Drafty} updated document.\n */\nDrafty.appendButton = function(content, title, name, actionType, actionValue, refUrl) {\n  content = content || {\n    txt: ''\n  };\n  const at = content.txt.length;\n  content.txt += title;\n  return Drafty.insertButton(content, at, title.length, name, actionType, actionValue, refUrl);\n}\n\n/**\n * Attach a generic JS object. The object is attached as a json string.\n * Intended for representing a form response.\n *\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - Drafty document to attach file to.\n * @param {Object} data - data to convert to json string and attach.\n * @returns {Drafty} the same document as <code>content</code>.\n */\nDrafty.attachJSON = function(content, data) {\n  content = content || {\n    txt: ''\n  };\n  content.ent = content.ent || [];\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: -1,\n    len: 0,\n    key: content.ent.length\n  });\n\n  content.ent.push({\n    tp: 'EX',\n    data: {\n      mime: JSON_MIME_TYPE,\n      val: data\n    }\n  });\n\n  return content;\n}\n/**\n * Append line break to a Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - Drafty document to append linebreak to.\n * @returns {Drafty} the same document as <code>content</code>.\n */\nDrafty.appendLineBreak = function(content) {\n  content = content || {\n    txt: ''\n  };\n  content.fmt = content.fmt || [];\n  content.fmt.push({\n    at: content.txt.length,\n    len: 1,\n    tp: 'BR'\n  });\n  content.txt += ' ';\n\n  return content;\n}\n/**\n * Given Drafty document, convert it to HTML.\n * No attempt is made to strip pre-existing html markup.\n * This is potentially unsafe because <code>content.txt</code> may contain malicious HTML\n * markup.\n * @memberof Tinode.Drafty\n * @static\n *\n * @param {Drafty} doc - document to convert.\n *\n * @returns {string} HTML-representation of content.\n */\nDrafty.UNSAFE_toHTML = function(doc) {\n  const tree = draftyToTree(doc);\n  const htmlFormatter = function(type, data, values) {\n    const tag = DECORATORS[type];\n    let result = values ? values.join('') : '';\n    if (tag) {\n      result = tag.open(data) + result + tag.close(data);\n    }\n    return result;\n  };\n  return treeBottomUp(tree, htmlFormatter, 0);\n}\n\n/**\n * Callback for applying custom formatting to a Drafty document.\n * Called once for each style span.\n * @memberof Drafty\n * @static\n *\n * @callback Formatter\n * @param {string} style - style code such as \"ST\" or \"IM\".\n * @param {Object} data - entity's data.\n * @param {Object} values - possibly styled subspans contained in this style span.\n * @param {number} index - index of the element guaranteed to be unique.\n */\n\n/**\n * Convert Drafty document to a representation suitable for display.\n * The <code>context</code> may expose a function <code>getFormatter(style)</code>. If it's available\n * it will call it to obtain a <code>formatter</code> for a subtree of styles under the <code>style</code>.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|Object} content - Drafty document to transform.\n * @param {Formatter} formatter - callback which formats individual elements.\n * @param {Object} context - context provided to formatter as <code>this</code>.\n *\n * @return {Object} transformed object\n */\nDrafty.format = function(original, formatter, context) {\n  return treeBottomUp(draftyToTree(original), formatter, 0, [], context);\n}\n\n/**\n * Shorten Drafty document making the drafty text no longer than the limit.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} original - Drafty object to shorten.\n * @param {number} limit - length in characrets to shorten to.\n * @param {boolean} light - remove heavy data from entities.\n * @returns new shortened Drafty object leaving the original intact.\n */\nDrafty.shorten = function(original, limit, light) {\n  let tree = draftyToTree(original);\n  tree = shortenTree(tree, limit, '…');\n  if (tree && light) {\n    tree = lightEntity(tree);\n  }\n  return treeToDrafty({}, tree, []);\n}\n\n/**\n * Transform Drafty doc for forwarding: strip leading @mention and any leading line breaks or whitespace.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} original - Drafty object to shorten.\n * @returns converted Drafty object leaving the original intact.\n */\nDrafty.forwardedContent = function(original) {\n  let tree = draftyToTree(original);\n  const rmMention = function(node) {\n    if (node.type == 'MN') {\n      if (!node.parent || !node.parent.type) {\n        return null;\n      }\n    }\n    return node;\n  }\n  // Strip leading mention.\n  tree = treeTopDown(tree, rmMention);\n  // Remove leading whitespace.\n  tree = lTrim(tree);\n  // Convert back to Drafty.\n  return treeToDrafty({}, tree, []);\n}\n\n/**\n * Prepare Drafty doc for wrapping into QQ as a reply:\n *  - Replace forwarding mention with symbol '➦' and remove data (UID).\n *  - Remove quoted text completely.\n *  - Replace line breaks with spaces.\n *  - Strip entities of heavy content.\n *  - Move attachments to the end of the document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} original - Drafty object to shorten.\n * @param {number} limit - length in characters to shorten to.\n * @returns converted Drafty object leaving the original intact.\n */\nDrafty.replyContent = function(original, limit) {\n  const convMNnQQnBR = function(node) {\n    if (node.type == 'QQ') {\n      return null;\n    } else if (node.type == 'MN') {\n      if ((!node.parent || !node.parent.type) && (node.text || '').startsWith('➦')) {\n        node.text = '➦';\n        delete node.children;\n        delete node.data;\n      }\n    } else if (node.type == 'BR') {\n      node.text = ' ';\n      delete node.type;\n      delete node.children;\n    }\n    return node;\n  }\n\n  let tree = draftyToTree(original);\n  if (!tree) {\n    return original;\n  }\n\n  // Strip leading mention.\n  tree = treeTopDown(tree, convMNnQQnBR);\n  // Move attachments to the end of the doc.\n  tree = attachmentsToEnd(tree, MAX_PREVIEW_ATTACHMENTS);\n  // Shorten the doc.\n  tree = shortenTree(tree, limit, '…');\n  // Strip heavy elements except IM.data['val'] and VD.data['preview'] (have to keep them to generate previews later).\n  const filter = node => {\n    switch (node.type) {\n      case 'IM':\n        return ['val'];\n      case 'VD':\n        return ['preview'];\n    }\n    return null;\n  };\n  tree = lightEntity(tree, filter);\n  // Convert back to Drafty.\n  return treeToDrafty({}, tree, []);\n}\n\n\n/**\n * Generate drafty preview:\n *  - Shorten the document.\n *  - Strip all heavy entity data leaving just inline styles and entity references.\n *  - Replace line breaks with spaces.\n *  - Replace content of QQ with a space.\n *  - Replace forwarding mention with symbol '➦'.\n * move all attachments to the end of the document and make them visible.\n * The <code>context</code> may expose a function <code>getFormatter(style)</code>. If it's available\n * it will call it to obtain a <code>formatter</code> for a subtree of styles under the <code>style</code>.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} original - Drafty object to shorten.\n * @param {number} limit - length in characters to shorten to.\n * @param {boolean} forwarding - this a forwarding message preview.\n * @returns new shortened Drafty object leaving the original intact.\n */\nDrafty.preview = function(original, limit, forwarding) {\n  let tree = draftyToTree(original);\n\n  // Move attachments to the end.\n  tree = attachmentsToEnd(tree, MAX_PREVIEW_ATTACHMENTS);\n\n  // Convert leading mention to '➦' and replace QQ and BR with a space ' '.\n  const convMNnQQnBR = function(node) {\n    if (node.type == 'MN') {\n      if ((!node.parent || !node.parent.type) && (node.text || '').startsWith('➦')) {\n        node.text = '➦';\n        delete node.children;\n      }\n    } else if (node.type == 'QQ') {\n      node.text = ' ';\n      delete node.children;\n    } else if (node.type == 'BR') {\n      node.text = ' ';\n      delete node.children;\n      delete node.type;\n    }\n    return node;\n  }\n  tree = treeTopDown(tree, convMNnQQnBR);\n\n  tree = shortenTree(tree, limit, '…');\n  if (forwarding) {\n    // Keep some IM and VD data for preview.\n    const filter = {\n      IM: ['val'],\n      VD: ['preview']\n    };\n    tree = lightEntity(tree, node => {\n      return filter[node.type];\n    });\n  } else {\n    tree = lightEntity(tree);\n  }\n\n  // Convert back to Drafty.\n  return treeToDrafty({}, tree, []);\n}\n\n/**\n * Given Drafty document, convert it to plain text.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to convert to plain text.\n * @returns {string} plain-text representation of the drafty document.\n */\nDrafty.toPlainText = function(content) {\n  return typeof content == 'string' ? content : content.txt;\n}\n\n/**\n * Check if the document has no markup and no entities.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - content to check for presence of markup.\n * @returns <code>true</code> is content is plain text, <code>false</code> otherwise.\n */\nDrafty.isPlainText = function(content) {\n  return typeof content == 'string' || !(content.fmt || content.ent);\n}\n\n/**\n * Convert document to plain text with markdown. All elements which cannot\n * be represented in markdown are stripped.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to convert to plain text with markdown.\n */\nDrafty.toMarkdown = function(content) {\n  let tree = draftyToTree(content);\n  const mdFormatter = function(type, _, values) {\n    const def = FORMAT_TAGS[type];\n    let result = (values ? values.join('') : '');\n    if (def) {\n      if (def.isVoid) {\n        result = def.md_tag || '';\n      } else if (def.md_tag) {\n        result = def.md_tag + result + def.md_tag;\n      }\n    }\n    return result;\n  };\n  return treeBottomUp(tree, mdFormatter, 0);\n}\n\n/**\n * Checks if the object represets is a valid Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - content to check for validity.\n * @returns <code>true</code> is content is valid, <code>false</code> otherwise.\n */\nDrafty.isValid = function(content) {\n  if (!content) {\n    return false;\n  }\n\n  const {\n    txt,\n    fmt,\n    ent\n  } = content;\n\n  if (!txt && txt !== '' && !fmt && !ent) {\n    return false;\n  }\n\n  const txt_type = typeof txt;\n  if (txt_type != 'string' && txt_type != 'undefined' && txt !== null) {\n    return false;\n  }\n\n  if (typeof fmt != 'undefined' && !Array.isArray(fmt) && fmt !== null) {\n    return false;\n  }\n\n  if (typeof ent != 'undefined' && !Array.isArray(ent) && ent !== null) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Check if the drafty document has attachments: style EX and outside of normal rendering flow,\n * i.e. <code>at = -1</code>.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to check for attachments.\n * @returns <code>true</code> if there are attachments.\n */\nDrafty.hasAttachments = function(content) {\n  if (!Array.isArray(content.fmt)) {\n    return false;\n  }\n  for (let i in content.fmt) {\n    const fmt = content.fmt[i];\n    if (fmt && fmt.at < 0) {\n      const ent = content.ent[fmt.key | 0];\n      return ent && ent.tp == 'EX' && ent.data;\n    }\n  }\n  return false;\n}\n\n/**\n * Callback for enumerating entities in a Drafty document.\n * Called once for each entity.\n * @memberof Drafty\n * @static\n *\n * @callback EntityCallback\n * @param {Object} data entity data.\n * @param {string} entity type.\n * @param {number} index entity's index in `content.ent`.\n *\n * @return 'true-ish' to stop processing, 'false-ish' otherwise.\n */\n\n/**\n * Enumerate attachments: style EX and outside of normal rendering flow, i.e. <code>at = -1</code>.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to process for attachments.\n * @param {EntityCallback} callback - callback to call for each attachment.\n * @param {Object} context - value of \"this\" for callback.\n */\nDrafty.attachments = function(content, callback, context) {\n  if (!Array.isArray(content.fmt)) {\n    return;\n  }\n  let count = 0;\n  for (let i in content.ent) {\n    let fmt = content.fmt[i];\n    if (fmt && fmt.at < 0) {\n      const ent = content.ent[fmt.key | 0];\n      if (ent && ent.tp == 'EX' && ent.data) {\n        if (callback.call(context, ent.data, count++, 'EX')) {\n          break;\n        }\n      }\n    }\n  };\n}\n\n/**\n * Check if the drafty document has entities.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to check for entities.\n * @returns <code>true</code> if there are entities.\n */\nDrafty.hasEntities = function(content) {\n  return content.ent && content.ent.length > 0;\n}\n\n/**\n * Enumerate entities. Enumeration stops if callback returns 'true'.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document with entities to enumerate.\n * @param {EntityCallback} callback - callback to call for each entity.\n * @param {Object} context - value of \"this\" for callback.\n *\n */\nDrafty.entities = function(content, callback, context) {\n  if (content.ent && content.ent.length > 0) {\n    for (let i in content.ent) {\n      if (content.ent[i]) {\n        if (callback.call(context, content.ent[i].data, i, content.ent[i].tp)) {\n          break;\n        }\n      }\n    }\n  }\n}\n\n/**\n * Callback for enumerating styles (inline formats) in a Drafty document.\n * Called once for each style.\n * @memberof Drafty\n * @static\n *\n * @callback StyleCallback\n * @param {string} tp - format type.\n * @param {number} at - starting position of the format in text.\n * @param {number} len - extent of the format in characters.\n * @param {number} key - index of the entity if format is a reference.\n * @param {number} index - style's index in `content.fmt`.\n *\n * @return 'true-ish' to stop processing, 'false-ish' otherwise.\n */\n\n/**\n * Enumerate styles (inline formats). Enumeration stops if callback returns 'true'.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document with styles (formats) to enumerate.\n * @param {StyleCallback} callback - callback to call for each format.\n * @param {Object} context - value of \"this\" for callback.\n */\nDrafty.styles = function(content, callback, context) {\n  if (content.fmt && content.fmt.length > 0) {\n    for (let i in content.fmt) {\n      const fmt = content.fmt[i];\n      if (fmt) {\n        if (callback.call(context, fmt.tp, fmt.at, fmt.len, fmt.key, i)) {\n          break;\n        }\n      }\n    }\n  }\n}\n\n/**\n * Remove unrecognized fields from entity data\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document with entities to enumerate.\n * @returns content.\n */\nDrafty.sanitizeEntities = function(content) {\n  if (content && content.ent && content.ent.length > 0) {\n    for (let i in content.ent) {\n      const ent = content.ent[i];\n      if (ent && ent.data) {\n        const data = copyEntData(ent.data);\n        if (data) {\n          content.ent[i].data = data;\n        } else {\n          delete content.ent[i].data;\n        }\n      }\n    }\n  }\n  return content;\n}\n\n/**\n * Given the entity, get URL which can be used for downloading\n * entity data.\n * @memberof Drafty\n * @static\n *\n * @param {Object} entData - entity.data to get the URl from.\n * @returns {string} URL to download entity data or <code>null</code>.\n */\nDrafty.getDownloadUrl = function(entData) {\n  let url = null;\n  if (entData.mime != JSON_MIME_TYPE && entData.val) {\n    url = base64toObjectUrl(entData.val, entData.mime, Drafty.logger);\n  } else if (typeof entData.ref == 'string') {\n    url = entData.ref;\n  }\n  return url;\n}\n\n/**\n * Check if the entity data is not ready for sending, such as being uploaded to the server.\n * @memberof Drafty\n * @static\n *\n * @param {Object} entity.data to get the URl from.\n * @returns {boolean} true if upload is in progress, false otherwise.\n */\nDrafty.isProcessing = function(entData) {\n  return !!entData._processing;\n}\n\n/**\n * Given the entity, get URL which can be used for previewing\n * the entity.\n * @memberof Drafty\n * @static\n *\n * @param {Object} entity.data to get the URl from.\n *\n * @returns {string} url for previewing or null if no such url is available.\n */\nDrafty.getPreviewUrl = function(entData) {\n  return entData.val ? base64toObjectUrl(entData.val, entData.mime, Drafty.logger) : null;\n}\n\n/**\n * Get approximate size of the entity.\n * @memberof Drafty\n * @static\n *\n * @param {Object} entData - entity.data to get the size for.\n * @returns {number} size of entity data in bytes.\n */\nDrafty.getEntitySize = function(entData) {\n  // Either size hint or length of value. The value is base64 encoded,\n  // the actual object size is smaller than the encoded length.\n  return entData.size ? entData.size : entData.val ? (entData.val.length * 0.75) | 0 : 0;\n}\n\n/**\n * Get entity mime type.\n * @memberof Drafty\n * @static\n *\n * @param {Object} entData - entity.data to get the type for.\n * @returns {string} mime type of entity.\n */\nDrafty.getEntityMimeType = function(entData) {\n  return entData.mime || 'text/plain';\n}\n\n/**\n * Get HTML tag for a given two-letter style name.\n * @memberof Drafty\n * @static\n *\n * @param {string} style - two-letter style, like ST or LN.\n *\n * @returns {string} HTML tag name if style is found, {code: undefined} if style is falsish or not found.\n */\nDrafty.tagName = function(style) {\n  return FORMAT_TAGS[style] && FORMAT_TAGS[style].html_tag;\n}\n\n/**\n * For a given data bundle generate an object with HTML attributes,\n * for instance, given {url: \"http://www.example.com/\"} return\n * {href: \"http://www.example.com/\"}\n * @memberof Drafty\n * @static\n *\n * @param {string} style - two-letter style to generate attributes for.\n * @param {Object} data - data bundle to convert to attributes\n *\n * @returns {Object} object with HTML attributes.\n */\nDrafty.attrValue = function(style, data) {\n  if (data && DECORATORS[style]) {\n    return DECORATORS[style].props(data);\n  }\n\n  return undefined;\n}\n\n/**\n * Drafty MIME type.\n * @memberof Drafty\n * @static\n *\n * @returns {string} content-Type \"text/x-drafty\".\n */\nDrafty.getContentType = function() {\n  return DRAFTY_MIME_TYPE;\n}\n\n// =================\n// Utility methods.\n// =================\n\n// Take a string and defined earlier style spans, re-compose them into a tree where each leaf is\n// a same-style (including unstyled) string. I.e. 'hello *bold _italic_* and ~more~ world' ->\n// ('hello ', (b: 'bold ', (i: 'italic')), ' and ', (s: 'more'), ' world');\n//\n// This is needed in order to clear markup, i.e. 'hello *world*' -> 'hello world' and convert\n// ranges from markup-ed offsets to plain text offsets.\nfunction chunkify(line, start, end, spans) {\n  const chunks = [];\n\n  if (spans.length == 0) {\n    return [];\n  }\n\n  for (let i in spans) {\n    // Get the next chunk from the queue\n    const span = spans[i];\n\n    // Grab the initial unstyled chunk\n    if (span.at > start) {\n      chunks.push({\n        txt: line.slice(start, span.at)\n      });\n    }\n\n    // Grab the styled chunk. It may include subchunks.\n    const chunk = {\n      tp: span.tp\n    };\n    const chld = chunkify(line, span.at + 1, span.end, span.children);\n    if (chld.length > 0) {\n      chunk.children = chld;\n    } else {\n      chunk.txt = span.txt;\n    }\n    chunks.push(chunk);\n    start = span.end + 1; // '+1' is to skip the formatting character\n  }\n\n  // Grab the remaining unstyled chunk, after the last span\n  if (start < end) {\n    chunks.push({\n      txt: line.slice(start, end)\n    });\n  }\n\n  return chunks;\n}\n\n// Detect starts and ends of formatting spans. Unformatted spans are\n// ignored at this stage.\nfunction spannify(original, re_start, re_end, type) {\n  const result = [];\n  let index = 0;\n  let line = original.slice(0); // make a copy;\n\n  while (line.length > 0) {\n    // match[0]; // match, like '*abc*'\n    // match[1]; // match captured in parenthesis, like 'abc'\n    // match['index']; // offset where the match started.\n\n    // Find the opening token.\n    const start = re_start.exec(line);\n    if (start == null) {\n      break;\n    }\n\n    // Because javascript RegExp does not support lookbehind, the actual offset may not point\n    // at the markup character. Find it in the matched string.\n    let start_offset = start['index'] + start[0].lastIndexOf(start[1]);\n    // Clip the processed part of the string.\n    line = line.slice(start_offset + 1);\n    // start_offset is an offset within the clipped string. Convert to original index.\n    start_offset += index;\n    // Index now point to the beginning of 'line' within the 'original' string.\n    index = start_offset + 1;\n\n    // Find the matching closing token.\n    const end = re_end ? re_end.exec(line) : null;\n    if (end == null) {\n      break;\n    }\n    let end_offset = end['index'] + end[0].indexOf(end[1]);\n    // Clip the processed part of the string.\n    line = line.slice(end_offset + 1);\n    // Update offsets\n    end_offset += index;\n    // Index now points to the beginning of 'line' within the 'original' string.\n    index = end_offset + 1;\n\n    result.push({\n      txt: original.slice(start_offset + 1, end_offset),\n      children: [],\n      at: start_offset,\n      end: end_offset,\n      tp: type\n    });\n  }\n\n  return result;\n}\n\n// Convert linear array or spans into a tree representation.\n// Keep standalone and nested spans, throw away partially overlapping spans.\nfunction toSpanTree(spans) {\n  if (spans.length == 0) {\n    return [];\n  }\n\n  const tree = [spans[0]];\n  let last = spans[0];\n  for (let i = 1; i < spans.length; i++) {\n    // Keep spans which start after the end of the previous span or those which\n    // are complete within the previous span.\n    if (spans[i].at > last.end) {\n      // Span is completely outside of the previous span.\n      tree.push(spans[i]);\n      last = spans[i];\n    } else if (spans[i].end <= last.end) {\n      // Span is fully inside of the previous span. Push to subnode.\n      last.children.push(spans[i]);\n    }\n    // Span could partially overlap, ignoring it as invalid.\n  }\n\n  // Recursively rearrange the subnodes.\n  for (let i in tree) {\n    tree[i].children = toSpanTree(tree[i].children);\n  }\n\n  return tree;\n}\n\n// Convert drafty document to a tree.\nfunction draftyToTree(doc) {\n  if (!doc) {\n    return null;\n  }\n\n  doc = (typeof doc == 'string') ? {\n    txt: doc\n  } : doc;\n  let {\n    txt,\n    fmt,\n    ent\n  } = doc;\n\n  txt = txt || '';\n  if (!Array.isArray(ent)) {\n    ent = [];\n  }\n\n  if (!Array.isArray(fmt) || fmt.length == 0) {\n    if (ent.length == 0) {\n      return {\n        text: txt\n      };\n    }\n\n    // Handle special case when all values in fmt are 0 and fmt therefore is skipped.\n    fmt = [{\n      at: 0,\n      len: 0,\n      key: 0\n    }];\n  }\n\n  // Sanitize spans.\n  const spans = [];\n  const attachments = [];\n  fmt.forEach((span) => {\n    if (!span || typeof span != 'object') {\n      return;\n    }\n\n    if (!['undefined', 'number'].includes(typeof span.at)) {\n      // Present, but non-numeric 'at'.\n      return;\n    }\n    if (!['undefined', 'number'].includes(typeof span.len)) {\n      // Present, but non-numeric 'len'.\n      return;\n    }\n    let at = span.at | 0;\n    let len = span.len | 0;\n    if (len < 0) {\n      // Invalid span length.\n      return;\n    }\n\n    let key = span.key || 0;\n    if (ent.length > 0 && (typeof key != 'number' || key < 0 || key >= ent.length)) {\n      // Invalid key value.\n      return;\n    }\n\n    if (at <= -1) {\n      // Attachment. Store attachments separately.\n      attachments.push({\n        start: -1,\n        end: 0,\n        key: key\n      });\n      return;\n    } else if (at + len > txt.length) {\n      // Span is out of bounds.\n      return;\n    }\n\n    if (!span.tp) {\n      if (ent.length > 0 && (typeof ent[key] == 'object')) {\n        spans.push({\n          start: at,\n          end: at + len,\n          key: key\n        });\n      }\n    } else {\n      spans.push({\n        type: span.tp,\n        start: at,\n        end: at + len\n      });\n    }\n  });\n\n  // Sort spans first by start index (asc) then by length (desc), then by weight.\n  spans.sort((a, b) => {\n    let diff = a.start - b.start;\n    if (diff != 0) {\n      return diff;\n    }\n    diff = b.end - a.end;\n    if (diff != 0) {\n      return diff;\n    }\n    return FMT_WEIGHT.indexOf(b.type) - FMT_WEIGHT.indexOf(a.type);\n  });\n\n  // Move attachments to the end of the list.\n  if (attachments.length > 0) {\n    spans.push(...attachments);\n  }\n\n  spans.forEach((span) => {\n    if (ent.length > 0 && !span.type && ent[span.key] && typeof ent[span.key] == 'object') {\n      span.type = ent[span.key].tp;\n      span.data = ent[span.key].data;\n    }\n\n    // Is type still undefined? Hide the invalid element!\n    if (!span.type) {\n      span.type = 'HD';\n    }\n  });\n\n  let tree = spansToTree({}, txt, 0, txt.length, spans);\n\n  // Flatten tree nodes.\n  const flatten = function(node) {\n    if (Array.isArray(node.children) && node.children.length == 1) {\n      // Unwrap.\n      const child = node.children[0];\n      if (!node.type) {\n        const parent = node.parent;\n        node = child;\n        node.parent = parent;\n      } else if (!child.type && !child.children) {\n        node.text = child.text;\n        delete node.children;\n      }\n    }\n    return node;\n  }\n  tree = treeTopDown(tree, flatten);\n\n  return tree;\n}\n\n// Add tree node to a parent tree.\nfunction addNode(parent, n) {\n  if (!n) {\n    return parent;\n  }\n\n  if (!parent.children) {\n    parent.children = [];\n  }\n\n  // If text is present, move it to a subnode.\n  if (parent.text) {\n    parent.children.push({\n      text: parent.text,\n      parent: parent\n    });\n    delete parent.text;\n  }\n\n  n.parent = parent;\n  parent.children.push(n);\n\n  return parent;\n}\n\n// Returns a tree of nodes.\nfunction spansToTree(parent, text, start, end, spans) {\n  if (!spans || spans.length == 0) {\n    if (start < end) {\n      addNode(parent, {\n        text: text.substring(start, end)\n      });\n    }\n    return parent;\n  }\n\n  // Process subspans.\n  for (let i = 0; i < spans.length; i++) {\n    const span = spans[i];\n    if (span.start < 0 && span.type == 'EX') {\n      addNode(parent, {\n        type: span.type,\n        data: span.data,\n        key: span.key,\n        att: true\n      });\n      continue;\n    }\n\n    // Add un-styled range before the styled span starts.\n    if (start < span.start) {\n      addNode(parent, {\n        text: text.substring(start, span.start)\n      });\n      start = span.start;\n    }\n\n    // Get all spans which are within the current span.\n    const subspans = [];\n    while (i < spans.length - 1) {\n      const inner = spans[i + 1];\n      if (inner.start < 0) {\n        // Attachments are in the end. Stop.\n        break;\n      } else if (inner.start < span.end) {\n        if (inner.end <= span.end) {\n          const tag = FORMAT_TAGS[inner.tp] || {};\n          if (inner.start < inner.end || tag.isVoid) {\n            // Valid subspan: completely within the current span and\n            // either non-zero length or zero length is acceptable.\n            subspans.push(inner);\n          }\n        }\n        i++;\n        // Overlapping subspans are ignored.\n      } else {\n        // Past the end of the current span. Stop.\n        break;\n      }\n    }\n\n    addNode(parent, spansToTree({\n      type: span.type,\n      data: span.data,\n      key: span.key\n    }, text, start, span.end, subspans));\n    start = span.end;\n  }\n\n  // Add the last unformatted range.\n  if (start < end) {\n    addNode(parent, {\n      text: text.substring(start, end)\n    });\n  }\n\n  return parent;\n}\n\n// Append a tree to a Drafty doc.\nfunction treeToDrafty(doc, tree, keymap) {\n  if (!tree) {\n    return doc;\n  }\n\n  doc.txt = doc.txt || '';\n\n  // Checkpoint to measure length of the current tree node.\n  const start = doc.txt.length;\n\n  if (tree.text) {\n    doc.txt += tree.text;\n  } else if (Array.isArray(tree.children)) {\n    tree.children.forEach((c) => {\n      treeToDrafty(doc, c, keymap);\n    });\n  }\n\n  if (tree.type) {\n    const len = doc.txt.length - start;\n    doc.fmt = doc.fmt || [];\n    if (Object.keys(tree.data || {}).length > 0) {\n      doc.ent = doc.ent || [];\n      const newKey = (typeof keymap[tree.key] == 'undefined') ? doc.ent.length : keymap[tree.key];\n      keymap[tree.key] = newKey;\n      doc.ent[newKey] = {\n        tp: tree.type,\n        data: tree.data\n      };\n      if (tree.att) {\n        // Attachment.\n        doc.fmt.push({\n          at: -1,\n          len: 0,\n          key: newKey\n        });\n      } else {\n        doc.fmt.push({\n          at: start,\n          len: len,\n          key: newKey\n        });\n      }\n    } else {\n      doc.fmt.push({\n        tp: tree.type,\n        at: start,\n        len: len\n      });\n    }\n  }\n  return doc;\n}\n\n// Traverse the tree top down transforming the nodes: apply transformer to every tree node.\nfunction treeTopDown(src, transformer, context) {\n  if (!src) {\n    return null;\n  }\n\n  let dst = transformer.call(context, src);\n  if (!dst || !dst.children) {\n    return dst;\n  }\n\n  const children = [];\n  for (let i in dst.children) {\n    let n = dst.children[i];\n    if (n) {\n      n = treeTopDown(n, transformer, context);\n      if (n) {\n        children.push(n);\n      }\n    }\n  }\n\n  if (children.length == 0) {\n    dst.children = null;\n  } else {\n    dst.children = children;\n  }\n\n  return dst;\n}\n\n// Traverse the tree bottom-up: apply formatter to every node.\n// The formatter must maintain its state through context.\nfunction treeBottomUp(src, formatter, index, stack, context) {\n  if (!src) {\n    return null;\n  }\n\n  if (stack && src.type) {\n    stack.push(src.type);\n  }\n\n  let values = [];\n  for (let i in src.children) {\n    const n = treeBottomUp(src.children[i], formatter, i, stack, context);\n    if (n) {\n      values.push(n);\n    }\n  }\n  if (values.length == 0) {\n    if (src.text) {\n      values = [src.text];\n    } else {\n      values = null;\n    }\n  }\n\n  if (stack && src.type) {\n    stack.pop();\n  }\n\n  return formatter.call(context, src.type, src.data, values, index, stack);\n}\n\n// Clip tree to the provided limit.\nfunction shortenTree(tree, limit, tail) {\n  if (!tree) {\n    return null;\n  }\n\n  if (tail) {\n    limit -= tail.length;\n  }\n\n  const shortener = function(node) {\n    if (limit <= -1) {\n      // Limit -1 means the doc was already clipped.\n      return null;\n    }\n\n    if (node.att) {\n      // Attachments are unchanged.\n      return node;\n    }\n    if (limit == 0) {\n      node.text = tail;\n      limit = -1;\n    } else if (node.text) {\n      const len = node.text.length;\n      if (len > limit) {\n        node.text = node.text.substring(0, limit) + tail;\n        limit = -1;\n      } else {\n        limit -= len;\n      }\n    }\n    return node;\n  }\n\n  return treeTopDown(tree, shortener);\n}\n\n// Strip heavy entities from a tree.\nfunction lightEntity(tree, allow) {\n  const lightCopy = node => {\n    const data = copyEntData(node.data, true, allow ? allow(node) : null);\n    if (data) {\n      node.data = data;\n    } else {\n      delete node.data;\n    }\n    return node;\n  }\n  return treeTopDown(tree, lightCopy);\n}\n\n// Remove spaces and breaks on the left.\nfunction lTrim(tree) {\n  if (tree.type == 'BR') {\n    tree = null;\n  } else if (tree.text) {\n    if (!tree.type) {\n      tree.text = tree.text.trimStart();\n      if (!tree.text) {\n        tree = null;\n      }\n    }\n  } else if (!tree.type && tree.children && tree.children.length > 0) {\n    const c = lTrim(tree.children[0]);\n    if (c) {\n      tree.children[0] = c;\n    } else {\n      tree.children.shift();\n      if (!tree.type && tree.children.length == 0) {\n        tree = null;\n      }\n    }\n  }\n  return tree;\n}\n\n// Move attachments to the end. Attachments must be at the top level, no need to traverse the tree.\nfunction attachmentsToEnd(tree, limit) {\n  if (!tree) {\n    return null;\n  }\n\n  if (tree.att) {\n    tree.text = ' ';\n    delete tree.att;\n    delete tree.children;\n  } else if (tree.children) {\n    const attachments = [];\n    const children = [];\n    for (let i in tree.children) {\n      const c = tree.children[i];\n      if (c.att) {\n        if (attachments.length == limit) {\n          // Too many attachments to preview;\n          continue;\n        }\n        if (c.data['mime'] == JSON_MIME_TYPE) {\n          // JSON attachments are not shown in preview.\n          continue;\n        }\n\n        delete c.att;\n        delete c.children;\n        c.text = ' ';\n        attachments.push(c);\n      } else {\n        children.push(c);\n      }\n    }\n    tree.children = children.concat(attachments);\n  }\n  return tree;\n}\n\n// Get a list of entities from a text.\nfunction extractEntities(line) {\n  let match;\n  let extracted = [];\n  ENTITY_TYPES.forEach((entity) => {\n    while ((match = entity.re.exec(line)) !== null) {\n      extracted.push({\n        offset: match['index'],\n        len: match[0].length,\n        unique: match[0],\n        data: entity.pack(match[0]),\n        type: entity.name\n      });\n    }\n  });\n\n  if (extracted.length == 0) {\n    return extracted;\n  }\n\n  // Remove entities detected inside other entities, like #hashtag in a URL.\n  extracted.sort((a, b) => {\n    return a.offset - b.offset;\n  });\n\n  let idx = -1;\n  extracted = extracted.filter((el) => {\n    const result = (el.offset > idx);\n    idx = el.offset + el.len;\n    return result;\n  });\n\n  return extracted;\n}\n\n// Convert the chunks into format suitable for serialization.\nfunction draftify(chunks, startAt) {\n  let plain = '';\n  let ranges = [];\n  for (let i in chunks) {\n    const chunk = chunks[i];\n    if (!chunk.txt) {\n      const drafty = draftify(chunk.children, plain.length + startAt);\n      chunk.txt = drafty.txt;\n      ranges = ranges.concat(drafty.fmt);\n    }\n\n    if (chunk.tp) {\n      ranges.push({\n        at: plain.length + startAt,\n        len: chunk.txt.length,\n        tp: chunk.tp\n      });\n    }\n\n    plain += chunk.txt;\n  }\n  return {\n    txt: plain,\n    fmt: ranges\n  };\n}\n\n// Create a copy of entity data with (light=false) or without (light=true) the large payload.\n// The array 'allow' contains a list of fields exempt from stripping.\nfunction copyEntData(data, light, allow) {\n  if (data && Object.entries(data).length > 0) {\n    allow = allow || [];\n    const dc = {};\n    ALLOWED_ENT_FIELDS.forEach(key => {\n      if (data[key]) {\n        if (light && !allow.includes(key) &&\n          (typeof data[key] == 'string' || Array.isArray(data[key])) &&\n          data[key].length > MAX_PREVIEW_DATA_SIZE) {\n          return;\n        }\n        if (typeof data[key] == 'object') {\n          return;\n        }\n        dc[key] = data[key];\n      }\n    });\n\n    if (Object.entries(dc).length != 0) {\n      return dc;\n    }\n  }\n  return null;\n}\n\nif (typeof module != 'undefined') {\n  module.exports = Drafty;\n}\n","/**\n * @file Utilities for uploading and downloading files.\n *\n * @copyright 2015-2023 Tinode LLC.\n */\n'use strict';\n\nimport CommError from './comm-error.js';\nimport {\n  isUrlRelative,\n  jsonParseHelper\n} from './utils.js';\n\nlet XHRProvider;\n\nfunction addURLParam(relUrl, key, value) {\n  const url = new URL(relUrl, window.location.origin);\n  url.searchParams.append(key, value);\n  return url.toString().substring(window.location.origin.length);\n}\n\n/**\n * @class LargeFileHelper - utilities for uploading and downloading files out of band.\n * Don't instantiate this class directly. Use {Tinode.getLargeFileHelper} instead.\n * @memberof Tinode\n *\n * @param {Tinode} tinode - the main Tinode object.\n * @param {string} version - protocol version, i.e. '0'.\n */\nexport default class LargeFileHelper {\n  constructor(tinode, version) {\n    this._tinode = tinode;\n    this._version = version;\n\n    this._apiKey = tinode._apiKey;\n    this._authToken = tinode.getAuthToken();\n\n    // Ongoing requests.\n    this.xhr = [];\n  }\n\n  /**\n   * Start uploading the file to an endpoint at baseUrl.\n   *\n   * @memberof Tinode.LargeFileHelper#\n   *\n   * @param {string} baseUrl base URL of upload server.\n   * @param {File|Blob} data data to upload.\n   * @param {string} avatarFor topic name if the upload represents an avatar.\n   * @param {Callback} onProgress callback. Takes one {float} parameter 0..1\n   * @param {Callback} onSuccess callback. Called when the file is successfully uploaded.\n   * @param {Callback} onFailure callback. Called in case of a failure.\n   *\n   * @returns {Promise} resolved/rejected when the upload is completed/failed.\n   */\n  uploadWithBaseUrl(baseUrl, data, avatarFor, onProgress, onSuccess, onFailure) {\n    let url = `/v${this._version}/file/u/`;\n    if (baseUrl) {\n      let base = baseUrl;\n      if (base.endsWith('/')) {\n        // Removing trailing slash.\n        base = base.slice(0, -1);\n      }\n      if (base.startsWith('http://') || base.startsWith('https://')) {\n        url = base + url;\n      } else {\n        throw new Error(`Invalid base URL '${baseUrl}'`);\n      }\n    }\n\n    const instance = this;\n    const xhr = new XHRProvider();\n    this.xhr.push(xhr);\n\n    xhr.open('POST', url, true);\n    xhr.setRequestHeader('X-Tinode-APIKey', this._apiKey);\n    if (this._authToken) {\n      xhr.setRequestHeader('X-Tinode-Auth', `Token ${this._authToken.token}`);\n    }\n\n    let toResolve = null;\n    let toReject = null;\n\n    const result = new Promise((resolve, reject) => {\n      toResolve = resolve;\n      toReject = reject;\n    });\n\n    xhr.upload.onprogress = e => {\n      if (e.lengthComputable) {\n        if (onProgress) {\n          onProgress(e.loaded / e.total);\n        }\n        if (this.onProgress) {\n          this.onProgress(e.loaded / e.total);\n        }\n      }\n    };\n\n    xhr.onload = function() {\n      let pkt;\n      try {\n        pkt = JSON.parse(this.response, jsonParseHelper);\n      } catch (err) {\n        instance._tinode.logger(\"ERROR: Invalid server response in LargeFileHelper\", this.response);\n        pkt = {\n          ctrl: {\n            code: this.status,\n            text: this.statusText\n          }\n        };\n      }\n\n      if (this.status >= 200 && this.status < 300) {\n        if (toResolve) {\n          toResolve(pkt.ctrl.params.url);\n        }\n        if (onSuccess) {\n          onSuccess(pkt.ctrl);\n        }\n      } else if (this.status >= 400) {\n        if (toReject) {\n          toReject(new CommError(pkt.ctrl.text, pkt.ctrl.code));\n        }\n        if (onFailure) {\n          onFailure(pkt.ctrl);\n        }\n      } else {\n        instance._tinode.logger(\"ERROR: Unexpected server response status\", this.status, this.response);\n      }\n    };\n\n    xhr.onerror = function(e) {\n      if (toReject) {\n        toReject(e || new Error(\"failed\"));\n      }\n      if (onFailure) {\n        onFailure(null);\n      }\n    };\n\n    xhr.onabort = function(e) {\n      if (toReject) {\n        toReject(new Error(\"upload cancelled by user\"));\n      }\n      if (onFailure) {\n        onFailure(null);\n      }\n    };\n\n    try {\n      const form = new FormData();\n      form.append('file', data);\n      form.set('id', this._tinode.getNextUniqueId());\n      if (avatarFor) {\n        form.set('topic', avatarFor);\n      }\n      xhr.send(form);\n    } catch (err) {\n      if (toReject) {\n        toReject(err);\n      }\n      if (onFailure) {\n        onFailure(null);\n      }\n    }\n\n    return result;\n  }\n  /**\n   * Start uploading the file to default endpoint.\n   *\n   * @memberof Tinode.LargeFileHelper#\n   *\n   * @param {File|Blob} data to upload\n   * @param {string} avatarFor topic name if the upload represents an avatar.\n   * @param {Callback} onProgress callback. Takes one {float} parameter 0..1\n   * @param {Callback} onSuccess callback. Called when the file is successfully uploaded.\n   * @param {Callback} onFailure callback. Called in case of a failure.\n   *\n   * @returns {Promise} resolved/rejected when the upload is completed/failed.\n   */\n  upload(data, avatarFor, onProgress, onSuccess, onFailure) {\n    const baseUrl = (this._tinode._secure ? 'https://' : 'http://') + this._tinode._host;\n    return this.uploadWithBaseUrl(baseUrl, data, avatarFor, onProgress, onSuccess, onFailure);\n  }\n  /**\n   * Download the file from a given URL using GET request. This method works with the Tinode server only.\n   *\n   * @memberof Tinode.LargeFileHelper#\n   *\n   * @param {string} relativeUrl - URL to download the file from. Must be relative url, i.e. must not contain the host.\n   * @param {string=} filename - file name to use for the downloaded file.\n   *\n   * @returns {Promise} resolved/rejected when the download is completed/failed.\n   */\n  download(relativeUrl, filename, mimetype, onProgress, onError) {\n    if (!isUrlRelative(relativeUrl)) {\n      // As a security measure refuse to download from an absolute URL.\n      if (onError) {\n        onError(`The URL '${relativeUrl}' must be relative, not absolute`);\n      }\n      return;\n    }\n    if (!this._authToken) {\n      if (onError) {\n        onError(\"Must authenticate first\");\n      }\n      return;\n    }\n    const instance = this;\n\n    const xhr = new XHRProvider();\n    this.xhr.push(xhr);\n\n    // Add '&asatt=1' to URL to request 'Content-Disposition: attachment' response header.\n    relativeUrl = addURLParam(relativeUrl, 'asatt', '1');\n\n    // Get data as blob (stored by the browser as a temporary file).\n    xhr.open('GET', relativeUrl, true);\n    xhr.setRequestHeader('X-Tinode-APIKey', this._apiKey);\n    xhr.setRequestHeader('X-Tinode-Auth', 'Token ' + this._authToken.token);\n    xhr.responseType = 'blob';\n\n    xhr.onprogress = function(e) {\n      if (onProgress) {\n        // Passing e.loaded instead of e.loaded/e.total because e.total\n        // is always 0 with gzip compression enabled by the server.\n        onProgress(e.loaded);\n      }\n    };\n\n    let toResolve = null;\n    let toReject = null;\n\n    const result = new Promise((resolve, reject) => {\n      toResolve = resolve;\n      toReject = reject;\n    });\n\n    // The blob needs to be saved as file. There is no known way to\n    // save the blob as file other than to fake a click on an <a href... download=...>.\n    xhr.onload = function() {\n      if (this.status == 200) {\n        const link = document.createElement('a');\n        // URL.createObjectURL is not available in non-browser environment. This call will fail.\n        link.href = window.URL.createObjectURL(new Blob([this.response], {\n          type: mimetype\n        }));\n        link.style.display = 'none';\n        link.setAttribute('download', filename);\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        window.URL.revokeObjectURL(link.href);\n        if (toResolve) {\n          toResolve();\n        }\n      } else if (this.status >= 400 && toReject) {\n        // The this.responseText is undefined, must use this.response which is a blob.\n        // Need to convert this.response to JSON. The blob can only be accessed by the\n        // FileReader.\n        const reader = new FileReader();\n        reader.onload = function() {\n          try {\n            const pkt = JSON.parse(this.result, jsonParseHelper);\n            toReject(new CommError(pkt.ctrl.text, pkt.ctrl.code));\n          } catch (err) {\n            instance._tinode.logger(\"ERROR: Invalid server response in LargeFileHelper\", this.result);\n            toReject(err);\n          }\n        };\n        reader.readAsText(this.response);\n      }\n    };\n\n    xhr.onerror = function(e) {\n      if (toReject) {\n        toReject(new Error(\"failed\"));\n      }\n      if (onError) {\n        onError(e);\n      }\n    };\n\n    xhr.onabort = function() {\n      if (toReject) {\n        toReject(null);\n      }\n    };\n\n    try {\n      xhr.send();\n    } catch (err) {\n      if (toReject) {\n        toReject(err);\n      }\n      if (onError) {\n        onError(err);\n      }\n    }\n\n    return result;\n  }\n  /**\n   * Try to cancel all ongoing uploads or downloads.\n   * @memberof Tinode.LargeFileHelper#\n   */\n  cancel() {\n    this.xhr.forEach(req => {\n      if (req.readyState < 4) {\n        req.abort();\n      }\n    });\n  }\n  /**\n   * To use LargeFileHelper in a non browser context, supply XMLHttpRequest provider.\n   * @static\n   * @memberof LargeFileHelper\n   * @param xhrProvider XMLHttpRequest provider, e.g. for node <code>require('xhr')</code>.\n   */\n  static setNetworkProvider(xhrProvider) {\n    XHRProvider = xhrProvider;\n  }\n}\n","/**\n * @file Helper class for constructing {@link Tinode.GetQuery}.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\n/**\n * Helper class for constructing {@link Tinode.GetQuery}.\n *\n * @class MetaGetBuilder\n * @memberof Tinode\n *\n * @param {Tinode.Topic} parent topic which instantiated this builder.\n */\nexport default class MetaGetBuilder {\n  constructor(parent) {\n    this.topic = parent;\n    this.what = {};\n  }\n\n  // Get timestamp of the most recent desc update.\n  #get_desc_ims() {\n    return this.topic.updated;\n  }\n\n  // Get timestamp of the most recent subs update.\n  #get_subs_ims() {\n    if (this.topic.isP2PType()) {\n      return this.#get_desc_ims();\n    }\n    return this.topic._lastSubsUpdate;\n  }\n  /**\n   * Add query parameters to fetch messages within explicit limits.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {number=} since - messages newer than this (inclusive);\n   * @param {number=} before - older than this (exclusive)\n   * @param {number=} limit - number of messages to fetch\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withData(since, before, limit) {\n    this.what['data'] = {\n      since: since,\n      before: before,\n      limit: limit\n    };\n    return this;\n  }\n  /**\n   * Add query parameters to fetch messages newer than the latest saved message.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {number=} limit - number of messages to fetch\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withLaterData(limit) {\n    return this.withData(this.topic._maxSeq > 0 ? this.topic._maxSeq + 1 : undefined, undefined, limit);\n  }\n  /**\n   * Add query parameters to fetch messages older than the earliest saved message.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {number=} limit - maximum number of messages to fetch.\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withEarlierData(limit) {\n    return this.withData(undefined, this.topic._minSeq > 0 ? this.topic._minSeq : undefined, limit);\n  }\n  /**\n   * Add query parameters to fetch topic description if it's newer than the given timestamp.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {Date=} ims - fetch messages newer than this timestamp.\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withDesc(ims) {\n    this.what['desc'] = {\n      ims: ims\n    };\n    return this;\n  }\n  /**\n   * Add query parameters to fetch topic description if it's newer than the last update.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withLaterDesc() {\n    return this.withDesc(this.#get_desc_ims());\n  }\n  /**\n   * Add query parameters to fetch subscriptions.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {Date=} ims - fetch subscriptions modified more recently than this timestamp\n   * @param {number=} limit - maximum number of subscriptions to fetch.\n   * @param {string=} userOrTopic - user ID or topic name to fetch for fetching one subscription.\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withSub(ims, limit, userOrTopic) {\n    const opts = {\n      ims: ims,\n      limit: limit\n    };\n    if (this.topic.getType() == 'me') {\n      opts.topic = userOrTopic;\n    } else {\n      opts.user = userOrTopic;\n    }\n    this.what['sub'] = opts;\n    return this;\n  }\n  /**\n   * Add query parameters to fetch a single subscription.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {Date=} ims - fetch subscriptions modified more recently than this timestamp\n   * @param {string=} userOrTopic - user ID or topic name to fetch for fetching one subscription.\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withOneSub(ims, userOrTopic) {\n    return this.withSub(ims, undefined, userOrTopic);\n  }\n  /**\n   * Add query parameters to fetch a single subscription if it's been updated since the last update.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {string=} userOrTopic - user ID or topic name to fetch for fetching one subscription.\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withLaterOneSub(userOrTopic) {\n    return this.withOneSub(this.topic._lastSubsUpdate, userOrTopic);\n  }\n  /**\n   * Add query parameters to fetch subscriptions updated since the last update.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {number=} limit - maximum number of subscriptions to fetch.\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withLaterSub(limit) {\n    return this.withSub(this.#get_subs_ims(), limit);\n  }\n  /**\n   * Add query parameters to fetch topic tags.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withTags() {\n    this.what['tags'] = true;\n    return this;\n  }\n  /**\n   * Add query parameters to fetch user's credentials. <code>'me'</code> topic only.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withCred() {\n    if (this.topic.getType() == 'me') {\n      this.what['cred'] = true;\n    } else {\n      this.topic._tinode.logger(\"ERROR: Invalid topic type for MetaGetBuilder:withCreds\", this.topic.getType());\n    }\n    return this;\n  }\n  /**\n   * Add query parameters to fetch deleted messages within explicit limits. Any/all parameters can be null.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {number=} since - ids of messages deleted since this 'del' id (inclusive)\n   * @param {number=} limit - number of deleted message ids to fetch\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withDel(since, limit) {\n    if (since || limit) {\n      this.what['del'] = {\n        since: since,\n        limit: limit\n      };\n    }\n    return this;\n  }\n  /**\n   * Add query parameters to fetch messages deleted after the saved <code>'del'</code> id.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {number=} limit - number of deleted message ids to fetch\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withLaterDel(limit) {\n    // Specify 'since' only if we have already received some messages. If\n    // we have no locally cached messages then we don't care if any messages were deleted.\n    return this.withDel(this.topic._maxSeq > 0 ? this.topic._maxDel + 1 : undefined, limit);\n  }\n\n  /**\n   * Extract subquery: get an object that contains specified subquery.\n   * @memberof Tinode.MetaGetBuilder#\n   * @param {string} what - subquery to return: one of 'data', 'sub', 'desc', 'tags', 'cred', 'del'.\n   * @returns {Object} requested subquery or <code>undefined</code>.\n   */\n  extract(what) {\n    return this.what[what];\n  }\n\n  /**\n   * Construct parameters.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @returns {Tinode.GetQuery} Get query\n   */\n  build() {\n    const what = [];\n    let params = {};\n    ['data', 'sub', 'desc', 'tags', 'cred', 'del'].forEach((key) => {\n      if (this.what.hasOwnProperty(key)) {\n        what.push(key);\n        if (Object.getOwnPropertyNames(this.what[key]).length > 0) {\n          params[key] = this.what[key];\n        }\n      }\n    });\n    if (what.length > 0) {\n      params.what = what.join(' ');\n    } else {\n      params = undefined;\n    }\n    return params;\n  }\n}\n","/**\n * @file Topic management.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\nimport AccessMode from './access-mode.js';\nimport CBuffer from './cbuffer.js';\nimport CommError from './comm-error.js';\nimport * as Const from './config.js';\nimport Drafty from './drafty.js';\nimport MetaGetBuilder from './meta-builder.js';\nimport {\n  mergeObj,\n  mergeToCache,\n  normalizeArray\n} from './utils.js';\n\n/**\n * Topic is a class representing a logical communication channel.\n */\nexport class Topic {\n  /**\n   * @callback onData\n   * @param {Data} data - Data packet\n   */\n\n  /**\n   * Create topic.\n   * @param {string} name - Name of the topic to create.\n   * @param {Object=} callbacks - Object with various event callbacks.\n   * @param {onData} callbacks.onData - Callback which receives a <code>{data}</code> message.\n   * @param {callback} callbacks.onMeta - Callback which receives a <code>{meta}</code> message.\n   * @param {callback} callbacks.onPres - Callback which receives a <code>{pres}</code> message.\n   * @param {callback} callbacks.onInfo - Callback which receives an <code>{info}</code> message.\n   * @param {callback} callbacks.onMetaDesc - Callback which receives changes to topic desctioption {@link desc}.\n   * @param {callback} callbacks.onMetaSub - Called for a single subscription record change.\n   * @param {callback} callbacks.onSubsUpdated - Called after a batch of subscription changes have been recieved and cached.\n   * @param {callback} callbacks.onDeleteTopic - Called after the topic is deleted.\n   * @param {callback} callbacls.onAllMessagesReceived - Called when all requested <code>{data}</code> messages have been recived.\n   */\n  constructor(name, callbacks) {\n    // Parent Tinode object.\n    this._tinode = null;\n\n    // Server-provided data, locally immutable.\n    // topic name\n    this.name = name;\n    // Timestamp when the topic was created.\n    this.created = null;\n    // Timestamp when the topic was last updated.\n    this.updated = null;\n    // Timestamp of the last messages\n    this.touched = new Date(0);\n    // Access mode, see AccessMode\n    this.acs = new AccessMode(null);\n    // Per-topic private data (accessible by current user only).\n    this.private = null;\n    // Per-topic public data (accessible by all users).\n    this.public = null;\n    // Per-topic system-provided data (accessible by all users).\n    this.trusted = null;\n\n    // Locally cached data\n    // Subscribed users, for tracking read/recv/msg notifications.\n    this._users = {};\n\n    // Current value of locally issued seqId, used for pending messages.\n    this._queuedSeqId = Const.LOCAL_SEQID;\n\n    // The maximum known {data.seq} value.\n    this._maxSeq = 0;\n    // The minimum known {data.seq} value.\n    this._minSeq = 0;\n    // Indicator that the last request for earlier messages returned 0.\n    this._noEarlierMsgs = false;\n    // The maximum known deletion ID.\n    this._maxDel = 0;\n    // Timer object used to send 'recv' notifications.\n    this._recvNotificationTimer = null;\n\n    // User discovery tags\n    this._tags = [];\n    // Credentials such as email or phone number.\n    this._credentials = [];\n    // Message versions cache (e.g. for edited messages).\n    // Keys: original message seq ID.\n    // Values: CBuffers containing newer versions of the original message\n    // ordered by seq id.\n    this._messageVersions = {};\n    // Message cache, sorted by message seq values, from old to new.\n    this._messages = new CBuffer((a, b) => {\n      return a.seq - b.seq;\n    }, true);\n    // Boolean, true if the topic is currently live\n    this._attached = false;\n    // Timestap of the most recently updated subscription.\n    this._lastSubsUpdate = new Date(0);\n    // Topic created but not yet synced with the server. Used only during initialization.\n    this._new = true;\n    // The topic is deleted at the server, this is a local copy.\n    this._deleted = false;\n\n    // Timer used to trgger {leave} request after a delay.\n    this._delayedLeaveTimer = null;\n\n    // Callbacks\n    if (callbacks) {\n      this.onData = callbacks.onData;\n      this.onMeta = callbacks.onMeta;\n      this.onPres = callbacks.onPres;\n      this.onInfo = callbacks.onInfo;\n      // A single desc update;\n      this.onMetaDesc = callbacks.onMetaDesc;\n      // A single subscription record;\n      this.onMetaSub = callbacks.onMetaSub;\n      // All subscription records received;\n      this.onSubsUpdated = callbacks.onSubsUpdated;\n      this.onTagsUpdated = callbacks.onTagsUpdated;\n      this.onCredsUpdated = callbacks.onCredsUpdated;\n      this.onDeleteTopic = callbacks.onDeleteTopic;\n      this.onAllMessagesReceived = callbacks.onAllMessagesReceived;\n    }\n  }\n\n  // Static methods.\n\n  /**\n   * Determine topic type from topic's name: grp, p2p, me, fnd, sys.\n   *\n   * @param {string} name - Name of the topic to test.\n   * @returns {string} One of <code>\"me\"</code>, <code>\"fnd\"</code>, <code>\"sys\"</code>, <code>\"grp\"</code>,\n   *    <code>\"p2p\"</code> or <code>undefined</code>.\n   */\n  static topicType(name) {\n    const types = {\n      'me': Const.TOPIC_ME,\n      'fnd': Const.TOPIC_FND,\n      'grp': Const.TOPIC_GRP,\n      'new': Const.TOPIC_GRP,\n      'nch': Const.TOPIC_GRP,\n      'chn': Const.TOPIC_GRP,\n      'usr': Const.TOPIC_P2P,\n      'sys': Const.TOPIC_SYS\n    };\n    return types[(typeof name == 'string') ? name.substring(0, 3) : 'xxx'];\n  }\n\n  /**\n   * Check if the given topic name is a name of a 'me' topic.\n   *\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a 'me' topic, <code>false</code> otherwise.\n   */\n  static isMeTopicName(name) {\n    return Topic.topicType(name) == Const.TOPIC_ME;\n  }\n\n  /**\n   * Check if the given topic name is a name of a group topic.\n   * @static\n   *\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a group topic, <code>false</code> otherwise.\n   */\n  static isGroupTopicName(name) {\n    return Topic.topicType(name) == Const.TOPIC_GRP;\n  }\n\n  /**\n   * Check if the given topic name is a name of a p2p topic.\n   * @static\n   *\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a p2p topic, <code>false</code> otherwise.\n   */\n  static isP2PTopicName(name) {\n    return Topic.topicType(name) == Const.TOPIC_P2P;\n  }\n\n  /**\n   * Check if the given topic name is a name of a communication topic, i.e. P2P or group.\n   * @static\n   *\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a p2p or group topic, <code>false</code> otherwise.\n   */\n  static isCommTopicName(name) {\n    return Topic.isP2PTopicName(name) || Topic.isGroupTopicName(name);\n  }\n\n  /**\n   * Check if the topic name is a name of a new topic.\n   * @static\n   *\n   * @param {string} name - topic name to check.\n   * @returns {boolean} <code>true</code> if the name is a name of a new topic, <code>false</code> otherwise.\n   */\n  static isNewGroupTopicName(name) {\n    return (typeof name == 'string') &&\n      (name.substring(0, 3) == Const.TOPIC_NEW || name.substring(0, 3) == Const.TOPIC_NEW_CHAN);\n  }\n\n  /**\n   * Check if the topic name is a name of a channel.\n   * @static\n   *\n   * @param {string} name - topic name to check.\n   * @returns {boolean} <code>true</code> if the name is a name of a channel, <code>false</code> otherwise.\n   */\n  static isChannelTopicName(name) {\n    return (typeof name == 'string') &&\n      (name.substring(0, 3) == Const.TOPIC_CHAN || name.substring(0, 3) == Const.TOPIC_NEW_CHAN);\n  }\n\n  /**\n   * Check if the topic is subscribed.\n   * @returns {boolean} True is topic is attached/subscribed, false otherwise.\n   */\n  isSubscribed() {\n    return this._attached;\n  }\n\n  /**\n   * Request topic to subscribe. Wrapper for {@link Tinode#subscribe}.\n   *\n   * @param {Tinode.GetQuery=} getParams - get query parameters.\n   * @param {Tinode.SetParams=} setParams - set parameters.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to the request.\n   */\n  subscribe(getParams, setParams) {\n    // Clear request to leave topic.\n    clearTimeout(this._delayedLeaveTimer);\n    this._delayedLeaveTimer = null;\n\n    // If the topic is already subscribed, return resolved promise\n    if (this._attached) {\n      return Promise.resolve(this);\n    }\n\n    // If the topic is deleted, reject subscription requests.\n    if (this._deleted) {\n      return Promise.reject(new Error(\"Conversation deleted\"));\n    }\n\n    // Send subscribe message, handle async response.\n    // If topic name is explicitly provided, use it. If no name, then it's a new group topic,\n    // use \"new\".\n    return this._tinode.subscribe(this.name || Const.TOPIC_NEW, getParams, setParams).then(ctrl => {\n      if (ctrl.code >= 300) {\n        // Do nothing if subscription status has not changed.\n        return ctrl;\n      }\n\n      this._attached = true;\n      this._deleted = false;\n      this.acs = (ctrl.params && ctrl.params.acs) ? ctrl.params.acs : this.acs;\n\n      // Set topic name for new topics and add it to cache.\n      if (this._new) {\n        delete this._new;\n\n        if (this.name != ctrl.topic) {\n          // Name may change new123456 -> grpAbCdEf. Remove from cache under the old name.\n          this._cacheDelSelf();\n          this.name = ctrl.topic;\n        }\n        this._cachePutSelf();\n\n        this.created = ctrl.ts;\n        this.updated = ctrl.ts;\n\n        if (this.name != Const.TOPIC_ME && this.name != Const.TOPIC_FND) {\n          // Add the new topic to the list of contacts maintained by the 'me' topic.\n          const me = this._tinode.getMeTopic();\n          if (me.onMetaSub) {\n            me.onMetaSub(this);\n          }\n          if (me.onSubsUpdated) {\n            me.onSubsUpdated([this.name], 1);\n          }\n        }\n\n        if (setParams && setParams.desc) {\n          setParams.desc._noForwarding = true;\n          this._processMetaDesc(setParams.desc);\n        }\n      }\n      return ctrl;\n    });\n  }\n\n  /**\n   * Create a draft of a message without sending it to the server.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string | Object} data - Content to wrap in a draft.\n   * @param {boolean=} noEcho - If <code>true</code> server will not echo message back to originating\n   * session. Otherwise the server will send a copy of the message to sender.\n   *\n   * @returns {Object} message draft.\n   */\n  createMessage(data, noEcho) {\n    return this._tinode.createMessage(this.name, data, noEcho);\n  }\n\n  /**\n   * Immediately publish data to topic. Wrapper for {@link Tinode#publish}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string | Object} data - Message to publish, either plain string or a Drafty object.\n   * @param {boolean=} noEcho - If <code>true</code> server will not echo message back to originating\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to the request.\n   */\n  publish(data, noEcho) {\n    return this.publishMessage(this.createMessage(data, noEcho));\n  }\n\n  /**\n   * Publish message created by {@link Tinode.Topic#createMessage}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Object} pub - {data} object to publish. Must be created by {@link Tinode.Topic#createMessage}\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to the request.\n   */\n  publishMessage(pub) {\n    if (!this._attached) {\n      return Promise.reject(new Error(\"Cannot publish on inactive topic\"));\n    }\n    if (this._sending) {\n      return Promise.reject(new Error(\"The message is already being sent\"));\n    }\n\n    // Send data.\n    pub._sending = true;\n    pub._failed = false;\n\n    // Extract refereces to attachments and out of band image records.\n    let attachments = null;\n    if (Drafty.hasEntities(pub.content)) {\n      attachments = [];\n      Drafty.entities(pub.content, data => {\n        if (data) {\n          if (data.ref) {\n            attachments.push(data.ref);\n          }\n          if (data.preref) {\n            attachments.push(data.preref);\n          }\n        }\n      });\n      if (attachments.length == 0) {\n        attachments = null;\n      }\n    }\n\n    return this._tinode.publishMessage(pub, attachments).then(ctrl => {\n      pub._sending = false;\n      pub.ts = ctrl.ts;\n      this.swapMessageId(pub, ctrl.params.seq);\n      this._maybeUpdateMessageVersionsCache(pub);\n      this._routeData(pub);\n      return ctrl;\n    }).catch(err => {\n      this._tinode.logger(\"WARNING: Message rejected by the server\", err);\n      pub._sending = false;\n      pub._failed = true;\n      if (this.onData) {\n        this.onData();\n      }\n    });\n  }\n\n  /**\n   * Add message to local message cache, send to the server when the promise is resolved.\n   * If promise is null or undefined, the message will be sent immediately.\n   * The message is sent when the\n   * The message should be created by {@link Tinode.Topic#createMessage}.\n   * This is probably not the final API.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Object} pub - Message to use as a draft.\n   * @param {Promise} prom - Message will be sent when this promise is resolved, discarded if rejected.\n   *\n   * @returns {Promise} derived promise.\n   */\n  publishDraft(pub, prom) {\n    const seq = pub.seq || this._getQueuedSeqId();\n    if (!pub._noForwarding) {\n      // The 'seq', 'ts', and 'from' are added to mimic {data}. They are removed later\n      // before the message is sent.\n      pub._noForwarding = true;\n      pub.seq = seq;\n      pub.ts = new Date();\n      pub.from = this._tinode.getCurrentUserID();\n\n      // Don't need an echo message because the message is added to local cache right away.\n      pub.noecho = true;\n      // Add to cache.\n      this._messages.put(pub);\n      this._tinode._db.addMessage(pub);\n\n      if (this.onData) {\n        this.onData(pub);\n      }\n    }\n    // If promise is provided, send the queued message when it's resolved.\n    // If no promise is provided, create a resolved one and send immediately.\n    return (prom || Promise.resolve())\n      .then(_ => {\n        if (pub._cancelled) {\n          return {\n            code: 300,\n            text: \"cancelled\"\n          };\n        }\n        return this.publishMessage(pub);\n      }).catch(err => {\n        this._tinode.logger(\"WARNING: Message draft rejected\", err);\n        pub._sending = false;\n        pub._failed = true;\n        pub._fatal = err instanceof CommError ? (err.code >= 400 && err.code < 500) : false;\n        if (this.onData) {\n          this.onData();\n        }\n        // Rethrow to let caller know that the operation failed.\n        throw err;\n      });\n  }\n\n  /**\n   * Leave the topic, optionally unsibscribe. Leaving the topic means the topic will stop\n   * receiving updates from the server. Unsubscribing will terminate user's relationship with the topic.\n   * Wrapper for {@link Tinode#leave}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {boolean=} unsub - If true, unsubscribe, otherwise just leave.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to the request.\n   */\n  leave(unsub) {\n    // It's possible to unsubscribe (unsub==true) from inactive topic.\n    if (!this._attached && !unsub) {\n      return Promise.reject(new Error(\"Cannot leave inactive topic\"));\n    }\n\n    // Send a 'leave' message, handle async response\n    return this._tinode.leave(this.name, unsub).then(ctrl => {\n      this._resetSub();\n      if (unsub) {\n        this._gone();\n      }\n      return ctrl;\n    });\n  }\n\n  /**\n   * Leave the topic, optionally unsibscribe after a delay. Leaving the topic means the topic will stop\n   * receiving updates from the server. Unsubscribing will terminate user's relationship with the topic.\n   * Wrapper for {@link Tinode#leave}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {boolean} unsub - If true, unsubscribe, otherwise just leave.\n   * @param {number} delay - time in milliseconds to delay leave request.\n   */\n  leaveDelayed(unsub, delay) {\n    clearTimeout(this._delayedLeaveTimer);\n    this._delayedLeaveTimer = setTimeout(_ => {\n      this._delayedLeaveTimer = null;\n      this.leave(unsub)\n    }, delay);\n  }\n\n  /**\n   * Request topic metadata from the server.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Tinode.GetQuery} request parameters\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  getMeta(params) {\n    // Send {get} message, return promise.\n    return this._tinode.getMeta(this.name, params);\n  }\n\n  /**\n   * Request more messages from the server\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} limit number of messages to get.\n   * @param {boolean} forward if true, request newer messages.\n   */\n  getMessagesPage(limit, forward) {\n    let query = forward ?\n      this.startMetaQuery().withLaterData(limit) :\n      this.startMetaQuery().withEarlierData(limit);\n\n    // First try fetching from DB, then from the server.\n    return this._loadMessages(this._tinode._db, query.extract('data'))\n      .then((count) => {\n        if (count == limit) {\n          // Got enough messages from local cache.\n          return Promise.resolve({\n            topic: this.name,\n            code: 200,\n            params: {\n              count: count\n            }\n          });\n        }\n\n        // Reduce the count of requested messages.\n        limit -= count;\n        // Update query with new values loaded from DB.\n        query = forward ? this.startMetaQuery().withLaterData(limit) :\n          this.startMetaQuery().withEarlierData(limit);\n        let promise = this.getMeta(query.build());\n        if (!forward) {\n          promise = promise.then(ctrl => {\n            if (ctrl && ctrl.params && !ctrl.params.count) {\n              this._noEarlierMsgs = true;\n            }\n          });\n        }\n        return promise;\n      });\n  }\n  /**\n   * Update topic metadata.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Tinode.SetParams} params parameters to update.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  setMeta(params) {\n    if (params.tags) {\n      params.tags = normalizeArray(params.tags);\n    }\n    // Send Set message, handle async response.\n    return this._tinode.setMeta(this.name, params)\n      .then(ctrl => {\n        if (ctrl && ctrl.code >= 300) {\n          // Not modified\n          return ctrl;\n        }\n\n        if (params.sub) {\n          params.sub.topic = this.name;\n          if (ctrl.params && ctrl.params.acs) {\n            params.sub.acs = ctrl.params.acs;\n            params.sub.updated = ctrl.ts;\n          }\n          if (!params.sub.user) {\n            // This is a subscription update of the current user.\n            // Assign user ID otherwise the update will be ignored by _processMetaSub.\n            params.sub.user = this._tinode.getCurrentUserID();\n            if (!params.desc) {\n              // Force update to topic's asc.\n              params.desc = {};\n            }\n          }\n          params.sub._noForwarding = true;\n          this._processMetaSub([params.sub]);\n        }\n\n        if (params.desc) {\n          if (ctrl.params && ctrl.params.acs) {\n            params.desc.acs = ctrl.params.acs;\n            params.desc.updated = ctrl.ts;\n          }\n          this._processMetaDesc(params.desc);\n        }\n\n        if (params.tags) {\n          this._processMetaTags(params.tags);\n        }\n        if (params.cred) {\n          this._processMetaCreds([params.cred], true);\n        }\n\n        return ctrl;\n      });\n  }\n  /**\n   * Update access mode of the current user or of another topic subsriber.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} uid - UID of the user to update or null to update current user.\n   * @param {string} update - the update value, full or delta.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  updateMode(uid, update) {\n    const user = uid ? this.subscriber(uid) : null;\n    const am = user ?\n      user.acs.updateGiven(update).getGiven() :\n      this.getAccessMode().updateWant(update).getWant();\n\n    return this.setMeta({\n      sub: {\n        user: uid,\n        mode: am\n      }\n    });\n  }\n  /**\n   * Create new topic subscription. Wrapper for {@link Tinode#setMeta}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} uid - ID of the user to invite\n   * @param {string=} mode - Access mode. <code>null</code> means to use default.\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  invite(uid, mode) {\n    return this.setMeta({\n      sub: {\n        user: uid,\n        mode: mode\n      }\n    });\n  }\n  /**\n   * Archive or un-archive the topic. Wrapper for {@link Tinode#setMeta}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {boolean} arch - true to archive the topic, false otherwise.\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  archive(arch) {\n    if (this.private && (!this.private.arch == !arch)) {\n      return Promise.resolve(arch);\n    }\n    return this.setMeta({\n      desc: {\n        private: {\n          arch: arch ? true : Const.DEL_CHAR\n        }\n      }\n    });\n  }\n  /**\n   * Delete messages. Hard-deleting messages requires Owner permission.\n   * Wrapper for {@link Tinode#delMessages}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Tinode.DelRange[]} ranges - Ranges of message IDs to delete.\n   * @param {boolean=} hard - Hard or soft delete\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  delMessages(ranges, hard) {\n    if (!this._attached) {\n      return Promise.reject(new Error(\"Cannot delete messages in inactive topic\"));\n    }\n\n    // Sort ranges in accending order by low, the descending by hi.\n    ranges.sort((r1, r2) => {\n      if (r1.low < r2.low) {\n        return true;\n      }\n      if (r1.low == r2.low) {\n        return !r2.hi || (r1.hi >= r2.hi);\n      }\n      return false;\n    });\n\n    // Remove pending messages from ranges possibly clipping some ranges.\n    let tosend = ranges.reduce((out, r) => {\n      if (r.low < Const.LOCAL_SEQID) {\n        if (!r.hi || r.hi < Const.LOCAL_SEQID) {\n          out.push(r);\n        } else {\n          // Clip hi to max allowed value.\n          out.push({\n            low: r.low,\n            hi: this._maxSeq + 1\n          });\n        }\n      }\n      return out;\n    }, []);\n\n    // Send {del} message, return promise\n    let result;\n    if (tosend.length > 0) {\n      result = this._tinode.delMessages(this.name, tosend, hard);\n    } else {\n      result = Promise.resolve({\n        params: {\n          del: 0\n        }\n      });\n    }\n    // Update local cache.\n    return result.then(ctrl => {\n      if (ctrl.params.del > this._maxDel) {\n        this._maxDel = ctrl.params.del;\n      }\n\n      ranges.forEach((r) => {\n        if (r.hi) {\n          this.flushMessageRange(r.low, r.hi);\n        } else {\n          this.flushMessage(r.low);\n        }\n      });\n\n      if (this.onData) {\n        // Calling with no parameters to indicate the messages were deleted.\n        this.onData();\n      }\n      return ctrl;\n    });\n  }\n  /**\n   * Delete all messages. Hard-deleting messages requires Deleter permission.\n   * @memberof Tinode.Topic#\n   *\n   * @param {boolean} hardDel - true if messages should be hard-deleted.\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  delMessagesAll(hardDel) {\n    if (!this._maxSeq || this._maxSeq <= 0) {\n      // There are no messages to delete.\n      return Promise.resolve();\n    }\n    return this.delMessages([{\n      low: 1,\n      hi: this._maxSeq + 1,\n      _all: true\n    }], hardDel);\n  }\n\n  /**\n   * Delete multiple messages defined by their IDs. Hard-deleting messages requires Deleter permission.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Array.<number>} list - list of seq IDs to delete.\n   * @param {boolean=} hardDel - true if messages should be hard-deleted.\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  delMessagesList(list, hardDel) {\n    // Sort the list in ascending order\n    list.sort((a, b) => a - b);\n    // Convert the array of IDs to ranges.\n    let ranges = list.reduce((out, id) => {\n      if (out.length == 0) {\n        // First element.\n        out.push({\n          low: id\n        });\n      } else {\n        let prev = out[out.length - 1];\n        if ((!prev.hi && (id != prev.low + 1)) || (id > prev.hi)) {\n          // New range.\n          out.push({\n            low: id\n          });\n        } else {\n          // Expand existing range.\n          prev.hi = prev.hi ? Math.max(prev.hi, id + 1) : id + 1;\n        }\n      }\n      return out;\n    }, []);\n    // Send {del} message, return promise\n    return this.delMessages(ranges, hardDel);\n  }\n\n  /**\n   * Delete original message and edited variants. Hard-deleting messages requires Deleter permission.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seq - original seq ID of the message to delete.\n   * @param {boolean=} hardDel - true if messages should be hard-deleted.\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to the request.\n   */\n  delMessagesEdits(seq, hardDel) {\n    const list = [seq];\n    this.messageVersions(seq, msg => list.push(msg.seq));\n    // Send {del} message, return promise\n    return this.delMessagesList(list, hardDel);\n  }\n\n  /**\n   * Delete topic. Requires Owner permission. Wrapper for {@link Tinode#delTopic}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {boolean} hard - had-delete topic.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to the request.\n   */\n  delTopic(hard) {\n    if (this._deleted) {\n      // The topic is already deleted at the server, just remove from DB.\n      this._gone();\n      return Promise.resolve(null);\n    }\n\n    return this._tinode.delTopic(this.name, hard).then(ctrl => {\n      this._deleted = true;\n      this._resetSub();\n      this._gone();\n      return ctrl;\n    });\n  }\n  /**\n   * Delete subscription. Requires Share permission. Wrapper for {@link Tinode#delSubscription}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} user - ID of the user to remove subscription for.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  delSubscription(user) {\n    if (!this._attached) {\n      return Promise.reject(new Error(\"Cannot delete subscription in inactive topic\"));\n    }\n    // Send {del} message, return promise\n    return this._tinode.delSubscription(this.name, user).then(ctrl => {\n      // Remove the object from the subscription cache;\n      delete this._users[user];\n      // Notify listeners\n      if (this.onSubsUpdated) {\n        this.onSubsUpdated(Object.keys(this._users));\n      }\n      return ctrl;\n    });\n  }\n  /**\n   * Send a read/recv notification.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} what - what notification to send: <code>recv</code>, <code>read</code>.\n   * @param {number} seq - ID or the message read or received.\n   */\n  note(what, seq) {\n    if (!this._attached) {\n      // Cannot sending {note} on an inactive topic\".\n      return;\n    }\n\n    // Update local cache with the new count.\n    const user = this._users[this._tinode.getCurrentUserID()];\n    let update = false;\n    if (user) {\n      // Self-subscription is found.\n      if (!user[what] || user[what] < seq) {\n        user[what] = seq;\n        update = true;\n      }\n    } else {\n      // Self-subscription is not found.\n      update = (this[what] | 0) < seq;\n    }\n\n    if (update) {\n      // Send notification to the server.\n      this._tinode.note(this.name, what, seq);\n      // Update locally cached contact with the new count.\n      this._updateReadRecv(what, seq);\n\n      if (this.acs != null && !this.acs.isMuted()) {\n        const me = this._tinode.getMeTopic();\n        // Sent a notification to 'me' listeners.\n        me._refreshContact(what, this);\n      }\n    }\n  }\n\n  /**\n   * Send a 'recv' receipt. Wrapper for {@link Tinode#noteRecv}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seq - ID of the message to aknowledge.\n   */\n  noteRecv(seq) {\n    this.note('recv', seq);\n  }\n  /**\n   * Send a 'read' receipt. Wrapper for {@link Tinode#noteRead}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seq - ID of the message to aknowledge or 0/undefined to acknowledge the latest messages.\n   */\n  noteRead(seq) {\n    seq = seq || this._maxSeq;\n    if (seq > 0) {\n      this.note('read', seq);\n    }\n  }\n  /**\n   * Send a key-press notification. Wrapper for {@link Tinode#noteKeyPress}.\n   * @memberof Tinode.Topic#\n   */\n  noteKeyPress() {\n    if (this._attached) {\n      this._tinode.noteKeyPress(this.name);\n    } else {\n      this._tinode.logger(\"INFO: Cannot send notification in inactive topic\");\n    }\n  }\n  /**\n   * Send a notification than a video or audio message is . Wrapper for {@link Tinode#noteKeyPress}.\n   * @memberof Tinode.Topic#\n   * @param audioOnly - true if the recording is audio-only, false if it's a video recording.\n   */\n  noteRecording(audioOnly) {\n    if (this._attached) {\n      this._tinode.noteKeyPress(this.name, audioOnly ? 'kpa' : 'kpv');\n    } else {\n      this._tinode.logger(\"INFO: Cannot send notification in inactive topic\");\n    }\n  }\n\n  /**\n   * Send a {note what='call'}. Wrapper for {@link Tinode#videoCall}.\n   * @memberof Tinode#\n   *\n   * @param {string} evt - Call event.\n   * @param {int} seq - ID of the call message the event pertains to.\n   * @param {string} payload - Payload associated with this event (e.g. SDP string).\n   *\n   * @returns {Promise} Promise (for some call events) which will\n   *                    be resolved/rejected on receiving server reply\n   */\n  videoCall(evt, seq, payload) {\n    if (!this._attached && !['ringing', 'hang-up'].includes(evt)) {\n      // Cannot {call} on an inactive topic\".\n      return;\n    }\n    return this._tinode.videoCall(this.name, seq, evt, payload);\n  }\n\n  // Update cached read/recv/unread counts.\n  _updateReadRecv(what, seq, ts) {\n    let oldVal, doUpdate = false;\n\n    seq = seq | 0;\n    this.seq = this.seq | 0;\n    this.read = this.read | 0;\n    this.recv = this.recv | 0;\n    switch (what) {\n      case 'recv':\n        oldVal = this.recv;\n        this.recv = Math.max(this.recv, seq);\n        doUpdate = (oldVal != this.recv);\n        break;\n      case 'read':\n        oldVal = this.read;\n        this.read = Math.max(this.read, seq);\n        doUpdate = (oldVal != this.read);\n        break;\n      case 'msg':\n        oldVal = this.seq;\n        this.seq = Math.max(this.seq, seq);\n        if (!this.touched || this.touched < ts) {\n          this.touched = ts;\n        }\n        doUpdate = (oldVal != this.seq);\n        break;\n    }\n\n    // Sanity checks.\n    if (this.recv < this.read) {\n      this.recv = this.read;\n      doUpdate = true;\n    }\n    if (this.seq < this.recv) {\n      this.seq = this.recv;\n      if (!this.touched || this.touched < ts) {\n        this.touched = ts;\n      }\n      doUpdate = true;\n    }\n    this.unread = this.seq - this.read;\n    return doUpdate;\n  }\n  /**\n   * Get user description from global cache. The user does not need to be a\n   * subscriber of this topic.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} uid - ID of the user to fetch.\n   * @return {Object} user description or undefined.\n   */\n  userDesc(uid) {\n    // TODO: handle asynchronous requests\n    const user = this._cacheGetUser(uid);\n    if (user) {\n      return user; // Promise.resolve(user)\n    }\n  }\n  /**\n   * Get description of the p2p peer from subscription cache.\n   * @memberof Tinode.Topic#\n   *\n   * @return {Object} peer's description or undefined.\n   */\n  p2pPeerDesc() {\n    if (!this.isP2PType()) {\n      return undefined;\n    }\n    return this._users[this.name];\n  }\n  /**\n   * Iterate over cached subscribers. If callback is undefined, use this.onMetaSub.\n   * @memberof Tinode.Topic#\n   *\n   * @param {function} callback - Callback which will receive subscribers one by one.\n   * @param {Object=} context - Value of `this` inside the `callback`.\n   */\n  subscribers(callback, context) {\n    const cb = (callback || this.onMetaSub);\n    if (cb) {\n      for (let idx in this._users) {\n        cb.call(context, this._users[idx], idx, this._users);\n      }\n    }\n  }\n  /**\n   * Get a copy of cached tags.\n   * @memberof Tinode.Topic#\n   *\n   * @return {Array.<string>} a copy of tags\n   */\n  tags() {\n    // Return a copy.\n    return this._tags.slice(0);\n  }\n  /**\n   * Get cached subscription for the given user ID.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} uid - id of the user to query for\n   * @return user description or undefined.\n   */\n  subscriber(uid) {\n    return this._users[uid];\n  }\n  /**\n   * Iterate over versions of a message: call <code>callback</code> for each version (excluding original).\n   * If <code>callback</code> is undefined, does nothing.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} origSeq - seq ID of the original message.\n   * @param {Tinode.ForEachCallbackType} callback - Callback which will receive messages one by one. See {@link Tinode.CBuffer#forEach}\n   * @param {Object} context - Value of `this` inside the `callback`.\n   */\n  messageVersions(origSeq, callback, context) {\n    if (!callback) {\n      // No callback? We are done then.\n      return;\n    }\n    const versions = this._messageVersions[origSeq];\n    if (!versions) {\n      return;\n    }\n    versions.forEach(callback, undefined, undefined, context);\n  }\n  /**\n   * Iterate over cached messages: call <code>callback</code> for each message in the range [sinceIdx, beforeIdx).\n   * If <code>callback</code> is undefined, use <code>this.onData</code>.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Tinode.ForEachCallbackType} callback - Callback which will receive messages one by one. See {@link Tinode.CBuffer#forEach}\n   * @param {number} sinceId - Optional seqId to start iterating from (inclusive).\n   * @param {number} beforeId - Optional seqId to stop iterating before it is reached (exclusive).\n   * @param {Object} context - Value of `this` inside the `callback`.\n   */\n  messages(callback, sinceId, beforeId, context) {\n    const cb = (callback || this.onData);\n    if (cb) {\n      const startIdx = typeof sinceId == 'number' ? this._messages.find({\n        seq: sinceId\n      }, true) : undefined;\n      const beforeIdx = typeof beforeId == 'number' ? this._messages.find({\n        seq: beforeId\n      }, true) : undefined;\n      if (startIdx != -1 && beforeIdx != -1) {\n        // Step 1. Filter out all replacement messages and\n        // save displayable messages in a temporary buffer.\n        let msgs = [];\n        this._messages.forEach((msg, unused1, unused2, i) => {\n          if (this._isReplacementMsg(msg)) {\n            // Skip replacements.\n            return;\n          }\n          // In case the massage was edited, replace timestamp of the version with the original's timestamp.\n          const latest = this.latestMsgVersion(msg.seq) || msg;\n          if (!latest._origTs) {\n            latest._origTs = latest.ts;\n            latest._origSeq = latest.seq;\n            latest.ts = msg.ts;\n            latest.seq = msg.seq;\n          }\n          msgs.push({\n            data: latest,\n            idx: i\n          });\n        }, startIdx, beforeIdx, {});\n        // Step 2. Loop over displayble messages invoking cb on each of them.\n        msgs.forEach((val, i) => {\n          cb.call(context, val.data,\n            (i > 0 ? msgs[i - 1].data : undefined),\n            (i < msgs.length - 1 ? msgs[i + 1].data : undefined), val.idx);\n        });\n      }\n    }\n  }\n  /**\n   * Get the message from cache by <code>seq</code>.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seq - message seqId to search for.\n   * @returns {Object} the message with the given <code>seq</code> or <code>undefined</code>, if no such message is found.\n   */\n  findMessage(seq) {\n    const idx = this._messages.find({\n      seq: seq\n    });\n    if (idx >= 0) {\n      return this._messages.getAt(idx);\n    }\n    return undefined;\n  }\n  /**\n   * Get the most recent message from cache. This method counts all messages, including deleted ranges.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {Object} the most recent cached message or <code>undefined</code>, if no messages are cached.\n   */\n  latestMessage() {\n    return this._messages.getLast();\n  }\n  /**\n   * Get the latest version for message.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seq - original seq ID of the message.\n   * @returns {Object} the latest version of the message or null if message not found.\n   */\n  latestMsgVersion(seq) {\n    const versions = this._messageVersions[seq];\n    return versions ? versions.getLast() : null;\n  }\n  /**\n   * Get the maximum cached seq ID.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {number} the greatest seq ID in cache.\n   */\n  maxMsgSeq() {\n    return this._maxSeq;\n  }\n  /**\n   * Get the minimum cached seq ID.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {number} the smallest seq ID in cache or 0.\n   */\n  minMsgSeq() {\n    return this._minSeq;\n  }\n  /**\n   * Get the maximum deletion ID.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {number} the greatest deletion ID.\n   */\n  maxClearId() {\n    return this._maxDel;\n  }\n  /**\n   * Get the number of messages in the cache.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {number} count of cached messages.\n   */\n  messageCount() {\n    return this._messages.length();\n  }\n  /**\n   * Iterate over cached unsent messages. Wraps {@link Tinode.Topic#messages}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {function} callback - Callback which will receive messages one by one. See {@link Tinode.CBuffer#forEach}\n   * @param {Object} context - Value of <code>this</code> inside the <code>callback</code>.\n   */\n  queuedMessages(callback, context) {\n    if (!callback) {\n      throw new Error(\"Callback must be provided\");\n    }\n    this.messages(callback, Const.LOCAL_SEQID, undefined, context);\n  }\n  /**\n   * Get the number of topic subscribers who marked this message as either recv or read\n   * Current user is excluded from the count.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} what - what action to consider: received <code>\"recv\"</code> or read <code>\"read\"</code>.\n   * @param {number} seq - ID or the message read or received.\n   *\n   * @returns {number} the number of subscribers who marked the message with the given ID as read or received.\n   */\n  msgReceiptCount(what, seq) {\n    let count = 0;\n    if (seq > 0) {\n      const me = this._tinode.getCurrentUserID();\n      for (let idx in this._users) {\n        const user = this._users[idx];\n        if (user.user !== me && user[what] >= seq) {\n          count++;\n        }\n      }\n    }\n    return count;\n  }\n  /**\n   * Get the number of topic subscribers who marked this message (and all older messages) as read.\n   * The current user is excluded from the count.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seq - message id to check.\n   * @returns {number} number of subscribers who claim to have received the message.\n   */\n  msgReadCount(seq) {\n    return this.msgReceiptCount('read', seq);\n  }\n  /**\n   * Get the number of topic subscribers who marked this message (and all older messages) as received.\n   * The current user is excluded from the count.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seq - Message id to check.\n   * @returns {number} Number of subscribers who claim to have received the message.\n   */\n  msgRecvCount(seq) {\n    return this.msgReceiptCount('recv', seq);\n  }\n  /**\n   * Check if cached message IDs indicate that the server may have more messages.\n   * @memberof Tinode.Topic#\n   *\n   * @param {boolean} newer - if <code>true</code>, check for newer messages only.\n   */\n  msgHasMoreMessages(newer) {\n    return newer ? this.seq > this._maxSeq :\n      // _minSeq could be more than 1, but earlier messages could have been deleted.\n      (this._minSeq > 1 && !this._noEarlierMsgs);\n  }\n  /**\n   * Check if the given seq Id is id of the most recent message.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seqId id of the message to check\n   */\n  isNewMessage(seqId) {\n    return this._maxSeq <= seqId;\n  }\n  /**\n   * Remove one message from local cache.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seqId id of the message to remove from cache.\n   * @returns {Message} removed message or undefined if such message was not found.\n   */\n  flushMessage(seqId) {\n    const idx = this._messages.find({\n      seq: seqId\n    });\n    delete this._messageVersions[seqId];\n    if (idx >= 0) {\n      this._tinode._db.remMessages(this.name, seqId);\n      return this._messages.delAt(idx);\n    }\n    return undefined;\n  }\n  /**\n   * Remove a range of messages from the local cache.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} fromId seq ID of the first message to remove (inclusive).\n   * @param {number} untilId seqID of the last message to remove (exclusive).\n   *\n   * @returns {Message[]} array of removed messages (could be empty).\n   */\n  flushMessageRange(fromId, untilId) {\n    // Remove range from persistent cache.\n    this._tinode._db.remMessages(this.name, fromId, untilId);\n\n    // Remove all versions keyed by IDs in the range.\n    for (let i = fromId; i < untilId; i++) {\n      delete this._messageVersions[i];\n    }\n\n    // start, end: find insertion points (nearest == true).\n    const since = this._messages.find({\n      seq: fromId\n    }, true);\n    return since >= 0 ? this._messages.delRange(since, this._messages.find({\n      seq: untilId\n    }, true)) : [];\n  }\n  /**\n   * Update message's seqId.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Object} pub message object.\n   * @param {number} newSeqId new seq id for pub.\n   */\n  swapMessageId(pub, newSeqId) {\n    const idx = this._messages.find(pub);\n    const numMessages = this._messages.length();\n    if (0 <= idx && idx < numMessages) {\n      // Remove message with the old seq ID.\n      this._messages.delAt(idx);\n      this._tinode._db.remMessages(this.name, pub.seq);\n      // Add message with the new seq ID.\n      pub.seq = newSeqId;\n      this._messages.put(pub);\n      this._tinode._db.addMessage(pub);\n    }\n  }\n  /**\n   * Attempt to stop message from being sent.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seqId id of the message to stop sending and remove from cache.\n   *\n   * @returns {boolean} <code>true</code> if message was cancelled, <code>false</code> otherwise.\n   */\n  cancelSend(seqId) {\n    const idx = this._messages.find({\n      seq: seqId\n    });\n    if (idx >= 0) {\n      const msg = this._messages.getAt(idx);\n      const status = this.msgStatus(msg);\n      if (status == Const.MESSAGE_STATUS_QUEUED ||\n        status == Const.MESSAGE_STATUS_FAILED ||\n        status == Const.MESSAGE_STATUS_FATAL) {\n        this._tinode._db.remMessages(this.name, seqId);\n        msg._cancelled = true;\n        this._messages.delAt(idx);\n        if (this.onData) {\n          // Calling with no parameters to indicate the message was deleted.\n          this.onData();\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * Get type of the topic: me, p2p, grp, fnd...\n   * @memberof Tinode.Topic#\n   *\n   * @returns {string} One of 'me', 'p2p', 'grp', 'fnd', 'sys' or <code>undefined</code>.\n   */\n  getType() {\n    return Topic.topicType(this.name);\n  }\n  /**\n   * Get current user's access mode of the topic.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {Tinode.AccessMode} - user's access mode\n   */\n  getAccessMode() {\n    return this.acs;\n  }\n  /**\n   * Set current user's access mode of the topic.\n   * @memberof Tinode.Topic#\n   *\n   * @param {AccessMode | Object} acs - access mode to set.\n   */\n  setAccessMode(acs) {\n    return this.acs = new AccessMode(acs);\n  }\n  /**\n   * Get topic's default access mode.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {Tinode.DefAcs} - access mode, such as {auth: `RWP`, anon: `N`}.\n   */\n  getDefaultAccess() {\n    return this.defacs;\n  }\n  /**\n   * Initialize new meta {@link Tinode.GetQuery} builder. The query is attched to the current topic.\n   * It will not work correctly if used with a different topic.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {Tinode.MetaGetBuilder} query attached to the current topic.\n   */\n  startMetaQuery() {\n    return new MetaGetBuilder(this);\n  }\n  /**\n   * Check if topic is archived, i.e. private.arch == true.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {boolean} - <code>true</code> if topic is archived, <code>false</code> otherwise.\n   */\n  isArchived() {\n    return this.private && !!this.private.arch;\n  }\n  /**\n   * Check if topic is a 'me' topic.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {boolean} - <code>true</code> if topic is a 'me' topic, <code>false</code> otherwise.\n   */\n  isMeType() {\n    return Topic.isMeTopicName(this.name);\n  }\n  /**\n   * Check if topic is a channel.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {boolean} - <code>true</code> if topic is a channel, <code>false</code> otherwise.\n   */\n  isChannelType() {\n    return Topic.isChannelTopicName(this.name);\n  }\n  /**\n   * Check if topic is a group topic.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {boolean} - <code>true</code> if topic is a group, <code>false</code> otherwise.\n   */\n  isGroupType() {\n    return Topic.isGroupTopicName(this.name);\n  }\n  /**\n   * Check if topic is a p2p topic.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {boolean} - <code>true</code> if topic is a p2p topic, <code>false</code> otherwise.\n   */\n  isP2PType() {\n    return Topic.isP2PTopicName(this.name);\n  }\n  /**\n   * Check if topic is a communication topic, i.e. a group or p2p topic.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {boolean} - <code>true</code> if topic is a p2p or group topic, <code>false</code> otherwise.\n   */\n  isCommType() {\n    return Topic.isCommTopicName(this.name);\n  }\n  /**\n   * Get status (queued, sent, received etc) of a given message in the context\n   * of this topic.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Message} msg - message to check for status.\n   * @param {boolean} upd - update chached message status.\n   *\n   * @returns message status constant.\n   */\n  msgStatus(msg, upd) {\n    let status = Const.MESSAGE_STATUS_NONE;\n    if (this._tinode.isMe(msg.from)) {\n      if (msg._sending) {\n        status = Const.MESSAGE_STATUS_SENDING;\n      } else if (msg._fatal || msg._cancelled) {\n        status = Const.MESSAGE_STATUS_FATAL;\n      } else if (msg._failed) {\n        status = Const.MESSAGE_STATUS_FAILED;\n      } else if (msg.seq >= Const.LOCAL_SEQID) {\n        status = Const.MESSAGE_STATUS_QUEUED;\n      } else if (this.msgReadCount(msg.seq) > 0) {\n        status = Const.MESSAGE_STATUS_READ;\n      } else if (this.msgRecvCount(msg.seq) > 0) {\n        status = Const.MESSAGE_STATUS_RECEIVED;\n      } else if (msg.seq > 0) {\n        status = Const.MESSAGE_STATUS_SENT;\n      }\n    } else {\n      status = Const.MESSAGE_STATUS_TO_ME;\n    }\n\n    if (upd && msg._status != status) {\n      msg._status = status;\n      this._tinode._db.updMessageStatus(this.name, msg.seq, status);\n    }\n\n    return status;\n  }\n\n  // Returns true if pub is meant to replace another message (e.g. original message was edited).\n  _isReplacementMsg(pub) {\n    return pub.head && pub.head.replace;\n  }\n\n  // If msg is a replacement for another message, save the msg in the message versions cache\n  // as a newer version for the message it's supposed to replace.\n  _maybeUpdateMessageVersionsCache(msg) {\n    if (!this._isReplacementMsg(msg)) {\n      // Check if this message is the original in the chain of edits and if so\n      // ensure all version have the same sender.\n      if (this._messageVersions[msg.seq]) {\n        // Remove versions with different 'from'.\n        this._messageVersions[msg.seq].filter(version => version.from == msg.from);\n        if (this._messageVersions[msg.seq].isEmpty()) {\n          delete this._messageVersions[msg.seq];\n        }\n      }\n      return;\n    }\n\n    const targetSeq = parseInt(msg.head.replace.split(':')[1]);\n    if (targetSeq > msg.seq) {\n      // Substitutes are supposed to have higher seq ids.\n      return;\n    }\n    const targetMsg = this.findMessage(targetSeq);\n    if (targetMsg && targetMsg.from != msg.from) {\n      // Substitute cannot change the sender.\n      return;\n    }\n    const versions = this._messageVersions[targetSeq] || new CBuffer((a, b) => {\n      return a.seq - b.seq;\n    }, true);\n    versions.put(msg);\n    this._messageVersions[targetSeq] = versions;\n  }\n\n  // Process data message\n  _routeData(data) {\n    if (data.content) {\n      if (!this.touched || this.touched < data.ts) {\n        this.touched = data.ts;\n        this._tinode._db.updTopic(this);\n      }\n    }\n\n    if (data.seq > this._maxSeq) {\n      this._maxSeq = data.seq;\n      this.msgStatus(data, true);\n      // Ackn receiving the message.\n      clearTimeout(this._recvNotificationTimer);\n      this._recvNotificationTimer = setTimeout(_ => {\n        this._recvNotificationTimer = null;\n        this.noteRecv(this._maxSeq);\n      }, Const.RECV_TIMEOUT);\n    }\n\n    if (data.seq < this._minSeq || this._minSeq == 0) {\n      this._minSeq = data.seq;\n    }\n\n    const outgoing = ((!this.isChannelType() && !data.from) || this._tinode.isMe(data.from));\n\n    if (data.head && data.head.webrtc && data.head.mime == Drafty.getContentType() && data.content) {\n      // Rewrite VC body with info from the headers.\n      data.content = Drafty.updateVideoCall(data.content, {\n        state: data.head.webrtc,\n        duration: data.head['webrtc-duration'],\n        incoming: !outgoing,\n      });\n    }\n\n    if (!data._noForwarding) {\n      this._messages.put(data);\n      this._tinode._db.addMessage(data);\n      this._maybeUpdateMessageVersionsCache(data);\n    }\n\n    if (this.onData) {\n      this.onData(data);\n    }\n\n    // Update locally cached contact with the new message count.\n    const what = outgoing ? 'read' : 'msg';\n    this._updateReadRecv(what, data.seq, data.ts);\n    // Notify 'me' listeners of the change.\n    this._tinode.getMeTopic()._refreshContact(what, this);\n  }\n\n  // Process metadata message\n  _routeMeta(meta) {\n    if (meta.desc) {\n      this._processMetaDesc(meta.desc);\n    }\n    if (meta.sub && meta.sub.length > 0) {\n      this._processMetaSub(meta.sub);\n    }\n    if (meta.del) {\n      this._processDelMessages(meta.del.clear, meta.del.delseq);\n    }\n    if (meta.tags) {\n      this._processMetaTags(meta.tags);\n    }\n    if (meta.cred) {\n      this._processMetaCreds(meta.cred);\n    }\n    if (this.onMeta) {\n      this.onMeta(meta);\n    }\n  }\n  // Process presence change message\n  _routePres(pres) {\n    let user, uid;\n    switch (pres.what) {\n      case 'del':\n        // Delete cached messages.\n        this._processDelMessages(pres.clear, pres.delseq);\n        break;\n      case 'on':\n      case 'off':\n        // Update online status of a subscription.\n        user = this._users[pres.src];\n        if (user) {\n          user.online = pres.what == 'on';\n        } else {\n          this._tinode.logger(\"WARNING: Presence update for an unknown user\", this.name, pres.src);\n        }\n        break;\n      case 'term':\n        // Attachment to topic is terminated probably due to cluster rehashing.\n        this._resetSub();\n        break;\n      case 'upd':\n        // A topic subscriber has updated his description.\n        // Issue {get sub} only if the current user has no p2p topics with the updated user (p2p name is not in cache).\n        // Otherwise 'me' will issue a {get desc} request.\n        if (pres.src && !this._tinode.isTopicCached(pres.src)) {\n          this.getMeta(this.startMetaQuery().withLaterOneSub(pres.src).build());\n        }\n        break;\n      case 'acs':\n        uid = pres.src || this._tinode.getCurrentUserID();\n        user = this._users[uid];\n        if (!user) {\n          // Update for an unknown user: notification of a new subscription.\n          const acs = new AccessMode().updateAll(pres.dacs);\n          if (acs && acs.mode != AccessMode._NONE) {\n            user = this._cacheGetUser(uid);\n            if (!user) {\n              user = {\n                user: uid,\n                acs: acs\n              };\n              this.getMeta(this.startMetaQuery().withOneSub(undefined, uid).build());\n            } else {\n              user.acs = acs;\n            }\n            user.updated = new Date();\n            this._processMetaSub([user]);\n          }\n        } else {\n          // Known user\n          user.acs.updateAll(pres.dacs);\n          // Update user's access mode.\n          this._processMetaSub([{\n            user: uid,\n            updated: new Date(),\n            acs: user.acs\n          }]);\n        }\n        break;\n      default:\n        this._tinode.logger(\"INFO: Ignored presence update\", pres.what);\n    }\n\n    if (this.onPres) {\n      this.onPres(pres);\n    }\n  }\n  // Process {info} message\n  _routeInfo(info) {\n    switch (info.what) {\n      case 'recv':\n      case 'read':\n        const user = this._users[info.from];\n        if (user) {\n          user[info.what] = info.seq;\n          if (user.recv < user.read) {\n            user.recv = user.read;\n          }\n        }\n        const msg = this.latestMessage();\n        if (msg) {\n          this.msgStatus(msg, true);\n        }\n\n        // If this is an update from the current user, update the cache with the new count.\n        if (this._tinode.isMe(info.from)) {\n          this._updateReadRecv(info.what, info.seq);\n        }\n\n        // Notify 'me' listener of the status change.\n        this._tinode.getMeTopic()._refreshContact(info.what, this);\n        break;\n      case 'kp':\n        // Do nothing.\n        break;\n      case 'call':\n        // Do nothing here.\n        break;\n      default:\n        this._tinode.logger(\"INFO: Ignored info update\", info.what);\n    }\n\n    if (this.onInfo) {\n      this.onInfo(info);\n    }\n  }\n  // Called by Tinode when meta.desc packet is received.\n  // Called by 'me' topic on contact update (desc._noForwarding is true).\n  _processMetaDesc(desc) {\n    if (this.isP2PType()) {\n      // Synthetic desc may include defacs for p2p topics which is useless.\n      // Remove it.\n      delete desc.defacs;\n\n      // Update to p2p desc is the same as user update. Update cached user.\n      this._tinode._db.updUser(this.name, desc.public);\n    }\n\n    // Copy parameters from desc object to this topic.\n    mergeObj(this, desc);\n    // Update persistent cache.\n    this._tinode._db.updTopic(this);\n\n    // Notify 'me' listener, if available:\n    if (this.name !== Const.TOPIC_ME && !desc._noForwarding) {\n      const me = this._tinode.getMeTopic();\n      if (me.onMetaSub) {\n        me.onMetaSub(this);\n      }\n      if (me.onSubsUpdated) {\n        me.onSubsUpdated([this.name], 1);\n      }\n    }\n\n    if (this.onMetaDesc) {\n      this.onMetaDesc(this);\n    }\n  }\n  // Called by Tinode when meta.sub is recived or in response to received\n  // {ctrl} after setMeta-sub.\n  _processMetaSub(subs) {\n    for (let idx in subs) {\n      const sub = subs[idx];\n\n      // Fill defaults.\n      sub.online = !!sub.online;\n      // Update timestamp of the most recent subscription update.\n      this._lastSubsUpdate = new Date(Math.max(this._lastSubsUpdate, sub.updated));\n\n      let user = null;\n      if (!sub.deleted) {\n        // If this is a change to user's own permissions, update them in topic too.\n        // Desc will update 'me' topic.\n        if (this._tinode.isMe(sub.user) && sub.acs) {\n          this._processMetaDesc({\n            updated: sub.updated,\n            touched: sub.touched,\n            acs: sub.acs\n          });\n        }\n        user = this._updateCachedUser(sub.user, sub);\n      } else {\n        // Subscription is deleted, remove it from topic (but leave in Users cache)\n        delete this._users[sub.user];\n        user = sub;\n      }\n\n      if (this.onMetaSub) {\n        this.onMetaSub(user);\n      }\n    }\n\n    if (this.onSubsUpdated) {\n      this.onSubsUpdated(Object.keys(this._users));\n    }\n  }\n  // Called by Tinode when meta.tags is recived.\n  _processMetaTags(tags) {\n    if (tags.length == 1 && tags[0] == Const.DEL_CHAR) {\n      tags = [];\n    }\n    this._tags = tags;\n    if (this.onTagsUpdated) {\n      this.onTagsUpdated(tags);\n    }\n  }\n  // Do nothing for topics other than 'me'\n  _processMetaCreds(creds) {}\n  // Delete cached messages and update cached transaction IDs\n  _processDelMessages(clear, delseq) {\n    this._maxDel = Math.max(clear, this._maxDel);\n    this.clear = Math.max(clear, this.clear);\n    const topic = this;\n    let count = 0;\n    if (Array.isArray(delseq)) {\n      delseq.forEach(function(range) {\n        if (!range.hi) {\n          count++;\n          topic.flushMessage(range.low);\n        } else {\n          for (let i = range.low; i < range.hi; i++) {\n            count++;\n            topic.flushMessage(i);\n          }\n        }\n      });\n    }\n\n    if (count > 0) {\n      // this._updateDeletedRanges();\n\n      if (this.onData) {\n        this.onData();\n      }\n    }\n  }\n  // Topic is informed that the entire response to {get what=data} has been received.\n  _allMessagesReceived(count) {\n\n    if (this.onAllMessagesReceived) {\n      this.onAllMessagesReceived(count);\n    }\n  }\n  // Reset subscribed state\n  _resetSub() {\n    this._attached = false;\n  }\n  // This topic is either deleted or unsubscribed from.\n  _gone() {\n    this._messages.reset();\n    this._tinode._db.remMessages(this.name);\n    this._users = {};\n    this.acs = new AccessMode(null);\n    this.private = null;\n    this.public = null;\n    this.trusted = null;\n    this._maxSeq = 0;\n    this._minSeq = 0;\n    this._attached = false;\n\n    const me = this._tinode.getMeTopic();\n    if (me) {\n      me._routePres({\n        _noForwarding: true,\n        what: 'gone',\n        topic: Const.TOPIC_ME,\n        src: this.name\n      });\n    }\n    if (this.onDeleteTopic) {\n      this.onDeleteTopic();\n    }\n  }\n  // Update global user cache and local subscribers cache.\n  // Don't call this method for non-subscribers.\n  _updateCachedUser(uid, obj) {\n    // Fetch user object from the global cache.\n    // This is a clone of the stored object\n    let cached = this._cacheGetUser(uid);\n    cached = mergeObj(cached || {}, obj);\n    // Save to global cache\n    this._cachePutUser(uid, cached);\n    // Save to the list of topic subsribers.\n    return mergeToCache(this._users, uid, cached);\n  }\n  // Get local seqId for a queued message.\n  _getQueuedSeqId() {\n    return this._queuedSeqId++;\n  }\n\n  // Load most recent messages from persistent cache.\n  _loadMessages(db, params) {\n    const {\n      since,\n      before,\n      limit\n    } = params || {};\n    return db.readMessages(this.name, {\n        since: since,\n        before: before,\n        limit: limit || Const.DEFAULT_MESSAGES_PAGE\n      })\n      .then(msgs => {\n        msgs.forEach((data) => {\n          if (data.seq > this._maxSeq) {\n            this._maxSeq = data.seq;\n          }\n          if (data.seq < this._minSeq || this._minSeq == 0) {\n            this._minSeq = data.seq;\n          }\n          this._messages.put(data);\n          this._maybeUpdateMessageVersionsCache(data);\n        });\n        return msgs.length;\n      });\n  }\n  // Push or {pres}: message received.\n  _updateReceived(seq, act) {\n    this.touched = new Date();\n    this.seq = seq | 0;\n    // Check if message is sent by the current user. If so it's been read already.\n    if (!act || this._tinode.isMe(act)) {\n      this.read = this.read ? Math.max(this.read, this.seq) : this.seq;\n      this.recv = this.recv ? Math.max(this.read, this.recv) : this.read;\n    }\n    this.unread = this.seq - (this.read | 0);\n    this._tinode._db.updTopic(this);\n  }\n}\n\n/**\n * @class TopicMe - special case of {@link Tinode.Topic} for\n * managing data of the current user, including contact list.\n * @extends Tinode.Topic\n * @memberof Tinode\n *\n * @param {TopicMe.Callbacks} callbacks - Callbacks to receive various events.\n */\nexport class TopicMe extends Topic {\n  onContactUpdate;\n\n  constructor(callbacks) {\n    super(Const.TOPIC_ME, callbacks);\n\n    // me-specific callbacks\n    if (callbacks) {\n      this.onContactUpdate = callbacks.onContactUpdate;\n    }\n  }\n\n  // Override the original Topic._processMetaDesc.\n  _processMetaDesc(desc) {\n    // Check if online contacts need to be turned off because P permission was removed.\n    const turnOff = (desc.acs && !desc.acs.isPresencer()) && (this.acs && this.acs.isPresencer());\n\n    // Copy parameters from desc object to this topic.\n    mergeObj(this, desc);\n    this._tinode._db.updTopic(this);\n    // Update current user's record in the global cache.\n    this._updateCachedUser(this._tinode._myUID, desc);\n\n    // 'P' permission was removed. All topics are offline now.\n    if (turnOff) {\n      this._tinode.mapTopics((cont) => {\n        if (cont.online) {\n          cont.online = false;\n          cont.seen = Object.assign(cont.seen || {}, {\n            when: new Date()\n          });\n          this._refreshContact('off', cont);\n        }\n      });\n    }\n\n    if (this.onMetaDesc) {\n      this.onMetaDesc(this);\n    }\n  }\n\n  // Override the original Topic._processMetaSub\n  _processMetaSub(subs) {\n    let updateCount = 0;\n    subs.forEach((sub) => {\n      const topicName = sub.topic;\n      // Don't show 'me' and 'fnd' topics in the list of contacts.\n      if (topicName == Const.TOPIC_FND || topicName == Const.TOPIC_ME) {\n        return;\n      }\n      sub.online = !!sub.online;\n\n      let cont = null;\n      if (sub.deleted) {\n        cont = sub;\n        this._tinode.cacheRemTopic(topicName);\n        this._tinode._db.remTopic(topicName);\n      } else {\n        // Ensure the values are defined and are integers.\n        if (typeof sub.seq != 'undefined') {\n          sub.seq = sub.seq | 0;\n          sub.recv = sub.recv | 0;\n          sub.read = sub.read | 0;\n          sub.unread = sub.seq - sub.read;\n        }\n\n        const topic = this._tinode.getTopic(topicName);\n        if (topic._new) {\n          delete topic._new;\n        }\n\n        cont = mergeObj(topic, sub);\n        this._tinode._db.updTopic(cont);\n\n        if (Topic.isP2PTopicName(topicName)) {\n          this._cachePutUser(topicName, cont);\n          this._tinode._db.updUser(topicName, cont.public);\n        }\n        // Notify topic of the update if it's an external update.\n        if (!sub._noForwarding && topic) {\n          sub._noForwarding = true;\n          topic._processMetaDesc(sub);\n        }\n      }\n\n      updateCount++;\n\n      if (this.onMetaSub) {\n        this.onMetaSub(cont);\n      }\n    });\n\n    if (this.onSubsUpdated && updateCount > 0) {\n      const keys = [];\n      subs.forEach((s) => {\n        keys.push(s.topic);\n      });\n      this.onSubsUpdated(keys, updateCount);\n    }\n  }\n\n  // Called by Tinode when meta.sub is recived.\n  _processMetaCreds(creds, upd) {\n    if (creds.length == 1 && creds[0] == Const.DEL_CHAR) {\n      creds = [];\n    }\n    if (upd) {\n      creds.forEach((cr) => {\n        if (cr.val) {\n          // Adding a credential.\n          let idx = this._credentials.findIndex((el) => {\n            return el.meth == cr.meth && el.val == cr.val;\n          });\n          if (idx < 0) {\n            // Not found.\n            if (!cr.done) {\n              // Unconfirmed credential replaces previous unconfirmed credential of the same method.\n              idx = this._credentials.findIndex((el) => {\n                return el.meth == cr.meth && !el.done;\n              });\n              if (idx >= 0) {\n                // Remove previous unconfirmed credential.\n                this._credentials.splice(idx, 1);\n              }\n            }\n            this._credentials.push(cr);\n          } else {\n            // Found. Maybe change 'done' status.\n            this._credentials[idx].done = cr.done;\n          }\n        } else if (cr.resp) {\n          // Handle credential confirmation.\n          const idx = this._credentials.findIndex((el) => {\n            return el.meth == cr.meth && !el.done;\n          });\n          if (idx >= 0) {\n            this._credentials[idx].done = true;\n          }\n        }\n      });\n    } else {\n      this._credentials = creds;\n    }\n    if (this.onCredsUpdated) {\n      this.onCredsUpdated(this._credentials);\n    }\n  }\n\n  // Process presence change message\n  _routePres(pres) {\n    if (pres.what == 'term') {\n      // The 'me' topic itself is detached. Mark as unsubscribed.\n      this._resetSub();\n      return;\n    }\n\n    if (pres.what == 'upd' && pres.src == Const.TOPIC_ME) {\n      // Update to me's description. Request updated value.\n      this.getMeta(this.startMetaQuery().withDesc().build());\n      return;\n    }\n\n    const cont = this._tinode.cacheGetTopic(pres.src);\n    if (cont) {\n      switch (pres.what) {\n        case 'on': // topic came online\n          cont.online = true;\n          break;\n        case 'off': // topic went offline\n          if (cont.online) {\n            cont.online = false;\n            cont.seen = Object.assign(cont.seen || {}, {\n              when: new Date()\n            });\n          }\n          break;\n        case 'msg': // new message received\n          cont._updateReceived(pres.seq, pres.act);\n          break;\n        case 'upd': // desc updated\n          // Request updated subscription.\n          this.getMeta(this.startMetaQuery().withLaterOneSub(pres.src).build());\n          break;\n        case 'acs': // access mode changed\n          if (cont.acs) {\n            cont.acs.updateAll(pres.dacs);\n          } else {\n            cont.acs = new AccessMode().updateAll(pres.dacs);\n          }\n          cont.touched = new Date();\n          break;\n        case 'ua':\n          // user agent changed.\n          cont.seen = {\n            when: new Date(),\n            ua: pres.ua\n          };\n          break;\n        case 'recv':\n          // user's other session marked some messges as received.\n          pres.seq = pres.seq | 0;\n          cont.recv = cont.recv ? Math.max(cont.recv, pres.seq) : pres.seq;\n          break;\n        case 'read':\n          // user's other session marked some messages as read.\n          pres.seq = pres.seq | 0;\n          cont.read = cont.read ? Math.max(cont.read, pres.seq) : pres.seq;\n          cont.recv = cont.recv ? Math.max(cont.read, cont.recv) : cont.recv;\n          cont.unread = cont.seq - cont.read;\n          break;\n        case 'gone':\n          // topic deleted or unsubscribed from.\n          if (!cont._deleted) {\n            cont._deleted = true;\n            cont._attached = false;\n            this._tinode._db.markTopicAsDeleted(pres.src);\n          } else {\n            this._tinode._db.remTopic(pres.src);\n          }\n          break;\n        case 'del':\n          // Update topic.del value.\n          break;\n        default:\n          this._tinode.logger(\"INFO: Unsupported presence update in 'me'\", pres.what);\n      }\n\n      this._refreshContact(pres.what, cont);\n    } else {\n      if (pres.what == 'acs') {\n        // New subscriptions and deleted/banned subscriptions have full\n        // access mode (no + or - in the dacs string). Changes to known subscriptions are sent as\n        // deltas, but they should not happen here.\n        const acs = new AccessMode(pres.dacs);\n        if (!acs || acs.mode == AccessMode._INVALID) {\n          this._tinode.logger(\"ERROR: Invalid access mode update\", pres.src, pres.dacs);\n          return;\n        } else if (acs.mode == AccessMode._NONE) {\n          this._tinode.logger(\"WARNING: Removing non-existent subscription\", pres.src, pres.dacs);\n          return;\n        } else {\n          // New subscription. Send request for the full description.\n          // Using .withOneSub (not .withLaterOneSub) to make sure IfModifiedSince is not set.\n          this.getMeta(this.startMetaQuery().withOneSub(undefined, pres.src).build());\n          // Create a dummy entry to catch online status update.\n          const dummy = this._tinode.getTopic(pres.src);\n          dummy.topic = pres.src;\n          dummy.online = false;\n          dummy.acs = acs;\n          this._tinode._db.updTopic(dummy);\n        }\n      } else if (pres.what == 'tags') {\n        this.getMeta(this.startMetaQuery().withTags().build());\n      }\n    }\n\n    if (this.onPres) {\n      this.onPres(pres);\n    }\n  }\n\n  // Contact is updated, execute callbacks.\n  _refreshContact(what, cont) {\n    if (this.onContactUpdate) {\n      this.onContactUpdate(what, cont);\n    }\n  }\n\n  /**\n   * Publishing to TopicMe is not supported. {@link Topic#publish} is overriden and thows an {Error} if called.\n   * @memberof Tinode.TopicMe#\n   * @throws {Error} Always throws an error.\n   */\n  publish() {\n    return Promise.reject(new Error(\"Publishing to 'me' is not supported\"));\n  }\n\n  /**\n   * Delete validation credential.\n   * @memberof Tinode.TopicMe#\n   *\n   * @param {string} topic - Name of the topic to delete\n   * @param {string} user - User ID to remove.\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  delCredential(method, value) {\n    if (!this._attached) {\n      return Promise.reject(new Error(\"Cannot delete credential in inactive 'me' topic\"));\n    }\n    // Send {del} message, return promise\n    return this._tinode.delCredential(method, value).then(ctrl => {\n      // Remove deleted credential from the cache.\n      const index = this._credentials.findIndex((el) => {\n        return el.meth == method && el.val == value;\n      });\n      if (index > -1) {\n        this._credentials.splice(index, 1);\n      }\n      // Notify listeners\n      if (this.onCredsUpdated) {\n        this.onCredsUpdated(this._credentials);\n      }\n      return ctrl;\n    });\n  }\n\n  /**\n   * @callback contactFilter\n   * @param {Object} contact to check for inclusion.\n   * @returns {boolean} <code>true</code> if contact should be processed, <code>false</code> to exclude it.\n   */\n  /**\n   * Iterate over cached contacts.\n   *\n   * @function\n   * @memberof Tinode.TopicMe#\n   * @param {TopicMe.ContactCallback} callback - Callback to call for each contact.\n   * @param {contactFilter=} filter - Optionally filter contacts; include all if filter is false-ish, otherwise\n   *      include those for which filter returns true-ish.\n   * @param {Object=} context - Context to use for calling the `callback`, i.e. the value of `this` inside the callback.\n   */\n  contacts(callback, filter, context) {\n    this._tinode.mapTopics((c, idx) => {\n      if (c.isCommType() && (!filter || filter(c))) {\n        callback.call(context, c, idx);\n      }\n    });\n  }\n\n  /**\n   * Get a contact from cache.\n   * @memberof Tinode.TopicMe#\n   *\n   * @param {string} name - Name of the contact to get, either a UID (for p2p topics) or a topic name.\n   * @returns {Tinode.Contact} - Contact or `undefined`.\n   */\n  getContact(name) {\n    return this._tinode.cacheGetTopic(name);\n  }\n\n  /**\n   * Get access mode of a given contact from cache.\n   * @memberof Tinode.TopicMe#\n   *\n   * @param {string} name - Name of the contact to get access mode for, either a UID (for p2p topics)\n   *        or a topic name; if missing, access mode for the 'me' topic itself.\n   * @returns {string} - access mode, such as `RWP`.\n   */\n  getAccessMode(name) {\n    if (name) {\n      const cont = this._tinode.cacheGetTopic(name);\n      return cont ? cont.acs : null;\n    }\n    return this.acs;\n  }\n\n  /**\n   * Check if contact is archived, i.e. contact.private.arch == true.\n   * @memberof Tinode.TopicMe#\n   *\n   * @param {string} name - Name of the contact to check archived status, either a UID (for p2p topics) or a topic name.\n   * @returns {boolean} - true if contact is archived, false otherwise.\n   */\n  isArchived(name) {\n    const cont = this._tinode.cacheGetTopic(name);\n    return cont && cont.private && !!cont.private.arch;\n  }\n\n  /**\n   * @typedef Tinode.Credential\n   * @memberof Tinode\n   * @type Object\n   * @property {string} meth - validation method such as 'email' or 'tel'.\n   * @property {string} val - credential value, i.e. 'jdoe@example.com' or '+17025551234'\n   * @property {boolean} done - true if credential is validated.\n   */\n  /**\n   * Get the user's credentials: email, phone, etc.\n   * @memberof Tinode.TopicMe#\n   *\n   * @returns {Tinode.Credential[]} - array of credentials.\n   */\n  getCredentials() {\n    return this._credentials;\n  }\n}\n\n/**\n * Special case of {@link Tinode.Topic} for searching for contacts and group topics\n * @extends Tinode.Topic\n *\n */\nexport class TopicFnd extends Topic {\n  // List of users and topics uid or topic_name -> Contact object)\n  _contacts = {};\n\n  /**\n   * Create TopicFnd.\n   *\n   * @param {TopicFnd.Callbacks} callbacks - Callbacks to receive various events.\n   */\n  constructor(callbacks) {\n    super(Const.TOPIC_FND, callbacks);\n  }\n\n  // Override the original Topic._processMetaSub\n  _processMetaSub(subs) {\n    let updateCount = Object.getOwnPropertyNames(this._contacts).length;\n    // Reset contact list.\n    this._contacts = {};\n    for (let idx in subs) {\n      let sub = subs[idx];\n      const indexBy = sub.topic ? sub.topic : sub.user;\n\n      sub = mergeToCache(this._contacts, indexBy, sub);\n      updateCount++;\n\n      if (this.onMetaSub) {\n        this.onMetaSub(sub);\n      }\n    }\n\n    if (updateCount > 0 && this.onSubsUpdated) {\n      this.onSubsUpdated(Object.keys(this._contacts));\n    }\n  }\n\n  /**\n   * Publishing to TopicFnd is not supported. {@link Topic#publish} is overriden and thows an {Error} if called.\n   * @memberof Tinode.TopicFnd#\n   * @throws {Error} Always throws an error.\n   */\n  publish() {\n    return Promise.reject(new Error(\"Publishing to 'fnd' is not supported\"));\n  }\n\n  /**\n   * setMeta to TopicFnd resets contact list in addition to sending the message.\n   * @memberof Tinode.TopicFnd#\n   * @param {Tinode.SetParams} params parameters to update.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  setMeta(params) {\n    return Object.getPrototypeOf(TopicFnd.prototype).setMeta.call(this, params).then(_ => {\n      if (Object.keys(this._contacts).length > 0) {\n        this._contacts = {};\n        if (this.onSubsUpdated) {\n          this.onSubsUpdated([]);\n        }\n      }\n    });\n  }\n\n  /**\n   * Iterate over found contacts. If callback is undefined, use {@link this.onMetaSub}.\n   * @function\n   * @memberof Tinode.TopicFnd#\n   * @param {TopicFnd.ContactCallback} callback - Callback to call for each contact.\n   * @param {Object} context - Context to use for calling the `callback`, i.e. the value of `this` inside the callback.\n   */\n  contacts(callback, context) {\n    const cb = (callback || this.onMetaSub);\n    if (cb) {\n      for (let idx in this._contacts) {\n        cb.call(context, this._contacts[idx], idx, this._contacts);\n      }\n    }\n  }\n}\n","/**\n * @file Utilities used in multiple places.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\nimport AccessMode from './access-mode.js';\nimport {\n  DEL_CHAR\n} from './config.js';\n\n// Attempt to convert date and AccessMode strings to objects.\nexport function jsonParseHelper(key, val) {\n  // Try to convert string timestamps with optional milliseconds to Date,\n  // e.g. 2015-09-02T01:45:43[.123]Z\n  if (typeof val == 'string' && val.length >= 20 && val.length <= 24 && ['ts', 'touched', 'updated', 'created', 'when', 'deleted', 'expires'].includes(key)) {\n    const date = new Date(val);\n    if (!isNaN(date)) {\n      return date;\n    }\n  } else if (key === 'acs' && typeof val === 'object') {\n    return new AccessMode(val);\n  }\n  return val;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\nfunction isValidDate(d) {\n  return (d instanceof Date) && !isNaN(d) && (d.getTime() != 0);\n}\n\n// RFC3339 formater of Date\nexport function rfc3339DateString(d) {\n  if (!isValidDate(d)) {\n    return undefined;\n  }\n\n  const pad = function(val, sp) {\n    sp = sp || 2;\n    return '0'.repeat(sp - ('' + val).length) + val;\n  };\n\n  const millis = d.getUTCMilliseconds();\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) +\n    'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) +\n    (millis ? '.' + pad(millis, 3) : '') + 'Z';\n}\n\n// Recursively merge src's own properties to dst.\n// Ignore properties where ignore[property] is true.\n// Array and Date objects are shallow-copied.\nexport function mergeObj(dst, src, ignore) {\n  if (typeof src != 'object') {\n    if (src === undefined) {\n      return dst;\n    }\n    if (src === DEL_CHAR) {\n      return undefined;\n    }\n    return src;\n  }\n  // JS is crazy: typeof null is 'object'.\n  if (src === null) {\n    return src;\n  }\n\n  // Handle Date\n  if (src instanceof Date && !isNaN(src)) {\n    return (!dst || !(dst instanceof Date) || isNaN(dst) || dst < src) ? src : dst;\n  }\n\n  // Access mode\n  if (src instanceof AccessMode) {\n    return new AccessMode(src);\n  }\n\n  // Handle Array\n  if (src instanceof Array) {\n    return src;\n  }\n\n  if (!dst || dst === DEL_CHAR) {\n    dst = src.constructor();\n  }\n\n  for (let prop in src) {\n    if (src.hasOwnProperty(prop) && (!ignore || !ignore[prop]) && (prop != '_noForwarding')) {\n      try {\n        dst[prop] = mergeObj(dst[prop], src[prop]);\n      } catch (err) {\n        // FIXME: probably need to log something here.\n      }\n    }\n  }\n  return dst;\n}\n\n// Update object stored in a cache. Returns updated value.\nexport function mergeToCache(cache, key, newval, ignore) {\n  cache[key] = mergeObj(cache[key], newval, ignore);\n  return cache[key];\n}\n\n// Strips all values from an object of they evaluate to false or if their name starts with '_'.\n// Used on all outgoing object before serialization to string.\nexport function simplify(obj) {\n  Object.keys(obj).forEach((key) => {\n    if (key[0] == '_') {\n      // Strip fields like \"obj._key\".\n      delete obj[key];\n    } else if (!obj[key]) {\n      // Strip fields which evaluate to false.\n      delete obj[key];\n    } else if (Array.isArray(obj[key]) && obj[key].length == 0) {\n      // Strip empty arrays.\n      delete obj[key];\n    } else if (!obj[key]) {\n      // Strip fields which evaluate to false.\n      delete obj[key];\n    } else if (obj[key] instanceof Date) {\n      // Strip invalid or zero date.\n      if (!isValidDate(obj[key])) {\n        delete obj[key];\n      }\n    } else if (typeof obj[key] == 'object') {\n      simplify(obj[key]);\n      // Strip empty objects.\n      if (Object.getOwnPropertyNames(obj[key]).length == 0) {\n        delete obj[key];\n      }\n    }\n  });\n  return obj;\n};\n\n\n// Trim whitespace, strip empty and duplicate elements elements.\n// If the result is an empty array, add a single element \"\\u2421\" (Unicode Del character).\nexport function normalizeArray(arr) {\n  let out = [];\n  if (Array.isArray(arr)) {\n    // Trim, throw away very short and empty tags.\n    for (let i = 0, l = arr.length; i < l; i++) {\n      let t = arr[i];\n      if (t) {\n        t = t.trim().toLowerCase();\n        if (t.length > 1) {\n          out.push(t);\n        }\n      }\n    }\n    out.sort().filter(function(item, pos, ary) {\n      return !pos || item != ary[pos - 1];\n    });\n  }\n  if (out.length == 0) {\n    // Add single tag with a Unicode Del character, otherwise an ampty array\n    // is ambiguos. The Del tag will be stripped by the server.\n    out.push(DEL_CHAR);\n  }\n  return out;\n}\n","export const PACKAGE_VERSION = \"0.22.6\";\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * @module tinode-sdk\n *\n * @copyright 2015-2022 Tinode LLC.\n * @summary Javascript bindings for Tinode.\n * @license Apache 2.0\n * @version 0.20\n *\n * See <a href=\"https://github.com/tinode/webapp\">https://github.com/tinode/webapp</a> for real-life usage.\n *\n * @example\n * <head>\n * <script src=\".../tinode.js\"></script>\n * </head>\n *\n * <body>\n *  ...\n * <script>\n *  // Instantiate tinode.\n *  const tinode = new Tinode(config, _ => {\n *    // Called on init completion.\n *  });\n *  tinode.enableLogging(true);\n *  tinode.onDisconnect = err => {\n *    // Handle disconnect.\n *  };\n *  // Connect to the server.\n *  tinode.connect('https://example.com/').then(_ => {\n *    // Connected. Login now.\n *    return tinode.loginBasic(login, password);\n *  }).then(ctrl => {\n *    // Logged in fine, attach callbacks, subscribe to 'me'.\n *    const me = tinode.getMeTopic();\n *    me.onMetaDesc = function(meta) { ... };\n *    // Subscribe, fetch topic description and the list of contacts.\n *    me.subscribe({get: {desc: {}, sub: {}}});\n *  }).catch(err => {\n *    // Login or subscription failed, do something.\n *    ...\n *  });\n *  ...\n * </script>\n * </body>\n */\n'use strict';\n\n// NOTE TO DEVELOPERS:\n// Localizable strings should be double quoted \"строка на другом языке\",\n// non-localizable strings should be single quoted 'non-localized'.\n\nimport AccessMode from './access-mode.js';\nimport * as Const from './config.js';\nimport CommError from './comm-error.js';\nimport Connection from './connection.js';\nimport DBCache from './db.js';\nimport Drafty from './drafty.js';\nimport LargeFileHelper from './large-file.js';\nimport MetaGetBuilder from './meta-builder.js';\nimport {\n  Topic,\n  TopicMe,\n  TopicFnd\n} from './topic.js';\n\nimport {\n  isUrlRelative,\n  jsonParseHelper,\n  mergeObj,\n  rfc3339DateString,\n  simplify\n} from './utils.js';\n\n// Re-export AccessMode\nexport {\n  AccessMode\n};\n\nlet WebSocketProvider;\nif (typeof WebSocket != 'undefined') {\n  WebSocketProvider = WebSocket;\n}\n\nlet XHRProvider;\nif (typeof XMLHttpRequest != 'undefined') {\n  XHRProvider = XMLHttpRequest;\n}\n\nlet IndexedDBProvider;\nif (typeof indexedDB != 'undefined') {\n  IndexedDBProvider = indexedDB;\n}\n\n// Re-export Drafty.\nexport {\n  Drafty\n}\n\ninitForNonBrowserApp();\n\n// Utility functions\n\n// Polyfill for non-browser context, e.g. NodeJs.\nfunction initForNonBrowserApp() {\n  // Tinode requirement in native mode because react native doesn't provide Base64 method\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  if (typeof btoa == 'undefined') {\n    global.btoa = function(input = '') {\n      let str = input;\n      let output = '';\n\n      for (let block = 0, charCode, i = 0, map = chars; str.charAt(i | 0) || (map = '=', i % 1); output += map.charAt(63 & block >> 8 - i % 1 * 8)) {\n\n        charCode = str.charCodeAt(i += 3 / 4);\n\n        if (charCode > 0xFF) {\n          throw new Error(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n        }\n        block = block << 8 | charCode;\n      }\n\n      return output;\n    };\n  }\n\n  if (typeof atob == 'undefined') {\n    global.atob = function(input = '') {\n      let str = input.replace(/=+$/, '');\n      let output = '';\n\n      if (str.length % 4 == 1) {\n        throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n      }\n      for (let bc = 0, bs = 0, buffer, i = 0; buffer = str.charAt(i++);\n\n        ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n          bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n      ) {\n        buffer = chars.indexOf(buffer);\n      }\n\n      return output;\n    };\n  }\n\n  if (typeof window == 'undefined') {\n    global.window = {\n      WebSocket: WebSocketProvider,\n      XMLHttpRequest: XHRProvider,\n      indexedDB: IndexedDBProvider,\n      URL: {\n        createObjectURL: function() {\n          throw new Error(\"Unable to use URL.createObjectURL in a non-browser application\");\n        }\n      }\n    }\n  }\n\n  Connection.setNetworkProviders(WebSocketProvider, XHRProvider);\n  LargeFileHelper.setNetworkProvider(XHRProvider);\n  DBCache.setDatabaseProvider(IndexedDBProvider);\n}\n\n// Detect find most useful network transport.\nfunction detectTransport() {\n  if (typeof window == 'object') {\n    if (window['WebSocket']) {\n      return 'ws';\n    } else if (window['XMLHttpRequest']) {\n      // The browser or node has no websockets, using long polling.\n      return 'lp';\n    }\n  }\n  return null;\n}\n\n// btoa replacement. Stock btoa fails on on non-Latin1 strings.\nfunction b64EncodeUnicode(str) {\n  // The encodeURIComponent percent-encodes UTF-8 string,\n  // then the percent encoding is converted into raw bytes which\n  // can be fed into btoa.\n  return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g,\n    function toSolidBytes(match, p1) {\n      return String.fromCharCode('0x' + p1);\n    }));\n}\n\n// JSON stringify helper - pre-processor for JSON.stringify\nfunction jsonBuildHelper(key, val) {\n  if (val instanceof Date) {\n    // Convert javascript Date objects to rfc3339 strings\n    val = rfc3339DateString(val);\n  } else if (val instanceof AccessMode) {\n    val = val.jsonHelper();\n  } else if (val === undefined || val === null || val === false ||\n    (Array.isArray(val) && val.length == 0) ||\n    ((typeof val == 'object') && (Object.keys(val).length == 0))) {\n    // strip out empty elements while serializing objects to JSON\n    return undefined;\n  }\n\n  return val;\n};\n\n// Trims very long strings (encoded images) to make logged packets more readable.\nfunction jsonLoggerHelper(key, val) {\n  if (typeof val == 'string' && val.length > 128) {\n    return '<' + val.length + ', bytes: ' + val.substring(0, 12) + '...' + val.substring(val.length - 12) + '>';\n  }\n  return jsonBuildHelper(key, val);\n};\n\n// Parse browser user agent to extract browser name and version.\nfunction getBrowserInfo(ua, product) {\n  ua = ua || '';\n  let reactnative = '';\n  // Check if this is a ReactNative app.\n  if (/reactnative/i.test(product)) {\n    reactnative = 'ReactNative; ';\n  }\n  let result;\n  // Remove useless string.\n  ua = ua.replace(' (KHTML, like Gecko)', '');\n  // Test for WebKit-based browser.\n  let m = ua.match(/(AppleWebKit\\/[.\\d]+)/i);\n  if (m) {\n    // List of common strings, from more useful to less useful.\n    // All unknown strings get the highest (-1) priority.\n    const priority = ['edg', 'chrome', 'safari', 'mobile', 'version'];\n    let tmp = ua.substr(m.index + m[0].length).split(' ');\n    let tokens = [];\n    let version; // 1.0 in Version/1.0 or undefined;\n    // Split string like 'Name/0.0.0' into ['Name', '0.0.0', 3] where the last element is the priority.\n    for (let i = 0; i < tmp.length; i++) {\n      let m2 = /([\\w.]+)[\\/]([\\.\\d]+)/.exec(tmp[i]);\n      if (m2) {\n        // Unknown values are highest priority (-1).\n        tokens.push([m2[1], m2[2], priority.findIndex((e) => {\n          return m2[1].toLowerCase().startsWith(e);\n        })]);\n        if (m2[1] == 'Version') {\n          version = m2[2];\n        }\n      }\n    }\n    // Sort by priority: more interesting is earlier than less interesting.\n    tokens.sort((a, b) => {\n      return a[2] - b[2];\n    });\n    if (tokens.length > 0) {\n      // Return the least common browser string and version.\n      if (tokens[0][0].toLowerCase().startsWith('edg')) {\n        tokens[0][0] = 'Edge';\n      } else if (tokens[0][0] == 'OPR') {\n        tokens[0][0] = 'Opera';\n      } else if (tokens[0][0] == 'Safari' && version) {\n        tokens[0][1] = version;\n      }\n      result = tokens[0][0] + '/' + tokens[0][1];\n    } else {\n      // Failed to ID the browser. Return the webkit version.\n      result = m[1];\n    }\n  } else if (/firefox/i.test(ua)) {\n    m = /Firefox\\/([.\\d]+)/g.exec(ua);\n    if (m) {\n      result = 'Firefox/' + m[1];\n    } else {\n      result = 'Firefox/?';\n    }\n  } else {\n    // Neither AppleWebKit nor Firefox. Try the last resort.\n    m = /([\\w.]+)\\/([.\\d]+)/.exec(ua);\n    if (m) {\n      result = m[1] + '/' + m[2];\n    } else {\n      m = ua.split(' ');\n      result = m[0];\n    }\n  }\n\n  // Shorten the version to one dot 'a.bb.ccc.d -> a.bb' at most.\n  m = result.split('/');\n  if (m.length > 1) {\n    const v = m[1].split('.');\n    const minor = v[1] ? '.' + v[1].substr(0, 2) : '';\n    result = `${m[0]}/${v[0]}${minor}`;\n  }\n  return reactnative + result;\n}\n\n/**\n * The main class for interacting with Tinode server.\n */\nexport class Tinode {\n  _host;\n  _secure;\n\n  _appName;\n\n  // API Key.\n  _apiKey;\n\n  // Name and version of the browser.\n  _browser = '';\n  _platform;\n  // Hardware\n  _hwos = 'undefined';\n  _humanLanguage = 'xx';\n\n  // Logging to console enabled\n  _loggingEnabled = false;\n  // When logging, trip long strings (base64-encoded images) for readability\n  _trimLongStrings = false;\n  // UID of the currently authenticated user.\n  _myUID = null;\n  // Status of connection: authenticated or not.\n  _authenticated = false;\n  // Login used in the last successful basic authentication\n  _login = null;\n  // Token which can be used for login instead of login/password.\n  _authToken = null;\n  // Counter of received packets\n  _inPacketCount = 0;\n  // Counter for generating unique message IDs\n  _messageId = Math.floor((Math.random() * 0xFFFF) + 0xFFFF);\n  // Information about the server, if connected\n  _serverInfo = null;\n  // Push notification token. Called deviceToken for consistency with the Android SDK.\n  _deviceToken = null;\n\n  // Cache of pending promises by message id.\n  _pendingPromises = {};\n  // The Timeout object returned by the reject expired promises setInterval.\n  _expirePromises = null;\n\n  // Websocket or long polling connection.\n  _connection = null;\n\n  // Use indexDB for caching topics and messages.\n  _persist = false;\n  // IndexedDB wrapper object.\n  _db = null;\n\n  // Tinode's cache of objects\n  _cache = {};\n\n  /**\n   * Create Tinode object.\n   *\n   * @param {Object} config - configuration parameters.\n   * @param {string} config.appName - Name of the calling application to be reported in the User Agent.\n   * @param {string} config.host - Host name and optional port number to connect to.\n   * @param {string} config.apiKey - API key generated by <code>keygen</code>.\n   * @param {string} config.transport - See {@link Tinode.Connection#transport}.\n   * @param {boolean} config.secure - Use Secure WebSocket if <code>true</code>.\n   * @param {string} config.platform - Optional platform identifier, one of <code>\"ios\"</code>, <code>\"web\"</code>, <code>\"android\"</code>.\n   * @param {boolen} config.persist - Use IndexedDB persistent storage.\n   * @param {function} onComplete - callback to call when initialization is completed.\n   */\n  constructor(config, onComplete) {\n    this._host = config.host;\n    this._secure = config.secure;\n\n    // Client-provided application name, format <Name>/<version number>\n    this._appName = config.appName || \"Undefined\";\n\n    // API Key.\n    this._apiKey = config.apiKey;\n\n    // Name and version of the browser.\n    this._platform = config.platform || 'web';\n    // Underlying OS.\n    if (typeof navigator != 'undefined') {\n      this._browser = getBrowserInfo(navigator.userAgent, navigator.product);\n      this._hwos = navigator.platform;\n      // This is the default language. It could be changed by client.\n      this._humanLanguage = navigator.language || 'en-US';\n    }\n\n    Connection.logger = this.logger;\n    Drafty.logger = this.logger;\n\n    // WebSocket or long polling network connection.\n    if (config.transport != 'lp' && config.transport != 'ws') {\n      config.transport = detectTransport();\n    }\n    this._connection = new Connection(config, Const.PROTOCOL_VERSION, /* autoreconnect */ true);\n    this._connection.onMessage = (data) => {\n      // Call the main message dispatcher.\n      this.#dispatchMessage(data);\n    }\n\n    // Ready to start sending.\n    this._connection.onOpen = _ => this.#connectionOpen();\n    this._connection.onDisconnect = (err, code) => this.#disconnected(err, code);\n\n    // Wrapper for the reconnect iterator callback.\n    this._connection.onAutoreconnectIteration = (timeout, promise) => {\n      if (this.onAutoreconnectIteration) {\n        this.onAutoreconnectIteration(timeout, promise);\n      }\n    }\n\n    this._persist = config.persist;\n    // Initialize object regardless. It simplifies the code.\n    this._db = new DBCache(err => {\n      this.logger('DB', err);\n    }, this.logger);\n\n    if (this._persist) {\n      // Create the persistent cache.\n      // Store promises to be resolved when messages load into memory.\n      const prom = [];\n      this._db.initDatabase().then(_ => {\n        // First load topics into memory.\n        return this._db.mapTopics((data) => {\n          let topic = this.#cacheGet('topic', data.name);\n          if (topic) {\n            return;\n          }\n          if (data.name == Const.TOPIC_ME) {\n            topic = new TopicMe();\n          } else if (data.name == Const.TOPIC_FND) {\n            topic = new TopicFnd();\n          } else {\n            topic = new Topic(data.name);\n          }\n          this._db.deserializeTopic(topic, data);\n          this.#attachCacheToTopic(topic);\n          topic._cachePutSelf();\n          // Topic loaded from DB is not new.\n          delete topic._new;\n          // Request to load messages and save the promise.\n          prom.push(topic._loadMessages(this._db));\n        });\n      }).then(_ => {\n        // Then load users.\n        return this._db.mapUsers((data) => {\n          this.#cachePut('user', data.uid, mergeObj({}, data.public));\n        });\n      }).then(_ => {\n        // Now wait for all messages to finish loading.\n        return Promise.all(prom);\n      }).then(_ => {\n        if (onComplete) {\n          onComplete();\n        }\n        this.logger(\"Persistent cache initialized.\");\n      }).catch(err => {\n        if (onComplete) {\n          onComplete(err);\n        }\n        this.logger(\"Failed to initialize persistent cache:\", err);\n      });\n    } else {\n      this._db.deleteDatabase().then(_ => {\n        if (onComplete) {\n          onComplete();\n        }\n      });\n    }\n  }\n\n  // Private methods.\n\n  // Console logger. Babel somehow fails to parse '...rest' parameter.\n  logger(str, ...args) {\n    if (this._loggingEnabled) {\n      const d = new Date();\n      const dateString = ('0' + d.getUTCHours()).slice(-2) + ':' +\n        ('0' + d.getUTCMinutes()).slice(-2) + ':' +\n        ('0' + d.getUTCSeconds()).slice(-2) + '.' +\n        ('00' + d.getUTCMilliseconds()).slice(-3);\n\n      console.log('[' + dateString + ']', str, args.join(' '));\n    }\n  }\n\n  // Generator of default promises for sent packets.\n  #makePromise(id) {\n    let promise = null;\n    if (id) {\n      promise = new Promise((resolve, reject) => {\n        // Stored callbacks will be called when the response packet with this Id arrives\n        this._pendingPromises[id] = {\n          'resolve': resolve,\n          'reject': reject,\n          'ts': new Date()\n        };\n      });\n    }\n    return promise;\n  };\n\n  // Resolve or reject a pending promise.\n  // Unresolved promises are stored in _pendingPromises.\n  #execPromise(id, code, onOK, errorText) {\n    const callbacks = this._pendingPromises[id];\n    if (callbacks) {\n      delete this._pendingPromises[id];\n      if (code >= 200 && code < 400) {\n        if (callbacks.resolve) {\n          callbacks.resolve(onOK);\n        }\n      } else if (callbacks.reject) {\n        callbacks.reject(new CommError(errorText, code));\n      }\n    }\n  }\n\n  // Send a packet. If packet id is provided return a promise.\n  #send(pkt, id) {\n    let promise;\n    if (id) {\n      promise = this.#makePromise(id);\n    }\n    pkt = simplify(pkt);\n    let msg = JSON.stringify(pkt);\n    this.logger(\"out: \" + (this._trimLongStrings ? JSON.stringify(pkt, jsonLoggerHelper) : msg));\n    try {\n      this._connection.sendText(msg);\n    } catch (err) {\n      // If sendText throws, wrap the error in a promise or rethrow.\n      if (id) {\n        this.#execPromise(id, Connection.NETWORK_ERROR, null, err.message);\n      } else {\n        throw err;\n      }\n    }\n    return promise;\n  }\n\n  // The main message dispatcher.\n  #dispatchMessage(data) {\n    // Skip empty response. This happens when LP times out.\n    if (!data)\n      return;\n\n    this._inPacketCount++;\n\n    // Send raw message to listener\n    if (this.onRawMessage) {\n      this.onRawMessage(data);\n    }\n\n    if (data === '0') {\n      // Server response to a network probe.\n      if (this.onNetworkProbe) {\n        this.onNetworkProbe();\n      }\n      // No processing is necessary.\n      return;\n    }\n\n    let pkt = JSON.parse(data, jsonParseHelper);\n    if (!pkt) {\n      this.logger(\"in: \" + data);\n      this.logger(\"ERROR: failed to parse data\");\n    } else {\n      this.logger(\"in: \" + (this._trimLongStrings ? JSON.stringify(pkt, jsonLoggerHelper) : data));\n\n      // Send complete packet to listener\n      if (this.onMessage) {\n        this.onMessage(pkt);\n      }\n\n      if (pkt.ctrl) {\n        // Handling {ctrl} message\n        if (this.onCtrlMessage) {\n          this.onCtrlMessage(pkt.ctrl);\n        }\n\n        // Resolve or reject a pending promise, if any\n        if (pkt.ctrl.id) {\n          this.#execPromise(pkt.ctrl.id, pkt.ctrl.code, pkt.ctrl, pkt.ctrl.text);\n        }\n        setTimeout(_ => {\n          if (pkt.ctrl.code == 205 && pkt.ctrl.text == 'evicted') {\n            // User evicted from topic.\n            const topic = this.#cacheGet('topic', pkt.ctrl.topic);\n            if (topic) {\n              topic._resetSub();\n              if (pkt.ctrl.params && pkt.ctrl.params.unsub) {\n                topic._gone();\n              }\n            }\n          } else if (pkt.ctrl.code < 300 && pkt.ctrl.params) {\n            if (pkt.ctrl.params.what == 'data') {\n              // code=208, all messages received: \"params\":{\"count\":11,\"what\":\"data\"},\n              const topic = this.#cacheGet('topic', pkt.ctrl.topic);\n              if (topic) {\n                topic._allMessagesReceived(pkt.ctrl.params.count);\n              }\n            } else if (pkt.ctrl.params.what == 'sub') {\n              // code=204, the topic has no (refreshed) subscriptions.\n              const topic = this.#cacheGet('topic', pkt.ctrl.topic);\n              if (topic) {\n                // Trigger topic.onSubsUpdated.\n                topic._processMetaSub([]);\n              }\n            }\n          }\n        }, 0);\n      } else {\n        setTimeout(_ => {\n          if (pkt.meta) {\n            // Handling a {meta} message.\n            // Preferred API: Route meta to topic, if one is registered\n            const topic = this.#cacheGet('topic', pkt.meta.topic);\n            if (topic) {\n              topic._routeMeta(pkt.meta);\n            }\n\n            if (pkt.meta.id) {\n              this.#execPromise(pkt.meta.id, 200, pkt.meta, 'META');\n            }\n\n            // Secondary API: callback\n            if (this.onMetaMessage) {\n              this.onMetaMessage(pkt.meta);\n            }\n          } else if (pkt.data) {\n            // Handling {data} message\n            // Preferred API: Route data to topic, if one is registered\n            const topic = this.#cacheGet('topic', pkt.data.topic);\n            if (topic) {\n              topic._routeData(pkt.data);\n            }\n\n            // Secondary API: Call callback\n            if (this.onDataMessage) {\n              this.onDataMessage(pkt.data);\n            }\n          } else if (pkt.pres) {\n            // Handling {pres} message\n            // Preferred API: Route presence to topic, if one is registered\n            const topic = this.#cacheGet('topic', pkt.pres.topic);\n            if (topic) {\n              topic._routePres(pkt.pres);\n            }\n\n            // Secondary API - callback\n            if (this.onPresMessage) {\n              this.onPresMessage(pkt.pres);\n            }\n          } else if (pkt.info) {\n            // {info} message - read/received notifications and key presses\n            // Preferred API: Route {info}} to topic, if one is registered\n            const topic = this.#cacheGet('topic', pkt.info.topic);\n            if (topic) {\n              topic._routeInfo(pkt.info);\n            }\n\n            // Secondary API - callback\n            if (this.onInfoMessage) {\n              this.onInfoMessage(pkt.info);\n            }\n          } else {\n            this.logger(\"ERROR: Unknown packet received.\");\n          }\n        }, 0);\n      }\n    }\n  }\n\n  // Connection open, ready to start sending.\n  #connectionOpen() {\n    if (!this._expirePromises) {\n      // Reject promises which have not been resolved for too long.\n      this._expirePromises = setInterval(_ => {\n        const err = new CommError(\"timeout\", 504);\n        const expires = new Date(new Date().getTime() - Const.EXPIRE_PROMISES_TIMEOUT);\n        for (let id in this._pendingPromises) {\n          let callbacks = this._pendingPromises[id];\n          if (callbacks && callbacks.ts < expires) {\n            this.logger(\"Promise expired\", id);\n            delete this._pendingPromises[id];\n            if (callbacks.reject) {\n              callbacks.reject(err);\n            }\n          }\n        }\n      }, Const.EXPIRE_PROMISES_PERIOD);\n    }\n    this.hello();\n  }\n\n  #disconnected(err, code) {\n    this._inPacketCount = 0;\n    this._serverInfo = null;\n    this._authenticated = false;\n\n    if (this._expirePromises) {\n      clearInterval(this._expirePromises);\n      this._expirePromises = null;\n    }\n\n    // Mark all topics as unsubscribed\n    this.#cacheMap('topic', (topic, key) => {\n      topic._resetSub();\n    });\n\n    // Reject all pending promises\n    for (let key in this._pendingPromises) {\n      const callbacks = this._pendingPromises[key];\n      if (callbacks && callbacks.reject) {\n        callbacks.reject(err);\n      }\n    }\n    this._pendingPromises = {};\n\n    if (this.onDisconnect) {\n      this.onDisconnect(err);\n    }\n  }\n\n  // Get User Agent string\n  #getUserAgent() {\n    return this._appName + ' (' + (this._browser ? this._browser + '; ' : '') + this._hwos + '); ' + Const.LIBRARY;\n  }\n\n  // Generator of packets stubs\n  #initPacket(type, topic) {\n    switch (type) {\n      case 'hi':\n        return {\n          'hi': {\n            'id': this.getNextUniqueId(),\n            'ver': Const.VERSION,\n            'ua': this.#getUserAgent(),\n            'dev': this._deviceToken,\n            'lang': this._humanLanguage,\n            'platf': this._platform\n          }\n        };\n\n      case 'acc':\n        return {\n          'acc': {\n            'id': this.getNextUniqueId(),\n            'user': null,\n            'scheme': null,\n            'secret': null,\n            'tmpscheme': null,\n            'tmpsecret': null,\n            'login': false,\n            'tags': null,\n            'desc': {},\n            'cred': {}\n          }\n        };\n\n      case 'login':\n        return {\n          'login': {\n            'id': this.getNextUniqueId(),\n            'scheme': null,\n            'secret': null\n          }\n        };\n\n      case 'sub':\n        return {\n          'sub': {\n            'id': this.getNextUniqueId(),\n            'topic': topic,\n            'set': {},\n            'get': {}\n          }\n        };\n\n      case 'leave':\n        return {\n          'leave': {\n            'id': this.getNextUniqueId(),\n            'topic': topic,\n            'unsub': false\n          }\n        };\n\n      case 'pub':\n        return {\n          'pub': {\n            'id': this.getNextUniqueId(),\n            'topic': topic,\n            'noecho': false,\n            'head': null,\n            'content': {}\n          }\n        };\n\n      case 'get':\n        return {\n          'get': {\n            'id': this.getNextUniqueId(),\n            'topic': topic,\n            'what': null,\n            'desc': {},\n            'sub': {},\n            'data': {}\n          }\n        };\n\n      case 'set':\n        return {\n          'set': {\n            'id': this.getNextUniqueId(),\n            'topic': topic,\n            'desc': {},\n            'sub': {},\n            'tags': [],\n            'ephemeral': {}\n          }\n        };\n\n      case 'del':\n        return {\n          'del': {\n            'id': this.getNextUniqueId(),\n            'topic': topic,\n            'what': null,\n            'delseq': null,\n            'user': null,\n            'hard': false\n          }\n        };\n\n      case 'note':\n        return {\n          'note': {\n            // no id by design (except calls).\n            'topic': topic,\n            'what': null, // one of \"recv\", \"read\", \"kp\", \"call\"\n            'seq': undefined // the server-side message id acknowledged as received or read.\n          }\n        };\n\n      default:\n        throw new Error(`Unknown packet type requested: ${type}`);\n    }\n  }\n\n  // Cache management\n  #cachePut(type, name, obj) {\n    this._cache[type + ':' + name] = obj;\n  }\n  #cacheGet(type, name) {\n    return this._cache[type + ':' + name];\n  }\n  #cacheDel(type, name) {\n    delete this._cache[type + ':' + name];\n  }\n\n  // Enumerate all items in cache, call func for each item.\n  // Enumeration stops if func returns true.\n  #cacheMap(type, func, context) {\n    const key = type ? type + ':' : undefined;\n    for (let idx in this._cache) {\n      if (!key || idx.indexOf(key) == 0) {\n        if (func.call(context, this._cache[idx], idx)) {\n          break;\n        }\n      }\n    }\n  }\n\n  // Make limited cache management available to topic.\n  // Caching user.public only. Everything else is per-topic.\n  #attachCacheToTopic(topic) {\n    topic._tinode = this;\n\n    topic._cacheGetUser = (uid) => {\n      const pub = this.#cacheGet('user', uid);\n      if (pub) {\n        return {\n          user: uid,\n          public: mergeObj({}, pub)\n        };\n      }\n      return undefined;\n    };\n    topic._cachePutUser = (uid, user) => {\n      this.#cachePut('user', uid, mergeObj({}, user.public));\n    };\n    topic._cacheDelUser = (uid) => {\n      this.#cacheDel('user', uid);\n    };\n    topic._cachePutSelf = _ => {\n      this.#cachePut('topic', topic.name, topic);\n    };\n    topic._cacheDelSelf = _ => {\n      this.#cacheDel('topic', topic.name);\n    };\n  }\n\n  // On successful login save server-provided data.\n  #loginSuccessful(ctrl) {\n    if (!ctrl.params || !ctrl.params.user) {\n      return ctrl;\n    }\n    // This is a response to a successful login,\n    // extract UID and security token, save it in Tinode module\n    this._myUID = ctrl.params.user;\n    this._authenticated = (ctrl && ctrl.code >= 200 && ctrl.code < 300);\n    if (ctrl.params && ctrl.params.token && ctrl.params.expires) {\n      this._authToken = {\n        token: ctrl.params.token,\n        expires: ctrl.params.expires\n      };\n    } else {\n      this._authToken = null;\n    }\n\n    if (this.onLogin) {\n      this.onLogin(ctrl.code, ctrl.text);\n    }\n\n    return ctrl;\n  }\n\n  // Static methods.\n  /**\n   * Helper method to package account credential.\n   *\n   * @param {string | Credential} meth - validation method or object with validation data.\n   * @param {string=} val - validation value (e.g. email or phone number).\n   * @param {Object=} params - validation parameters.\n   * @param {string=} resp - validation response.\n   *\n   * @returns {Array.<Credential>} array with a single credential or <code>null</code> if no valid credentials were given.\n   */\n  static credential(meth, val, params, resp) {\n    if (typeof meth == 'object') {\n      ({\n        val,\n        params,\n        resp,\n        meth\n      } = meth);\n    }\n    if (meth && (val || resp)) {\n      return [{\n        'meth': meth,\n        'val': val,\n        'resp': resp,\n        'params': params\n      }];\n    }\n    return null;\n  }\n\n  /**\n   * Determine topic type from topic's name: grp, p2p, me, fnd, sys.\n   * @param {string} name - Name of the topic to test.\n   * @returns {string} One of <code>\"me\"</code>, <code>\"fnd\"</code>, <code>\"sys\"</code>, <code>\"grp\"</code>,\n   *    <code>\"p2p\"</code> or <code>undefined</code>.\n   */\n  static topicType(name) {\n    return Topic.topicType(name);\n  }\n\n  /**\n   * Check if the given topic name is a name of a 'me' topic.\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a 'me' topic, <code>false</code> otherwise.\n   */\n  static isMeTopicName(name) {\n    return Topic.isMeTopicName(name);\n  }\n  /**\n   * Check if the given topic name is a name of a group topic.\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a group topic, <code>false</code> otherwise.\n   */\n  static isGroupTopicName(name) {\n    return Topic.isGroupTopicName(name);\n  }\n  /**\n   * Check if the given topic name is a name of a p2p topic.\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a p2p topic, <code>false</code> otherwise.\n   */\n  static isP2PTopicName(name) {\n    return Topic.isP2PTopicName(name);\n  }\n  /**\n   * Check if the given topic name is a name of a communication topic, i.e. P2P or group.\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a p2p or group topic, <code>false</code> otherwise.\n   */\n  static isCommTopicName(name) {\n    return Topic.isCommTopicName(name);\n  }\n  /**\n   * Check if the topic name is a name of a new topic.\n   * @param {string} name - topic name to check.\n   * @returns {boolean} <code>true</code> if the name is a name of a new topic, <code>false</code> otherwise.\n   */\n  static isNewGroupTopicName(name) {\n    return Topic.isNewGroupTopicName(name);\n  }\n  /**\n   * Check if the topic name is a name of a channel.\n   * @param {string} name - topic name to check.\n   * @returns {boolean} <code>true</code> if the name is a name of a channel, <code>false</code> otherwise.\n   */\n  static isChannelTopicName(name) {\n    return Topic.isChannelTopicName(name);\n  }\n  /**\n   * Get information about the current version of this Tinode client library.\n   * @returns {string} semantic version of the library, e.g. <code>\"0.15.5-rc1\"</code>.\n   */\n  static getVersion() {\n    return Const.VERSION;\n  }\n  /**\n   * To use Tinode in a non browser context, supply WebSocket and XMLHttpRequest providers.\n   * @static\n   *\n   * @param wsProvider <code>WebSocket</code> provider, e.g. for nodeJS , <code>require('ws')</code>.\n   * @param xhrProvider <code>XMLHttpRequest</code> provider, e.g. for node <code>require('xhr')</code>.\n   */\n  static setNetworkProviders(wsProvider, xhrProvider) {\n    WebSocketProvider = wsProvider;\n    XHRProvider = xhrProvider;\n\n    Connection.setNetworkProviders(WebSocketProvider, XHRProvider);\n    LargeFileHelper.setNetworkProvider(XHRProvider);\n  }\n  /**\n   * To use Tinode in a non browser context, supply <code>indexedDB</code> provider.\n   * @static\n   *\n   * @param idbProvider <code>indexedDB</code> provider, e.g. for nodeJS , <code>require('fake-indexeddb')</code>.\n   */\n  static setDatabaseProvider(idbProvider) {\n    IndexedDBProvider = idbProvider;\n\n    DBCache.setDatabaseProvider(IndexedDBProvider);\n  }\n  /**\n   * Return information about the current name and version of this Tinode library.\n   * @static\n   *\n   * @returns {string} the name of the library and it's version.\n   */\n  static getLibrary() {\n    return Const.LIBRARY;\n  }\n  /**\n   * Check if the given string represents <code>NULL</code> value as defined by Tinode (<code>'\\u2421'</code>).\n   * @param {string} str - string to check for <code>NULL</code> value.\n   * @returns {boolean} <code>true</code> if string represents <code>NULL</code> value, <code>false</code> otherwise.\n   */\n  static isNullValue(str) {\n    return str === Const.DEL_CHAR;\n  }\n\n  // Instance methods.\n\n  // Generates unique message IDs\n  getNextUniqueId() {\n    return (this._messageId != 0) ? '' + this._messageId++ : undefined;\n  };\n\n  /**\n   * Connect to the server.\n   *\n   * @param {string} host_ - name of the host to connect to.\n   * @return {Promise} Promise resolved/rejected when the connection call completes:\n   *    <code>resolve()</code> is called without parameters, <code>reject()</code> receives the\n   *    <code>Error</code> as a single parameter.\n   */\n  connect(host_) {\n    return this._connection.connect(host_);\n  }\n\n  /**\n   * Attempt to reconnect to the server immediately.\n   *\n   * @param {string} force - if <code>true</code>, reconnect even if there is a connection already.\n   */\n  reconnect(force) {\n    this._connection.reconnect(force);\n  }\n\n  /**\n   * Disconnect from the server.\n   */\n  disconnect() {\n    this._connection.disconnect();\n  }\n\n  /**\n   * Clear persistent cache: remove IndexedDB.\n   *\n   * @return {Promise} Promise resolved/rejected when the operation is completed.\n   */\n  clearStorage() {\n    if (this._db.isReady()) {\n      return this._db.deleteDatabase();\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Initialize persistent cache: create IndexedDB cache.\n   *\n   * @return {Promise} Promise resolved/rejected when the operation is completed.\n   */\n  initStorage() {\n    if (!this._db.isReady()) {\n      return this._db.initDatabase();\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Send a network probe message to make sure the connection is alive.\n   */\n  networkProbe() {\n    this._connection.probe();\n  }\n\n  /**\n   * Check for live connection to server.\n   *\n   * @returns {boolean} <code>true</code> if there is a live connection, <code>false</code> otherwise.\n   */\n  isConnected() {\n    return this._connection.isConnected();\n  }\n\n  /**\n   * Check if connection is authenticated (last login was successful).\n   *\n   * @returns {boolean} <code>true</code> if authenticated, <code>false</code> otherwise.\n   */\n  isAuthenticated() {\n    return this._authenticated;\n  }\n\n  /**\n   * Add API key and auth token to the relative URL making it usable for getting data\n   * from the server in a simple <code>HTTP GET</code> request.\n   *\n   * @param {string} URL - URL to wrap.\n   * @returns {string} URL with appended API key and token, if valid token is present.\n   */\n  authorizeURL(url) {\n    if (typeof url != 'string') {\n      return url;\n    }\n\n    if (isUrlRelative(url)) {\n      // Fake base to make the relative URL parseable.\n      const base = 'scheme://host/';\n      const parsed = new URL(url, base);\n      if (this._apiKey) {\n        parsed.searchParams.append('apikey', this._apiKey);\n      }\n      if (this._authToken && this._authToken.token) {\n        parsed.searchParams.append('auth', 'token');\n        parsed.searchParams.append('secret', this._authToken.token);\n      }\n      // Convert back to string and strip fake base URL except for the root slash.\n      url = parsed.toString().substring(base.length - 1);\n    }\n    return url;\n  }\n\n  /**\n   * @typedef AccountParams\n   * @type {Object}\n   * @property {DefAcs=} defacs - Default access parameters for user's <code>me</code> topic.\n   * @property {Object=} public - Public application-defined data exposed on <code>me</code> topic.\n   * @property {Object=} private - Private application-defined data accessible on <code>me</code> topic.\n   * @property {Object=} trusted - Trusted user data which can be set by a root user only.\n   * @property {Array.<string>} tags - array of string tags for user discovery.\n   * @property {string} scheme - Temporary authentication scheme for password reset.\n   * @property {string} secret - Temporary authentication secret for password reset.\n   * @property {Array.<string>=} attachments - Array of references to out of band attachments used in account description.\n   */\n  /**\n   * @typedef DefAcs\n   * @type {Object}\n   * @property {string=} auth - Access mode for <code>me</code> for authenticated users.\n   * @property {string=} anon - Access mode for <code>me</code> for anonymous users.\n   */\n\n  /**\n   * Create or update an account.\n   *\n   * @param {string} uid - User id to update\n   * @param {string} scheme - Authentication scheme; <code>\"basic\"</code> and <code>\"anonymous\"</code> are the currently supported schemes.\n   * @param {string} secret - Authentication secret, assumed to be already base64 encoded.\n   * @param {boolean=} login - Use new account to authenticate current session\n   * @param {AccountParams=} params - User data to pass to the server.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected when server reply is received.\n   */\n  account(uid, scheme, secret, login, params) {\n    const pkt = this.#initPacket('acc');\n    pkt.acc.user = uid;\n    pkt.acc.scheme = scheme;\n    pkt.acc.secret = secret;\n    // Log in to the new account using selected scheme\n    pkt.acc.login = login;\n\n    if (params) {\n      pkt.acc.desc.defacs = params.defacs;\n      pkt.acc.desc.public = params.public;\n      pkt.acc.desc.private = params.private;\n      pkt.acc.desc.trusted = params.trusted;\n\n      pkt.acc.tags = params.tags;\n      pkt.acc.cred = params.cred;\n\n      pkt.acc.tmpscheme = params.scheme;\n      pkt.acc.tmpsecret = params.secret;\n\n      if (Array.isArray(params.attachments) && params.attachments.length > 0) {\n        pkt.extra = {\n          attachments: params.attachments.filter(ref => isUrlRelative(ref))\n        };\n      }\n    }\n\n    return this.#send(pkt, pkt.acc.id);\n  }\n\n  /**\n   * Create a new user. Wrapper for {@link Tinode#account}.\n   *\n   * @param {string} scheme - Authentication scheme; <code>\"basic\"</code> is the only currently supported scheme.\n   * @param {string} secret - Authentication.\n   * @param {boolean=} login - Use new account to authenticate current session\n   * @param {AccountParams=} params - User data to pass to the server.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected when server reply is received.\n   */\n  createAccount(scheme, secret, login, params) {\n    let promise = this.account(Const.USER_NEW, scheme, secret, login, params);\n    if (login) {\n      promise = promise.then(ctrl => this.#loginSuccessful(ctrl));\n    }\n    return promise;\n  }\n\n  /**\n   * Create user with <code>'basic'</code> authentication scheme and immediately\n   * use it for authentication. Wrapper for {@link Tinode#account}.\n   *\n   * @param {string} username - Login to use for the new account.\n   * @param {string} password - User's password.\n   * @param {AccountParams=} params - User data to pass to the server.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected when server reply is received.\n   */\n  createAccountBasic(username, password, params) {\n    // Make sure we are not using 'null' or 'undefined';\n    username = username || '';\n    password = password || '';\n    return this.createAccount('basic',\n      b64EncodeUnicode(username + ':' + password), true, params);\n  }\n\n  /**\n   * Update user's credentials for <code>'basic'</code> authentication scheme. Wrapper for {@link Tinode#account}.\n   *\n   * @param {string} uid - User ID to update.\n   * @param {string} username - Login to use for the new account.\n   * @param {string} password - User's password.\n   * @param {AccountParams=} params - data to pass to the server.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected when server reply is received.\n   */\n  updateAccountBasic(uid, username, password, params) {\n    // Make sure we are not using 'null' or 'undefined';\n    username = username || '';\n    password = password || '';\n    return this.account(uid, 'basic',\n      b64EncodeUnicode(username + ':' + password), false, params);\n  }\n\n  /**\n   * Send handshake to the server.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected when server reply is received.\n   */\n  hello() {\n    const pkt = this.#initPacket('hi');\n\n    return this.#send(pkt, pkt.hi.id)\n      .then(ctrl => {\n        // Reset backoff counter on successful connection.\n        this._connection.backoffReset();\n\n        // Server response contains server protocol version, build, constraints,\n        // session ID for long polling. Save them.\n        if (ctrl.params) {\n          this._serverInfo = ctrl.params;\n        }\n\n        if (this.onConnect) {\n          this.onConnect();\n        }\n\n        return ctrl;\n      }).catch(err => {\n        this._connection.reconnect(true);\n\n        if (this.onDisconnect) {\n          this.onDisconnect(err);\n        }\n      });\n  }\n\n  /**\n   * Set or refresh the push notifications/device token. If the client is connected,\n   * the deviceToken can be sent to the server.\n   *\n   * @param {string} dt - token obtained from the provider or <code>false</code>,\n   *    <code>null</code> or <code>undefined</code> to clear the token.\n   *\n   * @returns <code>true</code> if attempt was made to send the update to the server.\n   */\n  setDeviceToken(dt) {\n    let sent = false;\n    // Convert any falsish value to null.\n    dt = dt || null;\n    if (dt != this._deviceToken) {\n      this._deviceToken = dt;\n      if (this.isConnected() && this.isAuthenticated()) {\n        this.#send({\n          'hi': {\n            'dev': dt || Tinode.DEL_CHAR\n          }\n        });\n        sent = true;\n      }\n    }\n    return sent;\n  }\n\n  /**\n   * @typedef Credential\n   * @type {Object}\n   * @property {string} meth - validation method.\n   * @property {string} val - value to validate (e.g. email or phone number).\n   * @property {string} resp - validation response.\n   * @property {Object} params - validation parameters.\n   */\n  /**\n   * Authenticate current session.\n   *\n   * @param {string} scheme - Authentication scheme; <code>\"basic\"</code> is the only currently supported scheme.\n   * @param {string} secret - Authentication secret, assumed to be already base64 encoded.\n   * @param {Credential=} cred - credential confirmation, if required.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected when server reply is received.\n   */\n  login(scheme, secret, cred) {\n    const pkt = this.#initPacket('login');\n    pkt.login.scheme = scheme;\n    pkt.login.secret = secret;\n    pkt.login.cred = cred;\n\n    return this.#send(pkt, pkt.login.id)\n      .then(ctrl => this.#loginSuccessful(ctrl));\n  }\n\n  /**\n   * Wrapper for {@link Tinode#login} with basic authentication\n   *\n   * @param {string} uname - User name.\n   * @param {string} password  - Password.\n   * @param {Credential=} cred - credential confirmation, if required.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  loginBasic(uname, password, cred) {\n    return this.login('basic', b64EncodeUnicode(uname + ':' + password), cred)\n      .then(ctrl => {\n        this._login = uname;\n        return ctrl;\n      });\n  }\n\n  /**\n   * Wrapper for {@link Tinode#login} with token authentication\n   *\n   * @param {string} token - Token received in response to earlier login.\n   * @param {Credential=} cred - credential confirmation, if required.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  loginToken(token, cred) {\n    return this.login('token', token, cred);\n  }\n\n  /**\n   * Send a request for resetting an authentication secret.\n   *\n   * @param {string} scheme - authentication scheme to reset.\n   * @param {string} method - method to use for resetting the secret, such as \"email\" or \"tel\".\n   * @param {string} value - value of the credential to use, a specific email address or a phone number.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving the server reply.\n   */\n  requestResetAuthSecret(scheme, method, value) {\n    return this.login('reset', b64EncodeUnicode(scheme + ':' + method + ':' + value));\n  }\n\n  /**\n   * @typedef AuthToken\n   * @type {Object}\n   * @property {string} token - Token value.\n   * @property {Date} expires - Token expiration time.\n   */\n  /**\n   * Get stored authentication token.\n   *\n   * @returns {AuthToken} authentication token.\n   */\n  getAuthToken() {\n    if (this._authToken && (this._authToken.expires.getTime() > Date.now())) {\n      return this._authToken;\n    } else {\n      this._authToken = null;\n    }\n    return null;\n  }\n\n  /**\n   * Application may provide a saved authentication token.\n   *\n   * @param {AuthToken} token - authentication token.\n   */\n  setAuthToken(token) {\n    this._authToken = token;\n  }\n\n  /**\n   * @typedef SetParams\n   * @type {Object}\n   * @property {SetDesc=} desc - Topic initialization parameters when creating a new topic or a new subscription.\n   * @property {SetSub=} sub - Subscription initialization parameters.\n   * @property {Array.<string>=} attachments - URLs of out of band attachments used in parameters.\n   */\n  /**\n   * @typedef SetDesc\n   * @type {Object}\n   * @property {DefAcs=} defacs - Default access mode.\n   * @property {Object=} public - Free-form topic description, publically accessible.\n   * @property {Object=} private - Free-form topic description accessible only to the owner.\n   * @property {Object=} trusted - Trusted user data which can be set by a root user only.\n   */\n  /**\n   * @typedef SetSub\n   * @type {Object}\n   * @property {string=} user - UID of the user affected by the request. Default (empty) - current user.\n   * @property {string=} mode - User access mode, either requested or assigned dependent on context.\n   */\n  /**\n   * Send a topic subscription request.\n   *\n   * @param {string} topic - Name of the topic to subscribe to.\n   * @param {GetQuery=} getParams - Optional subscription metadata query\n   * @param {SetParams=} setParams - Optional initialization parameters\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  subscribe(topicName, getParams, setParams) {\n    const pkt = this.#initPacket('sub', topicName)\n    if (!topicName) {\n      topicName = Const.TOPIC_NEW;\n    }\n\n    pkt.sub.get = getParams;\n\n    if (setParams) {\n      if (setParams.sub) {\n        pkt.sub.set.sub = setParams.sub;\n      }\n\n      if (setParams.desc) {\n        const desc = setParams.desc;\n        if (Tinode.isNewGroupTopicName(topicName)) {\n          // Full set.desc params are used for new topics only\n          pkt.sub.set.desc = desc;\n        } else if (Tinode.isP2PTopicName(topicName) && desc.defacs) {\n          // Use optional default permissions only.\n          pkt.sub.set.desc = {\n            defacs: desc.defacs\n          };\n        }\n      }\n\n      // See if external objects were used in topic description.\n      if (Array.isArray(setParams.attachments) && setParams.attachments.length > 0) {\n        pkt.extra = {\n          attachments: setParams.attachments.filter(ref => isUrlRelative(ref))\n        };\n      }\n\n      if (setParams.tags) {\n        pkt.sub.set.tags = setParams.tags;\n      }\n    }\n    return this.#send(pkt, pkt.sub.id);\n  }\n\n  /**\n   * Detach and optionally unsubscribe from the topic\n   *\n   * @param {string} topic - Topic to detach from.\n   * @param {boolean} unsub - If <code>true</code>, detach and unsubscribe, otherwise just detach.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  leave(topic, unsub) {\n    const pkt = this.#initPacket('leave', topic);\n    pkt.leave.unsub = unsub;\n\n    return this.#send(pkt, pkt.leave.id);\n  }\n\n  /**\n   * Create message draft without sending it to the server.\n   *\n   * @param {string} topic - Name of the topic to publish to.\n   * @param {Object} content - Payload to publish.\n   * @param {boolean=} noEcho - If <code>true</code>, tell the server not to echo the message to the original session.\n   *\n   * @returns {Object} new message which can be sent to the server or otherwise used.\n   */\n  createMessage(topic, content, noEcho) {\n    const pkt = this.#initPacket('pub', topic);\n\n    let dft = typeof content == 'string' ? Drafty.parse(content) : content;\n    if (dft && !Drafty.isPlainText(dft)) {\n      pkt.pub.head = {\n        mime: Drafty.getContentType()\n      };\n      content = dft;\n    }\n    pkt.pub.noecho = noEcho;\n    pkt.pub.content = content;\n\n    return pkt.pub;\n  }\n\n  /**\n   * Publish {data} message to topic.\n   *\n   * @param {string} topicName - Name of the topic to publish to.\n   * @param {Object} content - Payload to publish.\n   * @param {boolean=} noEcho - If <code>true</code>, tell the server not to echo the message to the original session.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  publish(topicName, content, noEcho) {\n    return this.publishMessage(\n      this.createMessage(topicName, content, noEcho)\n    );\n  }\n\n  /**\n   * Publish message to topic. The message should be created by {@link Tinode#createMessage}.\n   *\n   * @param {Object} pub - Message to publish.\n   * @param {Array.<string>=} attachments - array of URLs with attachments.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  publishMessage(pub, attachments) {\n    // Make a shallow copy. Needed in order to clear locally-assigned temp values;\n    pub = Object.assign({}, pub);\n    pub.seq = undefined;\n    pub.from = undefined;\n    pub.ts = undefined;\n    const msg = {\n      pub: pub,\n    };\n    if (attachments) {\n      msg.extra = {\n        attachments: attachments.filter(ref => isUrlRelative(ref))\n      };\n    }\n    return this.#send(msg, pub.id);\n  }\n\n  /**\n   * Out of band notification: notify topic that an external (push) notification was recived by the client.\n   *\n   * @param {object} data - notification payload.\n   * @param {string} data.what - notification type, 'msg', 'read', 'sub'.\n   * @param {string} data.topic - name of the updated topic.\n   * @param {number=} data.seq - seq ID of the affected message.\n   * @param {string=} data.xfrom - UID of the sender.\n   * @param {object=} data.given - new subscription 'given', e.g. 'ASWP...'.\n   * @param {object=} data.want - new subscription 'want', e.g. 'RWJ...'.\n   */\n  oobNotification(data) {\n    this.logger('oob: ' + (this._trimLongStrings ? JSON.stringify(data, jsonLoggerHelper) : data));\n\n    switch (data.what) {\n      case 'msg':\n        if (!data.seq || data.seq < 1 || !data.topic) {\n          // Server sent invalid data.\n          break;\n        }\n\n        if (!this.isConnected()) {\n          // Let's ignore the message if there is no connection: no connection means there are no open\n          // tabs with Tinode.\n          break;\n        }\n\n        const topic = this.#cacheGet('topic', data.topic);\n        if (!topic) {\n          // TODO: check if there is a case when a message can arrive from an unknown topic.\n          break;\n        }\n\n        if (topic.isSubscribed()) {\n          // No need to fetch: topic is already subscribed and got data through normal channel.\n          break;\n        }\n\n        if (topic.maxMsgSeq() < data.seq) {\n          if (topic.isChannelType()) {\n            topic._updateReceived(data.seq, 'fake-uid');\n          }\n\n          // New message.\n          if (data.xfrom && !this.#cacheGet('user', data.xfrom)) {\n            // Message from unknown sender, fetch description from the server.\n            // Sending asynchronously without a subscription.\n            this.getMeta(data.xfrom, new MetaGetBuilder().withDesc().build()).catch(err => {\n              this.logger(\"Failed to get the name of a new sender\", err);\n            });\n          }\n\n          topic.subscribe(null).then(_ => {\n            return topic.getMeta(new MetaGetBuilder(topic).withLaterData(24).withLaterDel(24).build());\n          }).then(_ => {\n            // Allow data fetch to complete and get processed successfully.\n            topic.leaveDelayed(false, 1000);\n          }).catch(err => {\n            this.logger(\"On push data fetch failed\", err);\n          }).finally(_ => {\n            this.getMeTopic()._refreshContact('msg', topic);\n          });\n        }\n        break;\n\n      case 'read':\n        this.getMeTopic()._routePres({\n          what: 'read',\n          seq: data.seq\n        });\n        break;\n\n      case 'sub':\n        if (!this.isMe(data.xfrom)) {\n          // TODO: handle updates from other users.\n          break;\n        }\n\n        const mode = {\n          given: data.modeGiven,\n          want: data.modeWant\n        };\n        const acs = new AccessMode(mode);\n        const pres = (!acs.mode || acs.mode == AccessMode._NONE) ?\n          // Subscription deleted.\n          {\n            what: 'gone',\n            src: data.topic\n          } :\n          // New subscription or subscription updated.\n          {\n            what: 'acs',\n            src: data.topic,\n            dacs: mode\n          };\n        this.getMeTopic()._routePres(pres);\n        break;\n\n      default:\n        this.logger(\"Unknown push type ignored\", data.what);\n    }\n  }\n\n  /**\n   * @typedef GetQuery\n   * @type {Object}\n   * @property {GetOptsType=} desc - If provided (even if empty), fetch topic description.\n   * @property {GetOptsType=} sub - If provided (even if empty), fetch topic subscriptions.\n   * @property {GetDataType=} data - If provided (even if empty), get messages.\n   */\n\n  /**\n   * @typedef GetOptsType\n   * @type {Object}\n   * @property {Date=} ims - \"If modified since\", fetch data only it was was modified since stated date.\n   * @property {number=} limit - Maximum number of results to return. Ignored when querying topic description.\n   */\n\n  /**\n   * @typedef GetDataType\n   * @type {Object}\n   * @property {number=} since - Load messages with seq id equal or greater than this value.\n   * @property {number=} before - Load messages with seq id lower than this number.\n   * @property {number=} limit - Maximum number of results to return.\n   */\n\n  /**\n   * Request topic metadata\n   *\n   * @param {string} topic - Name of the topic to query.\n   * @param {GetQuery} params - Parameters of the query. Use {@link Tinode.MetaGetBuilder} to generate.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  getMeta(topic, params) {\n    const pkt = this.#initPacket('get', topic);\n\n    pkt.get = mergeObj(pkt.get, params);\n\n    return this.#send(pkt, pkt.get.id);\n  }\n\n  /**\n   * Update topic's metadata: description, subscribtions.\n   *\n   * @param {string} topic - Topic to update.\n   * @param {SetParams} params - topic metadata to update.\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  setMeta(topic, params) {\n    const pkt = this.#initPacket('set', topic);\n    const what = [];\n\n    if (params) {\n      ['desc', 'sub', 'tags', 'cred', 'ephemeral'].forEach(function(key) {\n        if (params.hasOwnProperty(key)) {\n          what.push(key);\n          pkt.set[key] = params[key];\n        }\n      });\n\n      if (Array.isArray(params.attachments) && params.attachments.length > 0) {\n        pkt.extra = {\n          attachments: params.attachments.filter(ref => isUrlRelative(ref))\n        };\n      }\n    }\n\n    if (what.length == 0) {\n      return Promise.reject(new Error(\"Invalid {set} parameters\"));\n    }\n\n    return this.#send(pkt, pkt.set.id);\n  }\n\n  /**\n   * Range of message IDs to delete.\n   *\n   * @typedef DelRange\n   * @type {Object}\n   * @property {number} low - low end of the range, inclusive (closed).\n   * @property {number=} hi - high end of the range, exclusive (open).\n   */\n  /**\n   * Delete some or all messages in a topic.\n   *\n   * @param {string} topic - Topic name to delete messages from.\n   * @param {DelRange[]} list - Ranges of message IDs to delete.\n   * @param {boolean=} hard - Hard or soft delete\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  delMessages(topic, ranges, hard) {\n    const pkt = this.#initPacket('del', topic);\n\n    pkt.del.what = 'msg';\n    pkt.del.delseq = ranges;\n    pkt.del.hard = hard;\n\n    return this.#send(pkt, pkt.del.id);\n  }\n\n  /**\n   * Delete the topic alltogether. Requires Owner permission.\n   *\n   * @param {string} topicName - Name of the topic to delete\n   * @param {boolean} hard - hard-delete topic.\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  delTopic(topicName, hard) {\n    const pkt = this.#initPacket('del', topicName);\n    pkt.del.what = 'topic';\n    pkt.del.hard = hard;\n\n    return this.#send(pkt, pkt.del.id);\n  }\n\n  /**\n   * Delete subscription. Requires Share permission.\n   *\n   * @param {string} topicName - Name of the topic to delete\n   * @param {string} user - User ID to remove.\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  delSubscription(topicName, user) {\n    const pkt = this.#initPacket('del', topicName);\n    pkt.del.what = 'sub';\n    pkt.del.user = user;\n\n    return this.#send(pkt, pkt.del.id);\n  }\n\n  /**\n   * Delete credential. Always sent on <code>'me'</code> topic.\n   *\n   * @param {string} method - validation method such as <code>'email'</code> or <code>'tel'</code>.\n   * @param {string} value - validation value, i.e. <code>'alice@example.com'</code>.\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  delCredential(method, value) {\n    const pkt = this.#initPacket('del', Const.TOPIC_ME);\n    pkt.del.what = 'cred';\n    pkt.del.cred = {\n      meth: method,\n      val: value\n    };\n\n    return this.#send(pkt, pkt.del.id);\n  }\n\n  /**\n   * Request to delete account of the current user.\n   *\n   * @param {boolean} hard - hard-delete user.\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  delCurrentUser(hard) {\n    const pkt = this.#initPacket('del', null);\n    pkt.del.what = 'user';\n    pkt.del.hard = hard;\n\n    return this.#send(pkt, pkt.del.id).then(_ => {\n      this._myUID = null;\n    });\n  }\n\n  /**\n   * Notify server that a message or messages were read or received. Does NOT return promise.\n   *\n   * @param {string} topicName - Name of the topic where the mesage is being aknowledged.\n   * @param {string} what - Action being aknowledged, either <code>\"read\"</code> or <code>\"recv\"</code>.\n   * @param {number} seq - Maximum id of the message being acknowledged.\n   */\n  note(topicName, what, seq) {\n    if (seq <= 0 || seq >= Const.LOCAL_SEQID) {\n      throw new Error(`Invalid message id ${seq}`);\n    }\n\n    const pkt = this.#initPacket('note', topicName);\n    pkt.note.what = what;\n    pkt.note.seq = seq;\n    this.#send(pkt);\n  }\n\n  /**\n   * Broadcast a key-press notification to topic subscribers. Used to show\n   * typing notifications \"user X is typing...\".\n   *\n   * @param {string} topicName - Name of the topic to broadcast to.\n   * @param {string=} type - notification to send, default is 'kp'.\n   */\n  noteKeyPress(topicName, type) {\n    const pkt = this.#initPacket('note', topicName);\n    pkt.note.what = type || 'kp';\n    this.#send(pkt);\n  }\n\n  /**\n   * Send a video call notification to topic subscribers (including dialing,\n   * hangup, etc.).\n   *\n   * @param {string} topicName - Name of the topic to broadcast to.\n   * @param {int} seq - ID of the call message the event pertains to.\n   * @param {string} evt - Call event.\n   * @param {string} payload - Payload associated with this event (e.g. SDP string).\n   *\n   * @returns {Promise} Promise (for some call events) which will\n   *                    be resolved/rejected on receiving server reply\n   */\n  videoCall(topicName, seq, evt, payload) {\n    const pkt = this.#initPacket('note', topicName);\n    pkt.note.seq = seq;\n    pkt.note.what = 'call';\n    pkt.note.event = evt;\n    pkt.note.payload = payload;\n    this.#send(pkt, pkt.note.id);\n  }\n\n  /**\n   * Get a named topic, either pull it from cache or create a new instance.\n   * There is a single instance of topic for each name.\n   *\n   * @param {string} topicName - Name of the topic to get.\n   *\n   * @returns {Topic} Requested or newly created topic or <code>undefined</code> if topic name is invalid.\n   */\n  getTopic(topicName) {\n    let topic = this.#cacheGet('topic', topicName);\n    if (!topic && topicName) {\n      if (topicName == Const.TOPIC_ME) {\n        topic = new TopicMe();\n      } else if (topicName == Const.TOPIC_FND) {\n        topic = new TopicFnd();\n      } else {\n        topic = new Topic(topicName);\n      }\n      // Cache management.\n      this.#attachCacheToTopic(topic);\n      topic._cachePutSelf();\n      // Don't save to DB here: a record will be added when the topic is subscribed.\n    }\n    return topic;\n  }\n\n  /**\n   * Get a named topic from cache.\n   *\n   * @param {string} topicName - Name of the topic to get.\n   *\n   * @returns {Topic} Requested topic or <code>undefined</code> if topic is not found in cache.\n   */\n  cacheGetTopic(topicName) {\n    return this.#cacheGet('topic', topicName);\n  }\n\n  /**\n   * Remove named topic from cache.\n   *\n   * @param {string} topicName - Name of the topic to remove from cache.\n   */\n  cacheRemTopic(topicName) {\n    this.#cacheDel('topic', topicName);\n  }\n\n  /**\n   * Iterate over cached topics.\n   *\n   * @param {Function} func - callback to call for each topic.\n   * @param {Object} context - 'this' inside the 'func'.\n   */\n  mapTopics(func, context) {\n    this.#cacheMap('topic', func, context);\n  }\n\n  /**\n   * Check if named topic is already present in cache.\n   *\n   * @param {string} topicName - Name of the topic to check.\n   * @returns {boolean} true if topic is found in cache, false otherwise.\n   */\n  isTopicCached(topicName) {\n    return !!this.#cacheGet('topic', topicName);\n  }\n\n  /**\n   * Generate unique name like <code>'new123456'</code> suitable for creating a new group topic.\n   *\n   * @param {boolean} isChan - if the topic is channel-enabled.\n   * @returns {string} name which can be used for creating a new group topic.\n   */\n  newGroupTopicName(isChan) {\n    return (isChan ? Const.TOPIC_NEW_CHAN : Const.TOPIC_NEW) + this.getNextUniqueId();\n  }\n\n  /**\n   * Instantiate <code>'me'</code> topic or get it from cache.\n   *\n   * @returns {TopicMe} Instance of <code>'me'</code> topic.\n   */\n  getMeTopic() {\n    return this.getTopic(Const.TOPIC_ME);\n  }\n\n  /**\n   * Instantiate <code>'fnd'</code> (find) topic or get it from cache.\n   *\n   * @returns {Topic} Instance of <code>'fnd'</code> topic.\n   */\n  getFndTopic() {\n    return this.getTopic(Const.TOPIC_FND);\n  }\n\n  /**\n   * Create a new {@link LargeFileHelper} instance\n   *\n   * @returns {LargeFileHelper} instance of a {@link Tinode.LargeFileHelper}.\n   */\n  getLargeFileHelper() {\n    return new LargeFileHelper(this, Const.PROTOCOL_VERSION);\n  }\n\n  /**\n   * Get the UID of the the current authenticated user.\n   *\n   * @returns {string} UID of the current user or <code>undefined</code> if the session is not yet\n   * authenticated or if there is no session.\n   */\n  getCurrentUserID() {\n    return this._myUID;\n  }\n\n  /**\n   * Check if the given user ID is equal to the current user's UID.\n   *\n   * @param {string} uid - UID to check.\n   *\n   * @returns {boolean} true if the given UID belongs to the current logged in user.\n   */\n  isMe(uid) {\n    return this._myUID === uid;\n  }\n\n  /**\n   * Get login used for last successful authentication.\n   *\n   * @returns {string} login last used successfully or <code>undefined</code>.\n   */\n  getCurrentLogin() {\n    return this._login;\n  }\n\n  /**\n   * Return information about the server: protocol version and build timestamp.\n   *\n   * @returns {Object} build and version of the server or <code>null</code> if there is no connection or\n   * if the first server response has not been received yet.\n   */\n  getServerInfo() {\n    return this._serverInfo;\n  }\n\n  /**\n   * Report a topic for abuse. Wrapper for {@link Tinode#publish}.\n   *\n   * @param {string} action - the only supported action is 'report'.\n   * @param {string} target - name of the topic being reported.\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  report(action, target) {\n    return this.publish(Const.TOPIC_SYS, Drafty.attachJSON(null, {\n      'action': action,\n      'target': target\n    }));\n  }\n\n  /**\n   * Return server-provided configuration value.\n   *\n   * @param {string} name of the value to return.\n   * @param {Object} defaultValue to return in case the parameter is not set or not found.\n   *\n   * @returns {Object} named value.\n   */\n  getServerParam(name, defaultValue) {\n    return this._serverInfo && this._serverInfo[name] || defaultValue;\n  }\n\n  /**\n   * Toggle console logging. Logging is off by default.\n   *\n   * @param {boolean} enabled - Set to <code>true</code> to enable logging to console.\n   * @param {boolean} trimLongStrings - Set to <code>true</code> to trim long strings.\n   */\n  enableLogging(enabled, trimLongStrings) {\n    this._loggingEnabled = enabled;\n    this._trimLongStrings = enabled && trimLongStrings;\n  }\n\n  /**\n   * Set UI language to report to the server. Must be called before <code>'hi'</code> is sent, otherwise it will not be used.\n   *\n   * @param {string} hl - human (UI) language, like <code>\"en_US\"</code> or <code>\"zh-Hans\"</code>.\n   */\n  setHumanLanguage(hl) {\n    if (hl) {\n      this._humanLanguage = hl;\n    }\n  }\n\n  /**\n   * Check if given topic is online.\n   *\n   * @param {string} name of the topic to test.\n   * @returns {boolean} true if topic is online, false otherwise.\n   */\n  isTopicOnline(name) {\n    const topic = this.#cacheGet('topic', name);\n    return topic && topic.online;\n  }\n\n  /**\n   * Get access mode for the given contact.\n   *\n   * @param {string} name of the topic to query.\n   * @returns {AccessMode} access mode if topic is found, null otherwise.\n   */\n  getTopicAccessMode(name) {\n    const topic = this.#cacheGet('topic', name);\n    return topic ? topic.acs : null;\n  }\n\n  /**\n   * Include message ID into all subsequest messages to server instructin it to send aknowledgemens.\n   * Required for promises to function. Default is <code>\"on\"</code>.\n   *\n   * @param {boolean} status - Turn aknowledgemens on or off.\n   * @deprecated\n   */\n  wantAkn(status) {\n    if (status) {\n      this._messageId = Math.floor((Math.random() * 0xFFFFFF) + 0xFFFFFF);\n    } else {\n      this._messageId = 0;\n    }\n  }\n\n  // Callbacks:\n  /**\n   * Callback to report when the websocket is opened. The callback has no parameters.\n   *\n   * @type {onWebsocketOpen}\n   */\n  onWebsocketOpen = undefined;\n\n  /**\n   * @typedef ServerParams\n   *\n   * @type {Object}\n   * @property {string} ver - Server version\n   * @property {string} build - Server build\n   * @property {string=} sid - Session ID, long polling connections only.\n   */\n\n  /**\n   * @callback onConnect\n   * @param {number} code - Result code\n   * @param {string} text - Text epxplaining the completion, i.e \"OK\" or an error message.\n   * @param {ServerParams} params - Parameters returned by the server.\n   */\n  /**\n   * Callback to report when connection with Tinode server is established.\n   * @type {onConnect}\n   */\n  onConnect = undefined;\n\n  /**\n   * Callback to report when connection is lost. The callback has no parameters.\n   * @type {onDisconnect}\n   */\n  onDisconnect = undefined;\n\n  /**\n   * @callback onLogin\n   * @param {number} code - NUmeric completion code, same as HTTP status codes.\n   * @param {string} text - Explanation of the completion code.\n   */\n  /**\n   * Callback to report login completion.\n   * @type {onLogin}\n   */\n  onLogin = undefined;\n\n  /**\n   * Callback to receive <code>{ctrl}</code> (control) messages.\n   * @type {onCtrlMessage}\n   */\n  onCtrlMessage = undefined;\n\n  /**\n   * Callback to recieve <code>{data}</code> (content) messages.\n   * @type {onDataMessage}\n   */\n  onDataMessage = undefined;\n\n  /**\n   * Callback to receive <code>{pres}</code> (presence) messages.\n   * @type {onPresMessage}\n   */\n  onPresMessage = undefined;\n\n  /**\n   * Callback to receive all messages as objects.\n   * @type {onMessage}\n   */\n  onMessage = undefined;\n\n  /**\n   * Callback to receive all messages as unparsed text.\n   * @type {onRawMessage}\n   */\n  onRawMessage = undefined;\n\n  /**\n   * Callback to receive server responses to network probes. See {@link Tinode#networkProbe}\n   * @type {onNetworkProbe}\n   */\n  onNetworkProbe = undefined;\n\n  /**\n   * Callback to be notified when exponential backoff is iterating.\n   * @type {onAutoreconnectIteration}\n   */\n  onAutoreconnectIteration = undefined;\n};\n\n// Exported constants\nTinode.MESSAGE_STATUS_NONE = Const.MESSAGE_STATUS_NONE;\nTinode.MESSAGE_STATUS_QUEUED = Const.MESSAGE_STATUS_QUEUED;\nTinode.MESSAGE_STATUS_SENDING = Const.MESSAGE_STATUS_SENDING;\nTinode.MESSAGE_STATUS_FAILED = Const.MESSAGE_STATUS_FAILED;\nTinode.MESSAGE_STATUS_FATAL = Const.MESSAGE_STATUS_FATAL;\nTinode.MESSAGE_STATUS_SENT = Const.MESSAGE_STATUS_SENT;\nTinode.MESSAGE_STATUS_RECEIVED = Const.MESSAGE_STATUS_RECEIVED;\nTinode.MESSAGE_STATUS_READ = Const.MESSAGE_STATUS_READ;\nTinode.MESSAGE_STATUS_TO_ME = Const.MESSAGE_STATUS_TO_ME;\n\n// Unicode [del] symbol.\nTinode.DEL_CHAR = Const.DEL_CHAR;\n\n// Names of keys to server-provided configuration limits.\nTinode.MAX_MESSAGE_SIZE = 'maxMessageSize';\nTinode.MAX_SUBSCRIBER_COUNT = 'maxSubscriberCount';\nTinode.MAX_TAG_COUNT = 'maxTagCount';\nTinode.MAX_FILE_UPLOAD_SIZE = 'maxFileUploadSize';\nTinode.REQ_CRED_VALIDATORS = 'reqCred';\n"],"names":["_classStaticPrivateMethodGet","receiver","classConstructor","method","_classCheckPrivateStaticAccess","TypeError","AccessMode","constructor","acs","given","decode","want","mode","str","_BITMASK","_NONE","bitmask","_JOIN","_READ","_WRITE","_PRES","_APPROVE","_SHARE","_DELETE","_OWNER","m0","i","length","bit","charAt","toUpperCase","encode","val","_INVALID","res","update","upd","action","val0","parts","split","diff","a1","a2","toString","jsonHelper","setMode","m","updateMode","u","getMode","setGiven","g","updateGiven","getGiven","setWant","w","updateWant","getWant","getMissing","getExcessive","updateAll","isOwner","side","_checkFlag","call","isPresencer","isMuted","isJoiner","isReader","isWriter","isApprover","isAdmin","isSharer","isDeleter","flag","includes","Error","_classPrivateMethodInitSpec","obj","privateSet","_checkPrivateRedeclaration","add","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","Number","_classPrivateFieldInitSpec","privateMap","set","privateCollection","has","_classPrivateMethodGet","fn","_classPrivateFieldGet","descriptor","_classExtractFieldDescriptor","_classApplyDescriptorGet","get","_classPrivateFieldSet","_classApplyDescriptorSet","_comparator","WeakMap","_unique","_findNearest","WeakSet","_insertSorted","CBuffer","compare_","unique_","a","b","getAt","at","buffer","getLast","put","insert","arguments","Array","isArray","idx","_insertSorted2","delAt","r","splice","delRange","since","before","reset","forEach","callback","startIdx","beforeIdx","context","find","elem","nearest","_findNearest2","filter","count","isEmpty","arr","exact","start","end","pivot","found","CommError","message","code","name","PACKAGE_VERSION","PROTOCOL_VERSION","VERSION","LIBRARY","TOPIC_NEW","TOPIC_NEW_CHAN","TOPIC_ME","TOPIC_FND","TOPIC_SYS","TOPIC_CHAN","TOPIC_GRP","TOPIC_P2P","USER_NEW","LOCAL_SEQID","MESSAGE_STATUS_NONE","MESSAGE_STATUS_QUEUED","MESSAGE_STATUS_SENDING","MESSAGE_STATUS_FAILED","MESSAGE_STATUS_FATAL","MESSAGE_STATUS_SENT","MESSAGE_STATUS_RECEIVED","MESSAGE_STATUS_READ","MESSAGE_STATUS_TO_ME","EXPIRE_PROMISES_TIMEOUT","EXPIRE_PROMISES_PERIOD","RECV_TIMEOUT","DEFAULT_MESSAGES_PAGE","DEL_CHAR","_classStaticPrivateFieldSpecSet","_classCheckPrivateStaticFieldDescriptor","_classStaticPrivateFieldSpecGet","jsonParseHelper","WebSocketProvider","XHRProvider","NETWORK_ERROR","NETWORK_ERROR_TEXT","NETWORK_USER","NETWORK_USER_TEXT","_BOFF_BASE","_BOFF_MAX_ITER","_BOFF_JITTER","makeBaseUrl","host","protocol","version","apiKey","url","_boffTimer","_boffIteration","_boffClosed","_socket","_boffReconnect","_boffStop","_boffReset","_init_lp","_init_ws","Connection","config","version_","autoreconnect_","secure","autoreconnect","transport","_init_lp2","initialized","_init_ws2","_log","setNetworkProviders","wsProvider","xhrProvider","logger","l","connect","host_","force","Promise","reject","reconnect","disconnect","sendText","msg","isConnected","probe","backoffReset","_boffReset2","_boffReconnect2","clearTimeout","timeout","Math","pow","random","onAutoreconnectIteration","setTimeout","_","prom","catch","_boffStop2","XDR_UNSENT","XDR_OPENED","XDR_HEADERS_RECEIVED","XDR_LOADING","XDR_DONE","_lpURL","_poller","_sender","lp_sender","url_","sender","onreadystatechange","evt","readyState","status","open","lp_poller","resolve","poller","promiseCompleted","pkt","JSON","parse","responseText","ctrl","params","sid","send","onOpen","onMessage","onDisconnect","text","abort","err","OPEN","close","conn","onerror","onopen","onclose","onmessage","data","DB_VERSION","DB_NAME","IDBProvider","_onError","_logger","_mapObjects","DB","onError","initDatabase","req","onsuccess","event","db","target","result","disabled","error","onupgradeneeded","createObjectStore","keyPath","deleteDatabase","onblocked","isReady","updTopic","topic","trx","transaction","oncomplete","objectStore","_serializeTopic","commit","markTopicAsDeleted","_deleted","remTopic","delete","IDBKeyRange","only","bound","MAX_SAFE_INTEGER","mapTopics","_mapObjects2","deserializeTopic","src","_deserializeTopic","updUser","uid","pub","public","remUser","mapUsers","getUser","user","updSubscription","topicName","sub","_serializeSubscription","mapSubscriptions","getAll","addMessage","_serializeMessage","updMessageStatus","seq","_status","remMessages","from","to","range","readMessages","query","limit","openCursor","cursor","push","continue","setDatabaseProvider","idbProvider","source","_topic_fields","f","hasOwnProperty","tags","_tags","setAccessMode","read","unread","max","dst","getAccessMode","fields","MAX_FORM_ELEMENTS","MAX_PREVIEW_ATTACHMENTS","MAX_PREVIEW_DATA_SIZE","JSON_MIME_TYPE","DRAFTY_MIME_TYPE","ALLOWED_ENT_FIELDS","INLINE_STYLES","FMT_WEIGHT","ENTITY_TYPES","dataName","pack","test","re","slice","FORMAT_TAGS","AU","html_tag","md_tag","isVoid","BN","BR","CO","DL","EM","EX","FM","HD","HL","HT","IM","LN","MN","RW","QQ","ST","VC","VD","base64toObjectUrl","b64","contentType","bin","atob","buf","ArrayBuffer","Uint8Array","charCodeAt","URL","createObjectURL","Blob","type","base64toDataUrl","DECORATORS","props","href","id","act","ref","mime","Drafty","duration","size","tmpPreviewUrl","_tempPreview","previewUrl","downloadUrl","width","height","title","alt","state","preview","premime","poster","preref","txt","fmt","ent","init","plainText","content","lines","entityMap","entityIndex","blx","line","spans","entities","tag","concat","spannify","block","sort","toSpanTree","chunks","chunkify","drafty","draftify","extractEntities","ranges","entity","index","unique","tp","offset","len","map","s","append","first","second","insertImage","imageDesc","ex","refurl","bits","filename","urlPromise","_processing","then","insertVideo","videoDesc","urls","insertAudio","audioDesc","videoCall","audioOnly","aonly","updateVideoCall","assign","quote","header","body","appendLineBreak","mention","appendLink","linkData","appendImage","appendAudio","attachFile","attachmentDesc","wrapInto","style","wrapAsForm","insertButton","actionType","actionValue","refUrl","indexOf","appendButton","attachJSON","UNSAFE_toHTML","doc","tree","draftyToTree","htmlFormatter","values","join","treeBottomUp","format","original","formatter","shorten","light","shortenTree","lightEntity","treeToDrafty","forwardedContent","rmMention","node","parent","treeTopDown","lTrim","replyContent","convMNnQQnBR","startsWith","children","attachmentsToEnd","forwarding","toPlainText","isPlainText","toMarkdown","mdFormatter","def","isValid","txt_type","hasAttachments","attachments","hasEntities","styles","sanitizeEntities","copyEntData","getDownloadUrl","entData","isProcessing","getPreviewUrl","getEntitySize","getEntityMimeType","tagName","attrValue","getContentType","span","chunk","chld","re_start","re_end","exec","start_offset","lastIndexOf","end_offset","last","spansToTree","flatten","child","addNode","n","substring","att","subspans","inner","keymap","c","keys","newKey","transformer","stack","pop","tail","shortener","allow","lightCopy","trimStart","shift","match","extracted","el","startAt","plain","entries","dc","module","exports","isUrlRelative","addURLParam","relUrl","window","location","origin","searchParams","LargeFileHelper","tinode","_tinode","_version","_apiKey","_authToken","getAuthToken","xhr","uploadWithBaseUrl","baseUrl","avatarFor","onProgress","onSuccess","onFailure","base","endsWith","instance","setRequestHeader","token","toResolve","toReject","upload","onprogress","e","lengthComputable","loaded","total","onload","response","statusText","onabort","form","FormData","getNextUniqueId","_secure","_host","download","relativeUrl","mimetype","responseType","link","document","createElement","display","setAttribute","appendChild","click","removeChild","revokeObjectURL","reader","FileReader","readAsText","cancel","setNetworkProvider","_get_desc_ims","_get_subs_ims","MetaGetBuilder","what","withData","withLaterData","_maxSeq","withEarlierData","_minSeq","withDesc","ims","withLaterDesc","_get_desc_ims2","withSub","userOrTopic","opts","getType","withOneSub","withLaterOneSub","_lastSubsUpdate","withLaterSub","_get_subs_ims2","withTags","withCred","withDel","withLaterDel","_maxDel","extract","build","getOwnPropertyNames","updated","isP2PType","Const","mergeObj","mergeToCache","normalizeArray","Topic","callbacks","created","touched","Date","private","trusted","_users","_queuedSeqId","_noEarlierMsgs","_recvNotificationTimer","_credentials","_messageVersions","_messages","_attached","_new","_delayedLeaveTimer","onData","onMeta","onPres","onInfo","onMetaDesc","onMetaSub","onSubsUpdated","onTagsUpdated","onCredsUpdated","onDeleteTopic","onAllMessagesReceived","topicType","types","isMeTopicName","isGroupTopicName","isP2PTopicName","isCommTopicName","isNewGroupTopicName","isChannelTopicName","isSubscribed","subscribe","getParams","setParams","_cacheDelSelf","_cachePutSelf","ts","me","getMeTopic","desc","_noForwarding","_processMetaDesc","createMessage","noEcho","publish","publishMessage","_sending","_failed","swapMessageId","_maybeUpdateMessageVersionsCache","_routeData","publishDraft","_getQueuedSeqId","getCurrentUserID","noecho","_db","_cancelled","_fatal","leave","unsub","_resetSub","_gone","leaveDelayed","delay","getMeta","getMessagesPage","forward","startMetaQuery","_loadMessages","promise","setMeta","_processMetaSub","_processMetaTags","cred","_processMetaCreds","subscriber","am","invite","archive","arch","delMessages","hard","r1","r2","low","hi","tosend","reduce","out","del","flushMessageRange","flushMessage","delMessagesAll","hardDel","_all","delMessagesList","list","prev","delMessagesEdits","messageVersions","delTopic","delSubscription","note","_updateReadRecv","_refreshContact","noteRecv","noteRead","noteKeyPress","noteRecording","payload","oldVal","doUpdate","recv","userDesc","_cacheGetUser","p2pPeerDesc","subscribers","cb","origSeq","versions","messages","sinceId","beforeId","msgs","unused1","unused2","_isReplacementMsg","latest","latestMsgVersion","_origTs","_origSeq","findMessage","latestMessage","maxMsgSeq","minMsgSeq","maxClearId","messageCount","queuedMessages","msgReceiptCount","msgReadCount","msgRecvCount","msgHasMoreMessages","newer","isNewMessage","seqId","fromId","untilId","newSeqId","numMessages","cancelSend","msgStatus","getDefaultAccess","defacs","isArchived","isMeType","isChannelType","isGroupType","isCommType","isMe","head","replace","targetSeq","parseInt","targetMsg","outgoing","webrtc","incoming","_routeMeta","meta","_processDelMessages","clear","delseq","_routePres","pres","online","isTopicCached","dacs","_routeInfo","info","subs","deleted","_updateCachedUser","creds","_allMessagesReceived","cached","_cachePutUser","_updateReceived","TopicMe","onContactUpdate","turnOff","_myUID","cont","seen","when","updateCount","cacheRemTopic","getTopic","cr","findIndex","meth","done","resp","cacheGetTopic","ua","dummy","delCredential","contacts","getContact","getCredentials","TopicFnd","_contacts","indexBy","getPrototypeOf","prototype","date","isNaN","isValidDate","d","getTime","rfc3339DateString","pad","sp","repeat","millis","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","ignore","prop","cache","newval","simplify","t","trim","toLowerCase","item","pos","ary","DBCache","WebSocket","XMLHttpRequest","IndexedDBProvider","indexedDB","initForNonBrowserApp","chars","btoa","global","output","charCode","bc","bs","fromCharCode","detectTransport","b64EncodeUnicode","encodeURIComponent","toSolidBytes","p1","jsonBuildHelper","jsonLoggerHelper","getBrowserInfo","product","reactnative","priority","tmp","substr","tokens","m2","v","minor","_makePromise","_execPromise","_send","_dispatchMessage","_connectionOpen","_disconnected","_getUserAgent","_initPacket","_cachePut","_cacheGet","_cacheDel","_cacheMap","_attachCacheToTopic","_loginSuccessful","Tinode","onComplete","floor","_appName","appName","_platform","platform","navigator","_browser","userAgent","_hwos","_humanLanguage","language","_connection","_dispatchMessage2","_connectionOpen2","_disconnected2","_persist","persist","_cacheGet2","_attachCacheToTopic2","_cachePut2","all","_loggingEnabled","dateString","_len","args","_key","console","log","credential","getVersion","getLibrary","isNullValue","_messageId","clearStorage","initStorage","networkProbe","isAuthenticated","_authenticated","authorizeURL","parsed","account","scheme","secret","login","_initPacket2","acc","tmpscheme","tmpsecret","extra","_send2","createAccount","_loginSuccessful2","createAccountBasic","username","password","updateAccountBasic","hello","_serverInfo","onConnect","setDeviceToken","dt","sent","_deviceToken","loginBasic","uname","_login","loginToken","requestResetAuthSecret","expires","now","setAuthToken","dft","oobNotification","_trimLongStrings","stringify","xfrom","finally","modeGiven","modeWant","delCurrentUser","_cacheDel2","func","_cacheMap2","newGroupTopicName","isChan","getFndTopic","getLargeFileHelper","getCurrentLogin","getServerInfo","report","getServerParam","defaultValue","enableLogging","enabled","trimLongStrings","setHumanLanguage","hl","isTopicOnline","getTopicAccessMode","wantAkn","_makePromise2","_pendingPromises","_execPromise2","onOK","errorText","_inPacketCount","onRawMessage","onNetworkProbe","onCtrlMessage","onMetaMessage","onDataMessage","onPresMessage","onInfoMessage","_expirePromises","setInterval","clearInterval","_getUserAgent2","_cache","_cacheDelUser","onLogin","MAX_MESSAGE_SIZE","MAX_SUBSCRIBER_COUNT","MAX_TAG_COUNT","MAX_FILE_UPLOAD_SIZE","REQ_CRED_VALIDATORS"],"sourceRoot":""}